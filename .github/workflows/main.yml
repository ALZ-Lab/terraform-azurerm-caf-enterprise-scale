name: 'Tests'

on:
  push:
    branches:
      - "main"
      - "dev"
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        #terraform_version: [0.12.29, 0.13.0, 0.13.5, 0.14.0]
        terraform_version: [0.14.0]
        #azurerm_version: [2.34.0, 2.35.0, 2.36.0, 2.37.0, 2.38.0, 2.39.0]
        azurerm_version: [2.39.0]
    env:
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      TF_VERSION: ${{ matrix.terraform_version }}
      TF_AZ_VERSION: ${{ matrix.azurerm_version }}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2

      - name: 'Setup terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ matrix.terraform_version }}
          
      - name: 'Generate id'
        run: make tf-generate
        id: root_id

      - name: 'Replace provider version'
        run: make tf-replace
        
      - name: 'Initialize terraform'
        run: make tf-init

      - name: 'Plan terraform'
        run: make tf-plan

      # - name: 'Apply terraform'
      #   run: make tf-apply
      #   working-directory: './tests/deployment'

      # - name: 'Destroy terraform'
      #   run: make tf-destroy
      #   working-directory: './tests/deployment'

