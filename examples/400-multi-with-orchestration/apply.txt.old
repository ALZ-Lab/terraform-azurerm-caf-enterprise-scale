module.core.data.azurerm_client_config.current: Reading...
module.core.data.azurerm_client_config.current: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9MjEzODI0NjUtMWZjZi00MWU5LWE5NzktMjNjN2Q4ZmQ5ZDM3O3N1YnNjcmlwdGlvbklkPTExZWIyYTQ5LWYyYmUtNDhlZS1hMWIzLTExM2EwMWQ3OWZmYzt0ZW5hbnRJZD1jNTAwZDhhZi03MTVmLTQ3YTgtODI2ZS0wN2JlNDU4ODM2YmM=]
data.azurerm_client_config.current: Reading...
data.azurerm_client_config.current: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9MjEzODI0NjUtMWZjZi00MWU5LWE5NzktMjNjN2Q4ZmQ5ZDM3O3N1YnNjcmlwdGlvbklkPTExZWIyYTQ5LWYyYmUtNDhlZS1hMWIzLTExM2EwMWQ3OWZmYzt0ZW5hbnRJZD1jNTAwZDhhZi03MTVmLTQ3YTgtODI2ZS0wN2JlNDU4ODM2YmM=]
module.core.module.alz.data.azurerm_policy_set_definition.external_lookup["/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad"]: Reading...
module.core.module.alz.data.azurerm_policy_set_definition.external_lookup["/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a"]: Reading...
module.core.module.alz.data.azurerm_policy_set_definition.external_lookup["/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad]
module.core.module.alz.data.azurerm_policy_set_definition.external_lookup["/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d19ae5f1-b303-4b82-9ca8-7682749faf0c"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0868462e-646c-4fe3-9ced-a733534b6a2c"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c99ce9c1-ced7-4c3e-aca0-10e69ce0cb02"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d847d34b-9337-4e2d-99a5-767e5ac9c582"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0fdf0491-d080-4575-b627-ad0e843cba0f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d19ae5f1-b303-4b82-9ca8-7682749faf0c"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/d19ae5f1-b303-4b82-9ca8-7682749faf0c]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/32133ab0-ee4b-4b44-98d6-042180979d50"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/06695360-db88-47f6-b976-7500d4297475"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c99ce9c1-ced7-4c3e-aca0-10e69ce0cb02"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/c99ce9c1-ced7-4c3e-aca0-10e69ce0cb02]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0fdf0491-d080-4575-b627-ad0e843cba0f"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/0fdf0491-d080-4575-b627-ad0e843cba0f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0868462e-646c-4fe3-9ced-a733534b6a2c"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/0868462e-646c-4fe3-9ced-a733534b6a2c]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d847d34b-9337-4e2d-99a5-767e5ac9c582"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/d847d34b-9337-4e2d-99a5-767e5ac9c582]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b4fe1a3b-0715-4c6c-a5ea-ffc33cf823cb"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c717fb0c-d118-4c43-ab3d-ece30ac81fb3"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c9ddb292-b203-4738-aead-18e2716e858f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/06695360-db88-47f6-b976-7500d4297475"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/06695360-db88-47f6-b976-7500d4297475]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/9adab2a5-05ba-4fbd-831a-5bf958d04218"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ac673a9a-f77d-4846-b2d8-a57f8e1c01d4"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/32133ab0-ee4b-4b44-98d6-042180979d50"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/32133ab0-ee4b-4b44-98d6-042180979d50]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/e2dd799a-a932-4e9d-ac17-d473bc3c6c10"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c717fb0c-d118-4c43-ab3d-ece30ac81fb3"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/c717fb0c-d118-4c43-ab3d-ece30ac81fb3]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c9ddb292-b203-4738-aead-18e2716e858f"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/c9ddb292-b203-4738-aead-18e2716e858f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/59759c62-9a22-4cdf-ae64-074495983fef"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/90bd4cb3-9f59-45f7-a6ca-f69db2726671"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b4fe1a3b-0715-4c6c-a5ea-ffc33cf823cb"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b4fe1a3b-0715-4c6c-a5ea-ffc33cf823cb]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ac673a9a-f77d-4846-b2d8-a57f8e1c01d4"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/ac673a9a-f77d-4846-b2d8-a57f8e1c01d4]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5c3bc7b8-a64c-4e08-a9cd-7ff0f31e1138"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/e2dd799a-a932-4e9d-ac17-d473bc3c6c10"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/e2dd799a-a932-4e9d-ac17-d473bc3c6c10]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ed66d4f5-8220-45dc-ab4a-20d1749c74e6"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/9adab2a5-05ba-4fbd-831a-5bf958d04218"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/9adab2a5-05ba-4fbd-831a-5bf958d04218]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/59759c62-9a22-4cdf-ae64-074495983fef"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/59759c62-9a22-4cdf-ae64-074495983fef]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/11ac78e3-31bc-4f0c-8434-37ab963cea07"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/90bd4cb3-9f59-45f7-a6ca-f69db2726671"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/90bd4cb3-9f59-45f7-a6ca-f69db2726671]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/e9585a95-5b8c-4d03-b193-dc7eb5ac4c32"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/08ba64b8-738f-4918-9686-730d2ed79c7d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c9299215-ae47-4f50-9c54-8a392f68a052"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ed66d4f5-8220-45dc-ab4a-20d1749c74e6"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/ed66d4f5-8220-45dc-ab4a-20d1749c74e6]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/08ba64b8-738f-4918-9686-730d2ed79c7d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/08ba64b8-738f-4918-9686-730d2ed79c7d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5c3bc7b8-a64c-4e08-a9cd-7ff0f31e1138"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/5c3bc7b8-a64c-4e08-a9cd-7ff0f31e1138]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/e9585a95-5b8c-4d03-b193-dc7eb5ac4c32"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/e9585a95-5b8c-4d03-b193-dc7eb5ac4c32]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/11ac78e3-31bc-4f0c-8434-37ab963cea07"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/11ac78e3-31bc-4f0c-8434-37ab963cea07]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6df98d03-368a-4438-8730-a93c4d7693d6"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c9299215-ae47-4f50-9c54-8a392f68a052"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/c9299215-ae47-4f50-9c54-8a392f68a052]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0b026355-49cb-467b-8ac4-f777874e175a"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b99b73e7-074b-4089-9395-b7236f094491"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b318f84a-b872-429b-ac6d-a01b96814452"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c84e5349-db6d-4769-805e-e14037dab9b5"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b99b73e7-074b-4089-9395-b7236f094491"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b99b73e7-074b-4089-9395-b7236f094491]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6df98d03-368a-4438-8730-a93c4d7693d6"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/6df98d03-368a-4438-8730-a93c4d7693d6]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0b026355-49cb-467b-8ac4-f777874e175a"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/0b026355-49cb-467b-8ac4-f777874e175a]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/053d3325-282c-4e5c-b944-24faffd30d77"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7a860e27-9ca2-4fc6-822d-c2d248c300df"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b318f84a-b872-429b-ac6d-a01b96814452"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b318f84a-b872-429b-ac6d-a01b96814452]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c84e5349-db6d-4769-805e-e14037dab9b5"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/c84e5349-db6d-4769-805e-e14037dab9b5]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/21a8cd35-125e-4d13-b82d-2e19b7208bb7"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7a860e27-9ca2-4fc6-822d-c2d248c300df"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/7a860e27-9ca2-4fc6-822d-c2d248c300df]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/437914ee-c176-4fff-8986-7e05eb971365"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/43d6e3bd-fc6a-4b44-8b4d-2151d8736a11"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f0fcf93c-c063-4071-9668-c47474bd3564"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/053d3325-282c-4e5c-b944-24faffd30d77"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/053d3325-282c-4e5c-b944-24faffd30d77]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/83c6fe0f-2316-444a-99a1-1ecd8a7872ca"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/8e86a5b6-b9bd-49d1-8e21-4bb8a0862222"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/21a8cd35-125e-4d13-b82d-2e19b7208bb7"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/21a8cd35-125e-4d13-b82d-2e19b7208bb7]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/91cb9edd-cd92-4d2f-b2f2-bdd8d065a3d4"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/942bd215-1a66-44be-af65-6a1c0318dbe2"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/43d6e3bd-fc6a-4b44-8b4d-2151d8736a11"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/43d6e3bd-fc6a-4b44-8b4d-2151d8736a11]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f0fcf93c-c063-4071-9668-c47474bd3564"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/f0fcf93c-c063-4071-9668-c47474bd3564]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/83c6fe0f-2316-444a-99a1-1ecd8a7872ca"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/83c6fe0f-2316-444a-99a1-1ecd8a7872ca]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/437914ee-c176-4fff-8986-7e05eb971365"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/437914ee-c176-4fff-8986-7e05eb971365]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/8e86a5b6-b9bd-49d1-8e21-4bb8a0862222"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/8e86a5b6-b9bd-49d1-8e21-4bb8a0862222]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/2fb86bf3-d221-43d1-96d1-2434af34eaa0"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/91cb9edd-cd92-4d2f-b2f2-bdd8d065a3d4"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/91cb9edd-cd92-4d2f-b2f2-bdd8d065a3d4]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6c66c325-74c8-42fd-a286-a74b0e2939d8"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/3be22e3b-d919-47aa-805e-8985dbeb0ad9"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/942bd215-1a66-44be-af65-6a1c0318dbe2"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/942bd215-1a66-44be-af65-6a1c0318dbe2]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/3c1b3629-c8f8-4bf6-862c-037cb9094038"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ee40564d-486e-4f68-a5ca-7a621edae0fb"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/82bf5b87-728b-4a74-ba4d-6123845cf542"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b0e86710-7fb7-4a6c-a064-32e9b829509e"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/2fb86bf3-d221-43d1-96d1-2434af34eaa0"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/2fb86bf3-d221-43d1-96d1-2434af34eaa0]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/74c30959-af11-47b3-9ed2-a26e03f427a3"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/82bf5b87-728b-4a74-ba4d-6123845cf542"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/82bf5b87-728b-4a74-ba4d-6123845cf542]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/6c66c325-74c8-42fd-a286-a74b0e2939d8"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/6c66c325-74c8-42fd-a286-a74b0e2939d8]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/3c1b3629-c8f8-4bf6-862c-037cb9094038"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/3c1b3629-c8f8-4bf6-862c-037cb9094038]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/aaa64d2d-2fa3-45e5-b332-0b031b9b30e8"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/4da21710-ce6f-4e06-8cdb-5cc4c93ffbee"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b889a06c-ec72-4b03-910a-cb169ee18721"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b0e86710-7fb7-4a6c-a064-32e9b829509e"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/b0e86710-7fb7-4a6c-a064-32e9b829509e]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/3be22e3b-d919-47aa-805e-8985dbeb0ad9"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/3be22e3b-d919-47aa-805e-8985dbeb0ad9]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/ee40564d-486e-4f68-a5ca-7a621edae0fb"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/ee40564d-486e-4f68-a5ca-7a621edae0fb]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b7021b2b-08fd-4dc0-9de7-3c6ece09faf9"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/bcff79fb-2b0d-47c9-97e5-3023479b00d1"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/74c30959-af11-47b3-9ed2-a26e03f427a3"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/74c30959-af11-47b3-9ed2-a26e03f427a3]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/bc05b96c-0b36-4ca9-82f0-5c53f96ce05a"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86"]: Read complete after 1s [id=/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/75973700-529f-4de2-b794-fb9b6781b6b0"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/4da21710-ce6f-4e06-8cdb-5cc4c93ffbee"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/4da21710-ce6f-4e06-8cdb-5cc4c93ffbee]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5e1de0e3-42cb-4ebc-a86d-61d0c619ca48"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/74c5a0ae-5e48-4738-b093-65e23a060488"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/bc05b96c-0b36-4ca9-82f0-5c53f96ce05a"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/bc05b96c-0b36-4ca9-82f0-5c53f96ce05a]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b79fa14e-238a-4c2d-b376-442ce508fc84"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b7021b2b-08fd-4dc0-9de7-3c6ece09faf9"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b7021b2b-08fd-4dc0-9de7-3c6ece09faf9]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/bcff79fb-2b0d-47c9-97e5-3023479b00d1"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/bcff79fb-2b0d-47c9-97e5-3023479b00d1]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/50ea7265-7d8c-429e-9a7d-ca1f410191c3"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b889a06c-ec72-4b03-910a-cb169ee18721"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b889a06c-ec72-4b03-910a-cb169ee18721]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/75973700-529f-4de2-b794-fb9b6781b6b0"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/75973700-529f-4de2-b794-fb9b6781b6b0]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d389df0a-e0d7-4607-833c-75a6fdac2c2d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/aaa64d2d-2fa3-45e5-b332-0b031b9b30e8"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/aaa64d2d-2fa3-45e5-b332-0b031b9b30e8]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b79fa14e-238a-4c2d-b376-442ce508fc84"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b79fa14e-238a-4c2d-b376-442ce508fc84]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7bd000e3-37c7-4928-9f31-86c4b77c5c45"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/74c5a0ae-5e48-4738-b093-65e23a060488"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/74c5a0ae-5e48-4738-b093-65e23a060488]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c4bc6f10-cb41-49eb-b000-d5ab82e2a091"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5e1de0e3-42cb-4ebc-a86d-61d0c619ca48"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/5e1de0e3-42cb-4ebc-a86d-61d0c619ca48]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/50ea7265-7d8c-429e-9a7d-ca1f410191c3"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/50ea7265-7d8c-429e-9a7d-ca1f410191c3]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1f6e93e8-6b31-41b1-83f6-36e449a42579"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/25a70cc8-2bd4-47f1-90b6-1478e4662c96"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d389df0a-e0d7-4607-833c-75a6fdac2c2d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/d389df0a-e0d7-4607-833c-75a6fdac2c2d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7590a335-57cf-4c95-babd-ecbc8fafeb1f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/bef3f64c-5290-43b7-85b0-9b254eef4c47"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7bd000e3-37c7-4928-9f31-86c4b77c5c45"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/7bd000e3-37c7-4928-9f31-86c4b77c5c45]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/c4bc6f10-cb41-49eb-b000-d5ab82e2a091"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/c4bc6f10-cb41-49eb-b000-d5ab82e2a091]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/25a70cc8-2bd4-47f1-90b6-1478e4662c96"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/25a70cc8-2bd4-47f1-90b6-1478e4662c96]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/da9b4ae8-5ddc-48c5-b9c0-25f8abf7a3d6"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d56a5a7c-72d7-42bc-8ceb-3baf4c0eae03"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/bef3f64c-5290-43b7-85b0-9b254eef4c47"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/bef3f64c-5290-43b7-85b0-9b254eef4c47]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/7590a335-57cf-4c95-babd-ecbc8fafeb1f"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/7590a335-57cf-4c95-babd-ecbc8fafeb1f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/baf19753-7502-405f-8745-370519b20483"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1f6e93e8-6b31-41b1-83f6-36e449a42579"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1f6e93e8-6b31-41b1-83f6-36e449a42579]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b40e7bcd-a1e5-47fe-b9cf-2f534d0bfb7d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/4ec38ebc-381f-45ee-81a4-acbc4be878f8"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/baf19753-7502-405f-8745-370519b20483"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/baf19753-7502-405f-8745-370519b20483]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/2370a3c1-4a25-4283-a91a-c9c1a145fb2f"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/d56a5a7c-72d7-42bc-8ceb-3baf4c0eae03"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/d56a5a7c-72d7-42bc-8ceb-3baf4c0eae03]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5ee9e9ed-0b42-41b7-8c9c-3cfb2fbe2069"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/da9b4ae8-5ddc-48c5-b9c0-25f8abf7a3d6"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/da9b4ae8-5ddc-48c5-b9c0-25f8abf7a3d6]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/b40e7bcd-a1e5-47fe-b9cf-2f534d0bfb7d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/b40e7bcd-a1e5-47fe-b9cf-2f534d0bfb7d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/4ec38ebc-381f-45ee-81a4-acbc4be878f8"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/4ec38ebc-381f-45ee-81a4-acbc4be878f8]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/deacecc0-9f84-44d2-bb82-46f32d766d43"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1c210e94-a481-4beb-95fa-1571b434fb04"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/e016b22b-e0eb-436d-8fd7-160c4eaed6e2"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/5ee9e9ed-0b42-41b7-8c9c-3cfb2fbe2069"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/5ee9e9ed-0b42-41b7-8c9c-3cfb2fbe2069]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/237e0f7e-b0e8-4ec4-ad46-8c12cb66d673"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/fbc14a67-53e4-4932-abcc-2049c6706009"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/2370a3c1-4a25-4283-a91a-c9c1a145fb2f"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/2370a3c1-4a25-4283-a91a-c9c1a145fb2f]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/765266ab-e40e-4c61-bcb2-5a5275d0b7c0"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/deacecc0-9f84-44d2-bb82-46f32d766d43"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/deacecc0-9f84-44d2-bb82-46f32d766d43]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/1c210e94-a481-4beb-95fa-1571b434fb04"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/1c210e94-a481-4beb-95fa-1571b434fb04]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e"]: Reading...
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/e016b22b-e0eb-436d-8fd7-160c4eaed6e2"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/e016b22b-e0eb-436d-8fd7-160c4eaed6e2]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/fbc14a67-53e4-4932-abcc-2049c6706009"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/fbc14a67-53e4-4932-abcc-2049c6706009]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/237e0f7e-b0e8-4ec4-ad46-8c12cb66d673"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/237e0f7e-b0e8-4ec4-ad46-8c12cb66d673]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/765266ab-e40e-4c61-bcb2-5a5275d0b7c0"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/765266ab-e40e-4c61-bcb2-5a5275d0b7c0]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648]
module.core.module.alz.data.azurerm_policy_definition.external_lookup["/providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e"]: Read complete after 0s [id=/providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e]
module.management.data.azurerm_client_config.current: Reading...
module.management.data.azurerm_client_config.current: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9MjEzODI0NjUtMWZjZi00MWU5LWE5NzktMjNjN2Q4ZmQ5ZDM3O3N1YnNjcmlwdGlvbklkPTExZWIyYTQ5LWYyYmUtNDhlZS1hMWIzLTExM2EwMWQ3OWZmYzt0ZW5hbnRJZD1jNTAwZDhhZi03MTVmLTQ3YTgtODI2ZS0wN2JlNDU4ODM2YmM=]
module.connectivity.data.azurerm_client_config.current: Reading...
module.connectivity.data.azurerm_client_config.current: Read complete after 0s [id=Y2xpZW50Q29uZmlncy9jbGllbnRJZD0wNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDY7b2JqZWN0SWQ9MjEzODI0NjUtMWZjZi00MWU5LWE5NzktMjNjN2Q4ZmQ5ZDM3O3N1YnNjcmlwdGlvbklkPTExZWIyYTQ5LWYyYmUtNDhlZS1hMWIzLTExM2EwMWQ3OWZmYzt0ZW5hbnRJZD1jNTAwZDhhZi03MTVmLTQ3YTgtODI2ZS0wN2JlNDU4ODM2YmM=]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.adf.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.afs.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.agentsvc.azure-automation.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.analysis.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.api.azureml.ms"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azconfig.io"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azure-api.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azure-automation.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azure-devices-provisioning.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azure-devices.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azurecr.io"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azurehdinsight.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azurehealthcareapis.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azurestaticapps.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azuresynapse.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.azurewebsites.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.batch.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.blob.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.cassandra.cosmos.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.cognitiveservices.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.database.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.datafactory.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.dev.azuresynapse.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.developer.azure-api.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.dfs.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.dicom.azurehealthcareapis.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.digitaltwins.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.directline.botframework.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.documents.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.eventgrid.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.file.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.gremlin.cosmos.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.guestconfiguration.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.his.arc.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.kubernetesconfiguration.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.managedhsm.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.mariadb.database.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.media.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.mongo.cosmos.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.monitor.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.mysql.database.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.ne.backup.windowsazure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.northeurope.azmk8s.io"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.northeurope.kusto.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.notebooks.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.ods.opinsights.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.oms.opinsights.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.pbidedicated.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.postgres.database.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.prod.migration.windowsazure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.purview.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.purviewstudio.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.queue.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.redis.cache.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.redisenterprise.cache.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.search.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.service.signalr.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.servicebus.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.siterecovery.windowsazure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.sql.azuresynapse.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.table.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.table.cosmos.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.tip1.powerquery.microsoft.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.token.botframework.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.vaultcore.azure.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.web.core.windows.net"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com"] will be created
  + resource "azurerm_private_dns_zone" "connectivity" {
      + id                                                    = (known after apply)
      + max_number_of_record_sets                             = (known after apply)
      + max_number_of_virtual_network_links                   = (known after apply)
      + max_number_of_virtual_network_links_with_registration = (known after apply)
      + name                                                  = "privatelink.webpubsub.azure.com"
      + number_of_record_sets                                 = (known after apply)
      + resource_group_name                                   = "myorg-dns"
      + tags                                                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + soa_record {
          + email         = (known after apply)
          + expire_time   = (known after apply)
          + fqdn          = (known after apply)
          + host_name     = (known after apply)
          + minimum_ttl   = (known after apply)
          + refresh_time  = (known after apply)
          + retry_time    = (known after apply)
          + serial_number = (known after apply)
          + tags          = (known after apply)
          + ttl           = (known after apply)
        }
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.adf.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.adf.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.afs.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.afs.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.agentsvc.azure-automation.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.agentsvc.azure-automation.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.analysis.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.analysis.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.api.azureml.ms"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.api.azureml.ms"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azconfig.io"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azconfig.io"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azure-api.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azure-api.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azure-automation.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azure-automation.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azure-devices-provisioning.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azure-devices-provisioning.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azure-devices.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azure-devices.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azurecr.io"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azurecr.io"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azurehdinsight.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azurehdinsight.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azurehealthcareapis.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azurehealthcareapis.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azurestaticapps.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azurestaticapps.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azuresynapse.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azuresynapse.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.azurewebsites.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.azurewebsites.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.batch.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.batch.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.blob.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.blob.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.cassandra.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.cassandra.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.cognitiveservices.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.cognitiveservices.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.database.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.database.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.datafactory.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.datafactory.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.dev.azuresynapse.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.dev.azuresynapse.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.developer.azure-api.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.developer.azure-api.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.dfs.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.dfs.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.dicom.azurehealthcareapis.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.dicom.azurehealthcareapis.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.digitaltwins.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.digitaltwins.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.directline.botframework.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.directline.botframework.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.documents.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.documents.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.eventgrid.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.eventgrid.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.file.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.file.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.gremlin.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.gremlin.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.guestconfiguration.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.guestconfiguration.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.his.arc.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.his.arc.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.kubernetesconfiguration.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.kubernetesconfiguration.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.managedhsm.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.managedhsm.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.mariadb.database.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.mariadb.database.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.media.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.media.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.mongo.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.mongo.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.monitor.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.monitor.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.mysql.database.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.mysql.database.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.ne.backup.windowsazure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.ne.backup.windowsazure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.northeurope.azmk8s.io"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.northeurope.azmk8s.io"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.northeurope.kusto.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.northeurope.kusto.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.notebooks.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.notebooks.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.ods.opinsights.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.ods.opinsights.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.oms.opinsights.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.oms.opinsights.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.pbidedicated.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.pbidedicated.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.postgres.database.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.postgres.database.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.prod.migration.windowsazure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.prod.migration.windowsazure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.purview.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.purview.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.purviewstudio.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.purviewstudio.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.queue.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.queue.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.redis.cache.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.redis.cache.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.redisenterprise.cache.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.redisenterprise.cache.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.search.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.search.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.service.signalr.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.service.signalr.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.servicebus.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.servicebus.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.siterecovery.windowsazure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.siterecovery.windowsazure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.sql.azuresynapse.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.sql.azuresynapse.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.table.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.table.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.table.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.table.cosmos.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.tip1.powerquery.microsoft.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.tip1.powerquery.microsoft.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.token.botframework.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.token.botframework.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.vaultcore.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.vaultcore.azure.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.web.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.web.core.windows.net"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + private_dns_zone_name = "privatelink.webpubsub.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_private_dns_zone_virtual_network_link" "connectivity" {
      + id                    = (known after apply)
      + name                  = "11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + private_dns_zone_name = "privatelink.webpubsub.azure.com"
      + registration_enabled  = false
      + resource_group_name   = "myorg-dns"
      + tags                  = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope"] will be created
  + resource "azurerm_resource_group" "connectivity" {
      + id       = (known after apply)
      + location = "northeurope"
      + name     = "myorg-connectivity-northeurope"
      + tags     = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
    }

  # module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope"] will be created
  + resource "azurerm_resource_group" "connectivity" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "myorg-connectivity-westeurope"
      + tags     = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
    }

  # module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns"] will be created
  + resource "azurerm_resource_group" "connectivity" {
      + id       = (known after apply)
      + location = "northeurope"
      + name     = "myorg-dns"
      + tags     = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
    }

  # module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_connectivity[0] will be created
  + resource "azurerm_subscription_template_deployment" "telemetry_connectivity" {
      + id                 = (known after apply)
      + location           = "eastus"
      + name               = (known after apply)
      + output_content     = (known after apply)
      + parameters_content = (known after apply)
      + template_content   = jsonencode(
            {
              + "$schema"      = "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
              + contentVersion = "1.0.0.0"
              + outputs        = {
                  + telemetry = {
                      + type  = "String"
                      + value = "For more information, see https://aka.ms/alz/tf/telemetry"
                    }
                }
              + parameters     = {}
              + resources      = []
              + variables      = {}
            }
        )
    }

  # module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_core[0] will be created
  + resource "azurerm_subscription_template_deployment" "telemetry_core" {
      + id                 = (known after apply)
      + location           = "eastus"
      + name               = (known after apply)
      + output_content     = (known after apply)
      + parameters_content = (known after apply)
      + template_content   = jsonencode(
            {
              + "$schema"      = "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
              + contentVersion = "1.0.0.0"
              + outputs        = {
                  + telemetry = {
                      + type  = "String"
                      + value = "For more information, see https://aka.ms/alz/tf/telemetry"
                    }
                }
              + parameters     = {}
              + resources      = []
              + variables      = {}
            }
        )
    }

  # module.connectivity.module.alz.azurerm_virtual_network.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"] will be created
  + resource "azurerm_virtual_network" "connectivity" {
      + address_space       = [
          + "10.100.0.0/22",
        ]
      + dns_servers         = []
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "northeurope"
      + name                = "myorg-hub-northeurope"
      + resource_group_name = "myorg-connectivity-northeurope"
      + subnet              = (known after apply)
      + tags                = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
    }

  # module.connectivity.module.alz.azurerm_virtual_network.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"] will be created
  + resource "azurerm_virtual_network" "connectivity" {
      + address_space       = [
          + "10.101.0.0/22",
        ]
      + dns_servers         = []
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "myorg-hub-westeurope"
      + resource_group_name = "myorg-connectivity-westeurope"
      + subnet              = (known after apply)
      + tags                = {
          + "demo_type"  = "Deploy connectivity resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
    }

  # module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09"] will be created
  + resource "azurerm_virtual_network_peering" "connectivity" {
      + allow_forwarded_traffic      = true
      + allow_gateway_transit        = true
      + allow_virtual_network_access = true
      + id                           = (known after apply)
      + name                         = "peering-0c31c984-71b6-58ab-92fb-381b7f540f09"
      + remote_virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"
      + resource_group_name          = "myorg-connectivity-northeurope"
      + use_remote_gateways          = false
      + virtual_network_name         = "myorg-hub-northeurope"
    }

  # module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope/virtualNetworkPeerings/peering-d55cd62f-27ec-52e7-8025-908b7ff1de27"] will be created
  + resource "azurerm_virtual_network_peering" "connectivity" {
      + allow_forwarded_traffic      = true
      + allow_gateway_transit        = true
      + allow_virtual_network_access = true
      + id                           = (known after apply)
      + name                         = "peering-d55cd62f-27ec-52e7-8025-908b7ff1de27"
      + remote_virtual_network_id    = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"
      + resource_group_name          = "myorg-connectivity-westeurope"
      + use_remote_gateways          = false
      + virtual_network_name         = "myorg-hub-westeurope"
    }

  # module.connectivity.module.alz.random_id.telem[0] will be created
  + resource "random_id" "telem" {
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 4
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.connectivity.module.alz.time_sleep.after_azurerm_management_group will be created
  + resource "time_sleep" "after_azurerm_management_group" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_management_group_level_1" = jsonencode([])
          + "azurerm_management_group_level_2" = jsonencode([])
          + "azurerm_management_group_level_3" = jsonencode([])
          + "azurerm_management_group_level_4" = jsonencode([])
          + "azurerm_management_group_level_5" = jsonencode([])
          + "azurerm_management_group_level_6" = jsonencode([])
        }
    }

  # module.connectivity.module.alz.time_sleep.after_azurerm_policy_assignment will be created
  + resource "time_sleep" "after_azurerm_policy_assignment" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_management_group_policy_assignment_enterprise_scale" = jsonencode([])
        }
    }

  # module.connectivity.module.alz.time_sleep.after_azurerm_policy_definition will be created
  + resource "time_sleep" "after_azurerm_policy_definition" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_policy_definition_enterprise_scale" = jsonencode([])
        }
    }

  # module.connectivity.module.alz.time_sleep.after_azurerm_policy_set_definition will be created
  + resource "time_sleep" "after_azurerm_policy_set_definition" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_policy_set_definition_enterprise_scale" = jsonencode([])
        }
    }

  # module.connectivity.module.alz.time_sleep.after_azurerm_role_assignment will be created
  + resource "time_sleep" "after_azurerm_role_assignment" {
      + create_duration  = "0s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_role_assignment_enterprise_scale" = jsonencode([])
          + "module_role_assignments_for_policy"       = jsonencode([])
        }
    }

  # module.connectivity.module.alz.time_sleep.after_azurerm_role_definition will be created
  + resource "time_sleep" "after_azurerm_role_definition" {
      + create_duration  = "60s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_role_definition_enterprise_scale" = jsonencode([])
        }
    }

  # module.core.module.alz.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg"] will be created
  + resource "azurerm_management_group" "level_1" {
      + display_name               = "My Organization"
      + id                         = (known after apply)
      + name                       = "myorg"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/c500d8af-715f-47a8-826e-07be458836bc"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-decommissioned"] will be created
  + resource "azurerm_management_group" "level_2" {
      + display_name               = "Decommissioned"
      + id                         = (known after apply)
      + name                       = "myorg-decommissioned"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-landing-zones"] will be created
  + resource "azurerm_management_group" "level_2" {
      + display_name               = "Landing Zones"
      + id                         = (known after apply)
      + name                       = "myorg-landing-zones"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-platform"] will be created
  + resource "azurerm_management_group" "level_2" {
      + display_name               = "Platform"
      + id                         = (known after apply)
      + name                       = "myorg-platform"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-sandboxes"] will be created
  + resource "azurerm_management_group" "level_2" {
      + display_name               = "Sandboxes"
      + id                         = (known after apply)
      + name                       = "myorg-sandboxes"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-connectivity"] will be created
  + resource "azurerm_management_group" "level_3" {
      + display_name               = "Connectivity"
      + id                         = (known after apply)
      + name                       = "myorg-connectivity"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg-platform"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-identity"] will be created
  + resource "azurerm_management_group" "level_3" {
      + display_name               = "Identity"
      + id                         = (known after apply)
      + name                       = "myorg-identity"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg-platform"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-management"] will be created
  + resource "azurerm_management_group" "level_3" {
      + display_name               = "Management"
      + id                         = (known after apply)
      + name                       = "myorg-management"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg-platform"
      + subscription_ids           = [
          + "11eb2a49-f2be-48ee-a1b3-113a01d79ffc",
        ]
    }

  # module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-1"] will be created
  + resource "azurerm_management_group" "level_3" {
      + display_name               = "MYORG Online Example 1"
      + id                         = (known after apply)
      + name                       = "myorg-online-example-1"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-2"] will be created
  + resource "azurerm_management_group" "level_3" {
      + display_name               = "MYORG Online Example 2"
      + id                         = (known after apply)
      + name                       = "myorg-online-example-2"
      + parent_management_group_id = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + subscription_ids           = (known after apply)
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Protect your virtual networks against volumetric and protocol attacks with Azure DDoS Protection Standard. For more information, visit https://aka.ms/ddosprotectiondocs."
      + display_name         = "Virtual networks should be protected by Azure DDoS Protection Standard"
      + enforce              = false
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-connectivity"
      + metadata             = (known after apply)
      + name                 = "Enable-DDoS-VNET"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + ddosPlan = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-ddos/providers/Microsoft.Network/ddosProtectionPlans/myorg-ddos-northeurope"
                }
              + effect   = {
                  + value = "Modify"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Virtual networks should be protected by Azure DDoS Protection Standard."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy denies creation of Public IPs under the assigned scope."
      + display_name         = "Deny the creation of public IP"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-identity"
      + metadata             = (known after apply)
      + name                 = "Deny-Public-IP"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect                        = {
                  + value = "Deny"
                }
              + listOfResourceTypesNotAllowed = {
                  + value = [
                      + "Microsoft.Network/publicIPAddresses",
                    ]
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749"

      + non_compliance_message {
          + content = "Public IPs must not be created in this scope."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy denies any network security rule that allows RDP access from Internet."
      + display_name         = "RDP access from the Internet should be blocked"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-identity"
      + metadata             = (known after apply)
      + name                 = "Deny-RDP-From-Internet"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect = {
                  + value = "Deny"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"

      + non_compliance_message {
          + content = "RDP access from the internet must be blocked."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy denies the creation of a subnet without a Network Security Group to protect traffic across subnets."
      + display_name         = "Subnets should have a Network Security Group"
      + enforce              = false
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-identity"
      + metadata             = (known after apply)
      + name                 = "Deny-Subnet-Without-Nsg"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect = {
                  + value = "Deny"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"

      + non_compliance_message {
          + content = "Subnets should have a Network Security Group."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupExcludeTag."
      + display_name         = "Configure backup on virtual machines without a given tag to a new recovery services vault with a default policy"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-identity"
      + metadata             = (known after apply)
      + name                 = "Deploy-VM-Backup"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect            = {
                  + value = "deployIfNotExists"
                }
              + exclusionTagName  = {
                  + value = ""
                }
              + exclusionTagValue = {
                  + value = []
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Virtual machines without a given tag must backup to a new recovery services vault with a default policy."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy denies the network interfaces which enabled IP forwarding. The setting of IP forwarding disables Azure's check of the source and destination for a network interface. This should be reviewed by the network security team."
      + display_name         = "Network interfaces should disable IP forwarding"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deny-IP-Forwarding"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900"

      + non_compliance_message {
          + content = "Network interfaces must disable IP forwarding."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Do not allow privileged containers creation in a Kubernetes cluster. This recommendation is part of CIS 5.2.1 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc."
      + display_name         = "Kubernetes cluster should not allow privileged containers"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deny-Priv-Containers-AKS"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect = {
                  + value = "deny"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4"

      + non_compliance_message {
          + content = "Kubernetes cluster must not allow privileged containers."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Do not allow containers to run with privilege escalation to root in a Kubernetes cluster. This recommendation is part of CIS 5.2.5 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc."
      + display_name         = "Kubernetes clusters should not allow container privilege escalation"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deny-Priv-Escalation-AKS"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect = {
                  + value = "deny"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99"

      + non_compliance_message {
          + content = "Kubernetes clusters must not allow container privilege escalation to root."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy denies any network security rule that allows RDP access from Internet."
      + display_name         = "RDP access from the Internet should be blocked"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deny-RDP-From-Internet"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"

      + non_compliance_message {
          + content = "RDP access from the internet must be blocked."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking."
      + display_name         = "Secure transfer to storage accounts should be enabled"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deny-Storage-http"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9"

      + non_compliance_message {
          + content = "Secure transfer must be enabled for storage accounts."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy denies the creation of a subnet without a Network Security Group to protect traffic across subnets."
      + display_name         = "Subnets should have a Network Security Group"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deny-Subnet-Without-Nsg"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"

      + non_compliance_message {
          + content = "Subnets must have a Network Security Group."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Use Azure Policy Add-on to manage and report on the compliance state of your Azure Kubernetes Service (AKS) clusters. For more information, see https://aka.ms/akspolicydoc."
      + display_name         = "Deploy Azure Policy Add-on to Azure Kubernetes Service clusters"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deploy-AKS-Policy"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Azure Policy Add-on must be deployed to Azure Kubernetes Service clusters."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Auditing on your SQL Server should be enabled to track database activities across all databases on the server and save them in an audit log."
      + display_name         = "Auditing on SQL server should be enabled"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deploy-SQL-DB-Auditing"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "SQL Server Auditing must be enabled."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "This policy ensures that Threat Detection is enabled on SQL Servers."
      + display_name         = "Deploy Threat Detection on SQL servers"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deploy-SQL-Threat"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "SQL Server Threat Detection must be enabled."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupExcludeTag."
      + display_name         = "Configure backup on virtual machines without a given tag to a new recovery services vault with a default policy"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Deploy-VM-Backup"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Virtual machines without a given tag must backup to a new recovery services vault with a default policy."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Protect your virtual networks against volumetric and protocol attacks with Azure DDoS Protection Standard. For more information, visit https://aka.ms/ddosprotectiondocs."
      + display_name         = "Virtual networks should be protected by Azure DDoS Protection Standard"
      + enforce              = false
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Enable-DDoS-VNET"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + ddosPlan = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-ddos/providers/Microsoft.Network/ddosProtectionPlans/myorg-ddos-northeurope"
                }
              + effect   = {
                  + value = "Modify"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Virtual networks should be protected by Azure DDoS Protection Standard."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Use of HTTPS ensures authentication and protects data in transit from network layer eavesdropping attacks. This capability is currently generally available for Kubernetes Service (AKS), and in preview for AKS Engine and Azure Arc enabled Kubernetes. For more info, visit https://aka.ms/kubepolicydoc."
      + display_name         = "Kubernetes clusters should be accessible only over HTTPS"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Enforce-AKS-HTTPS"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + effect = {
                  + value = "deny"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d"

      + non_compliance_message {
          + content = "Kubernetes clusters must only be accessed over HTTPS."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit."
      + display_name         = "Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + metadata             = (known after apply)
      + name                 = "Enforce-TLS-SSL"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "TLS requirements and SSL enforcement must be configured on all resources that support it."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Deploy-Log-Analytics."
      + display_name         = "Deploy-Log-Analytics"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-management"
      + metadata             = (known after apply)
      + name                 = "Deploy-Log-Analytics"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + automationAccountName = {
                  + value = "myorg-automation"
                }
              + automationRegion      = {
                  + value = "northeurope"
                }
              + dataRetention         = {
                  + value = "60"
                }
              + effect                = {
                  + value = "DeployIfNotExists"
                }
              + rgName                = {
                  + value = "myorg-mgmt"
                }
              + sku                   = {
                  + value = "pergb2018"
                }
              + workspaceName         = {
                  + value = "myorg-la"
                }
              + workspaceRegion       = {
                  + value = "northeurope"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Log Analytics must be deployed."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Specifies the allowed locations (regions) where Resource Groups can be deployed."
      + display_name         = "Limit allowed locations for Resource Groups"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-online-example-1"
      + metadata             = (known after apply)
      + name                 = "Deny-RSG-Locations"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + listOfAllowedLocations = {
                  + value = [
                      + "eastus",
                      + "eastus2",
                      + "westus",
                      + "northcentralus",
                      + "southcentralus",
                    ]
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988"

      + non_compliance_message {
          + content = "Resource groups must only be deployed to the allowed locations."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Specifies the allowed locations (regions) where Resources can be deployed."
      + display_name         = "Limit allowed locations for Resources"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-online-example-1"
      + metadata             = (known after apply)
      + name                 = "Deny-Resource-Locations"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + listOfAllowedLocations = {
                  + value = [
                      + "eastus",
                      + "eastus2",
                      + "westus",
                      + "northcentralus",
                      + "southcentralus",
                    ]
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c"

      + non_compliance_message {
          + content = "Resources must only be deployed to the allowed locations."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Specifies the allowed locations (regions) where Resource Groups can be deployed."
      + display_name         = "Limit allowed locations for Resource Groups"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-online-example-2"
      + metadata             = (known after apply)
      + name                 = "Deny-RSG-Locations"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + listOfAllowedLocations = {
                  + value = [
                      + "northeurope",
                      + "westeurope",
                    ]
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988"

      + non_compliance_message {
          + content = "Resource groups must only be deployed to the allowed locations."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Specifies the allowed locations (regions) where Resources can be deployed."
      + display_name         = "Limit allowed locations for Resources"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg-online-example-2"
      + metadata             = (known after apply)
      + name                 = "Deny-Resource-Locations"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + listOfAllowedLocations = {
                  + value = [
                      + "northeurope",
                      + "westeurope",
                    ]
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c"

      + non_compliance_message {
          + content = "Resources must only be deployed to the allowed locations."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Microsoft Cloud Security Benchmark policy initiative."
      + display_name         = "Microsoft Cloud Security Benchmark"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata             = (known after apply)
      + name                 = "Deploy-ASC-Monitoring"
      + not_scopes           = []
      + policy_definition_id = "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8"

      + non_compliance_message {
          + content = "Microsoft Cloud Security Benchmark must be met."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Ensures that Activity Log Diagnostics settings are set to push logs into Log Analytics workspace."
      + display_name         = "Deploy Diagnostic Settings for Activity Log to Log Analytics workspace"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata             = (known after apply)
      + name                 = "Deploy-AzActivity-Log"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + logAnalytics = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Activity log Diagnostic Settings must be set for Log Analytics workspaces."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Deploy Microsoft Defender for Cloud and Security Contacts"
      + display_name         = "Deploy Microsoft Defender for Cloud configuration"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata             = (known after apply)
      + name                 = "Deploy-MDFC-Config"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + ascExportResourceGroupLocation = {
                  + value = "northeurope"
                }
              + ascExportResourceGroupName     = {
                  + value = "myorg-asc-export"
                }
              + emailSecurityContact           = {
                  + value = "test.user@replace_me"
                }
              + enableAscForAppServices        = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForArm                = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForContainers         = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForDns                = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForKeyVault           = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForOssDb              = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForServers            = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForSql                = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForSqlOnVm            = {
                  + value = "DeployIfNotExists"
                }
              + enableAscForStorage            = {
                  + value = "DeployIfNotExists"
                }
              + logAnalytics                   = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Microsoft Defender for Cloud and Security Contacts must be deployed."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Ensures that Azure resources are configured to forward diagnostic logs and metrics to an Azure Log Analytics workspace."
      + display_name         = "Deploy-Resource-Diag"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata             = (known after apply)
      + name                 = "Deploy-Resource-Diag"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + logAnalytics = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Azure resources must be configured to forward diagnostic logs and metrics to an Azure Log Analytics workspace."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Enable Azure Monitor for the virtual machines (VMs) in the specified scope (management group, subscription or resource group). Takes Log Analytics workspace as parameter."
      + display_name         = "Enable Azure Monitor for VMs"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata             = (known after apply)
      + name                 = "Deploy-VM-Monitoring"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + logAnalytics_1 = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Azure Monitor must be enabled for VMs."
        }
    }

  # module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"] will be created
  + resource "azurerm_management_group_policy_assignment" "enterprise_scale" {
      + description          = "Enable Azure Monitor for the Virtual Machine Scale Sets in the specified scope (Management group, Subscription or resource group). Takes Log Analytics workspace as parameter. Note: if your scale set upgradePolicy is set to Manual, you need to apply the extension to the all VMs in the set by calling upgrade on them. In CLI this would be az vmss update-instances."
      + display_name         = "Enable Azure Monitor for Virtual Machine Scale Sets"
      + enforce              = true
      + id                   = (known after apply)
      + location             = "eastus"
      + management_group_id  = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata             = (known after apply)
      + name                 = "Deploy-VMSS-Monitoring"
      + not_scopes           = []
      + parameters           = jsonencode(
            {
              + logAnalytics_1 = {
                  + value = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"
                }
            }
        )
      + policy_definition_id = "/providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad"

      + identity {
          + principal_id = (known after apply)
          + tenant_id    = (known after apply)
          + type         = "SystemAssigned"
        }

      + non_compliance_message {
          + content = "Azure Monitor must be enabled for Virtual Machine Scale Sets."
        }
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny."
      + display_name        = "AppService append enable https only setting to enforce https setting."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "App Service"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "All"
      + name                = "Append-AppService-httpsonly"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.Web/sites/httpsOnly"
                          + notequals = true
                        },
                    ]
                }
              + then = {
                  + details = [
                      + {
                          + field = "Microsoft.Web/sites/httpsOnly"
                          + value = true
                        },
                    ]
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny."
      + display_name        = "AppService append sites with minimum TLS version to enforce."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "App Service"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "All"
      + name                = "Append-AppService-latestTLS"
      + parameters          = jsonencode(
            {
              + effect        = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.0",
                      + "1.1",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version for a  Web App config to enforce"
                      + displayName = "Select version minimum TLS Web App config"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites/config"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.Web/sites/config/minTlsVersion"
                          + notEquals = "[parameters('minTlsVersion')]"
                        },
                    ]
                }
              + then = {
                  + details = [
                      + {
                          + field = "Microsoft.Web/sites/config/minTlsVersion"
                          + value = "[parameters('minTlsVersion')]"
                        },
                    ]
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added."
      + display_name        = "KeyVault SoftDelete should be enabled"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Key Vault"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Append-KV-SoftDelete"
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + anyOf = [
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.KeyVault/vaults"
                                  + field  = "type"
                                },
                              + {
                                  + field     = "Microsoft.KeyVault/vaults/enableSoftDelete"
                                  + notEquals = true
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + details = [
                      + {
                          + field = "Microsoft.KeyVault/vaults/enableSoftDelete"
                          + value = true
                        },
                    ]
                  + effect  = "append"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Cache"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Append-Redis-disableNonSslPort"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                      + "Modify",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis"
                      + displayName = "Effect Azure Cache for Redis"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Cache/redis"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Cache/Redis/enableNonSslPort"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + details = [
                      + {
                          + field = "Microsoft.Cache/Redis/enableNonSslPort"
                          + value = false
                        },
                    ]
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Append a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "Azure Cache for Redis Append a specific min TLS version requirement and enforce TLS."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Cache"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Append-Redis-sslEnforcement"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis"
                      + displayName = "Effect Azure Cache for Redis"
                    }
                  + type          = "String"
                }
              + minimumTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.1",
                      + "1.0",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version minimum TLS version Azure Cache for Redis to enforce"
                      + displayName = "Select version for Redis server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Cache/redis"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + field     = "Microsoft.Cache/Redis/minimumTlsVersion"
                                  + notequals = "[parameters('minimumTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + details = [
                      + {
                          + field = "Microsoft.Cache/Redis/minimumTlsVersion"
                          + value = "[parameters('minimumTlsVersion')]"
                        },
                    ]
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Audit private endpoints that are created in other subscriptions and/or tenants for Azure Machine Learning."
      + display_name        = "Control private endpoint connections to Azure Machine Learning"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Audit-MachineLearning-PrivateEndpointId"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
                          + field  = "type"
                        },
                      + {
                          + equals = "Approved"
                          + field  = "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/privateLinkServiceConnectionState.status"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/privateEndpoint.id"
                                },
                              + {
                                  + notEquals = "[subscription().subscriptionId]"
                                  + value     = "[split(concat(field('Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/privateEndpoint.id'), '//'), '/')[2]]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of child resources on the Automation Account"
      + display_name        = "No child resources in Automation Account"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Automation"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-AA-child-resources"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + field = "type"
                          + in    = [
                              + "Microsoft.Automation/automationAccounts/runbooks",
                              + "Microsoft.Automation/automationAccounts/variables",
                              + "Microsoft.Automation/automationAccounts/modules",
                              + "Microsoft.Automation/automationAccounts/credentials",
                              + "Microsoft.Automation/automationAccounts/connections",
                              + "Microsoft.Automation/automationAccounts/certificates",
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy enables you to restrict that Application Gateways is always deployed with WAF enabled"
      + display_name        = "Application Gateway should be deployed with WAF enabled"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-AppGW-Without-WAF"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Network/applicationGateways"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.Network/applicationGateways/sku.name"
                          + notequals = "WAF_v2"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
      + display_name        = "API App should only be accessible over HTTPS"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "App Service"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-AppServiceApiApp-http"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites"
                          + field  = "type"
                        },
                      + {
                          + field = "kind"
                          + like  = "*api"
                        },
                      + {
                          + equals = "false"
                          + field  = "Microsoft.Web/sites/httpsOnly"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
      + display_name        = "Function App should only be accessible over HTTPS"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "App Service"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-AppServiceFunctionApp-http"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites"
                          + field  = "type"
                        },
                      + {
                          + field = "kind"
                          + like  = "functionapp*"
                        },
                      + {
                          + equals = "false"
                          + field  = "Microsoft.Web/sites/httpsOnly"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
      + display_name        = "Web Application should only be accessible over HTTPS"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "App Service"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-AppServiceWebApp-http"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites"
                          + field  = "type"
                        },
                      + {
                          + field = "kind"
                          + like  = "app*"
                        },
                      + {
                          + equals = "false"
                          + field  = "Microsoft.Web/sites/httpsOnly"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Denies the deployment of workspaces that do not use the noPublicIp feature to host Databricks clusters without public IPs."
      + display_name        = "Deny public IPs for Databricks cluster"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Databricks"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Databricks-NoPublicIp"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Databricks/workspaces"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.DataBricks/workspaces/parameters.enableNoPublicIp.value"
                          + notEquals = true
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Enforces the use of Premium Databricks workspaces to make sure appropriate security features are available including Databricks Access Controls, Credential Passthrough and SCIM provisioning for AAD."
      + display_name        = "Deny non-premium Databricks sku"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Databricks"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Databricks-Sku"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Databricks/workspaces"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.DataBricks/workspaces/sku.name"
                          + notEquals = "premium"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Enforces the use of vnet injection for Databricks workspaces."
      + display_name        = "Deny Databricks workspaces without Vnet injection"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Databricks"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Databricks-VirtualNetwork"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Databricks/workspaces"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.DataBricks/workspaces/parameters.customVirtualNetworkId.value"
                                },
                              + {
                                  + exists = false
                                  + field  = "Microsoft.DataBricks/workspaces/parameters.customPublicSubnetName.value"
                                },
                              + {
                                  + exists = false
                                  + field  = "Microsoft.DataBricks/workspaces/parameters.customPrivateSubnetName.value"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deny AKS cluster creation in Azure Machine Learning and enforce connecting to existing clusters."
      + display_name        = "Deny AKS cluster creation in Azure Machine Learning"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-Aks"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces/computes"
                          + field  = "type"
                        },
                      + {
                          + equals = "AKS"
                          + field  = "Microsoft.MachineLearningServices/workspaces/computes/computeType"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.MachineLearningServices/workspaces/computes/resourceId"
                                },
                              + {
                                  + equals = true
                                  + value  = "[empty(field('Microsoft.MachineLearningServices/workspaces/computes/resourceId'))]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Enforce subnet connectivity for Azure Machine Learning compute clusters and compute instances."
      + display_name        = "Enforce subnet connectivity for Azure Machine Learning compute clusters and compute instances"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-Compute-SubnetId"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces/computes"
                          + field  = "type"
                        },
                      + {
                          + field = "Microsoft.MachineLearningServices/workspaces/computes/computeType"
                          + in    = [
                              + "AmlCompute",
                              + "ComputeInstance",
                            ]
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.MachineLearningServices/workspaces/computes/subnet.id"
                                },
                              + {
                                  + equals = true
                                  + value  = "[empty(field('Microsoft.MachineLearningServices/workspaces/computes/subnet.id'))]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Limit allowed vm sizes for Azure Machine Learning compute clusters and compute instances."
      + display_name        = "Limit allowed vm sizes for Azure Machine Learning compute clusters and compute instances"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Budget"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-Compute-VmSize"
      + parameters          = jsonencode(
            {
              + allowedVmSizes = {
                  + defaultValue = [
                      + "Standard_D1_v2",
                      + "Standard_D2_v2",
                      + "Standard_D3_v2",
                      + "Standard_D4_v2",
                      + "Standard_D11_v2",
                      + "Standard_D12_v2",
                      + "Standard_D13_v2",
                      + "Standard_D14_v2",
                      + "Standard_DS1_v2",
                      + "Standard_DS2_v2",
                      + "Standard_DS3_v2",
                      + "Standard_DS4_v2",
                      + "Standard_DS5_v2",
                      + "Standard_DS11_v2",
                      + "Standard_DS12_v2",
                      + "Standard_DS13_v2",
                      + "Standard_DS14_v2",
                      + "Standard_M8-2ms",
                      + "Standard_M8-4ms",
                      + "Standard_M8ms",
                      + "Standard_M16-4ms",
                      + "Standard_M16-8ms",
                      + "Standard_M16ms",
                      + "Standard_M32-8ms",
                      + "Standard_M32-16ms",
                      + "Standard_M32ls",
                      + "Standard_M32ms",
                      + "Standard_M32ts",
                      + "Standard_M64-16ms",
                      + "Standard_M64-32ms",
                      + "Standard_M64ls",
                      + "Standard_M64ms",
                      + "Standard_M64s",
                      + "Standard_M128-32ms",
                      + "Standard_M128-64ms",
                      + "Standard_M128ms",
                      + "Standard_M128s",
                      + "Standard_M64",
                      + "Standard_M64m",
                      + "Standard_M128",
                      + "Standard_M128m",
                      + "Standard_D1",
                      + "Standard_D2",
                      + "Standard_D3",
                      + "Standard_D4",
                      + "Standard_D11",
                      + "Standard_D12",
                      + "Standard_D13",
                      + "Standard_D14",
                      + "Standard_DS15_v2",
                      + "Standard_NV6",
                      + "Standard_NV12",
                      + "Standard_NV24",
                      + "Standard_F2s_v2",
                      + "Standard_F4s_v2",
                      + "Standard_F8s_v2",
                      + "Standard_F16s_v2",
                      + "Standard_F32s_v2",
                      + "Standard_F64s_v2",
                      + "Standard_F72s_v2",
                      + "Standard_NC6s_v3",
                      + "Standard_NC12s_v3",
                      + "Standard_NC24rs_v3",
                      + "Standard_NC24s_v3",
                      + "Standard_NC6",
                      + "Standard_NC12",
                      + "Standard_NC24",
                      + "Standard_NC24r",
                      + "Standard_ND6s",
                      + "Standard_ND12s",
                      + "Standard_ND24rs",
                      + "Standard_ND24s",
                      + "Standard_NC6s_v2",
                      + "Standard_NC12s_v2",
                      + "Standard_NC24rs_v2",
                      + "Standard_NC24s_v2",
                      + "Standard_ND40rs_v2",
                      + "Standard_NV12s_v3",
                      + "Standard_NV24s_v3",
                      + "Standard_NV48s_v3",
                    ]
                  + metadata     = {
                      + description = "Specifies the allowed VM Sizes for Aml Compute Clusters and Instances"
                      + displayName = "Allowed VM Sizes for Aml Compute Clusters and Instances"
                    }
                  + type         = "Array"
                }
              + effect         = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces/computes"
                          + field  = "type"
                        },
                      + {
                          + field = "Microsoft.MachineLearningServices/workspaces/computes/computeType"
                          + in    = [
                              + "AmlCompute",
                              + "ComputeInstance",
                            ]
                        },
                      + {
                          + field = "Microsoft.MachineLearningServices/workspaces/computes/vmSize"
                          + notIn = "[parameters('allowedVmSizes')]"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deny public access of Azure Machine Learning clusters via SSH."
      + display_name        = "Deny public access of Azure Machine Learning clusters via SSH"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "All"
      + name                = "Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces/computes"
                          + field  = "type"
                        },
                      + {
                          + equals = "AmlCompute"
                          + field  = "Microsoft.MachineLearningServices/workspaces/computes/computeType"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.MachineLearningServices/workspaces/computes/remoteLoginPortPublicAccess"
                                },
                              + {
                                  + field     = "Microsoft.MachineLearningServices/workspaces/computes/remoteLoginPortPublicAccess"
                                  + notEquals = "Disabled"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Enforce scale settings for Azure Machine Learning compute clusters."
      + display_name        = "Enforce scale settings for Azure Machine Learning compute clusters"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Budget"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-ComputeCluster-Scale"
      + parameters          = jsonencode(
            {
              + effect                                  = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + maxNodeCount                            = {
                  + defaultValue = 10
                  + metadata     = {
                      + description = "Specifies the maximum node count of AML Clusters"
                      + displayName = "Maximum Node Count"
                    }
                  + type         = "Integer"
                }
              + maxNodeIdleTimeInSecondsBeforeScaleDown = {
                  + defaultValue = 900
                  + metadata     = {
                      + description = "Specifies the maximum node idle time in seconds before scaledown"
                      + displayName = "Maximum Node Idle Time in Seconds Before Scaledown"
                    }
                  + type         = "Integer"
                }
              + minNodeCount                            = {
                  + defaultValue = 0
                  + metadata     = {
                      + description = "Specifies the minimum node count of AML Clusters"
                      + displayName = "Minimum Node Count"
                    }
                  + type         = "Integer"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces/computes"
                          + field  = "type"
                        },
                      + {
                          + equals = "AmlCompute"
                          + field  = "Microsoft.MachineLearningServices/workspaces/computes/computeType"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + field   = "Microsoft.MachineLearningServices/workspaces/computes/scaleSettings.maxNodeCount"
                                  + greater = "[parameters('maxNodeCount')]"
                                },
                              + {
                                  + field   = "Microsoft.MachineLearningServices/workspaces/computes/scaleSettings.minNodeCount"
                                  + greater = "[parameters('minNodeCount')]"
                                },
                              + {
                                  + greater = "[parameters('maxNodeIdleTimeInSecondsBeforeScaleDown')]"
                                  + value   = "[int(last(split(replace(replace(replace(replace(replace(replace(replace(field('Microsoft.MachineLearningServices/workspaces/computes/scaleSettings.nodeIdleTimeBeforeScaleDown'), 'P', '/'), 'Y', '/'), 'M', '/'), 'D', '/'), 'T', '/'), 'H', '/'), 'S', ''), '/')))]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Enforces high business impact Azure Machine Learning workspaces."
      + display_name        = "Enforces high business impact Azure Machine Learning Workspaces"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-HbiWorkspace"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.MachineLearningServices/workspaces/hbiWorkspace"
                                },
                              + {
                                  + field     = "Microsoft.MachineLearningServices/workspaces/hbiWorkspace"
                                  + notEquals = true
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deny public access behind vnet to Azure Machine Learning workspaces."
      + display_name        = "Deny public acces behind vnet to Azure Machine Learning workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-PublicAccessWhenBehindVnet"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = false
                                  + field  = "Microsoft.MachineLearningServices/workspaces/allowPublicAccessWhenBehindVnet"
                                },
                              + {
                                  + field     = "Microsoft.MachineLearningServices/workspaces/allowPublicAccessWhenBehindVnet"
                                  + notEquals = false
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Denies public network access for Azure Machine Learning workspaces."
      + display_name        = "Azure Machine Learning should have disabled public network access"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Machine Learning"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MachineLearning-PublicNetworkAccess"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.MachineLearningServices/workspaces"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.MachineLearningServices/workspaces/publicNetworkAccess"
                          + notEquals = "Disabled"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "MySQL database servers enforce SSL connections."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-MySql-http"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_0",
                      + "TLS1_1",
                      + "TLSEnforcementDisabled",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                      + displayName = "Select version minimum TLS for MySQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.DBforMySQL/servers"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.DBforMySQL/servers/sslEnforcement"
                                },
                              + {
                                  + field     = "Microsoft.DBforMySQL/servers/sslEnforcement"
                                  + notEquals = "Enabled"
                                },
                              + {
                                  + field     = "Microsoft.DBforMySQL/servers/minimalTlsVersion"
                                  + notequals = "[parameters('minimalTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "PostgreSQL database servers enforce SSL connection."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-PostgreSql-http"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_0",
                      + "TLS1_1",
                      + "TLSEnforcementDisabled",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                      + displayName = "Select version minimum TLS for MySQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.DBforPostgreSQL/servers"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.DBforPostgreSQL/servers/sslEnforcement"
                                },
                              + {
                                  + field     = "Microsoft.DBforPostgreSQL/servers/sslEnforcement"
                                  + notEquals = "Enabled"
                                },
                              + {
                                  + field     = "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion"
                                  + notequals = "[parameters('minimalTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription"
      + display_name        = "Deny the creation of private DNS"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Private-DNS-Zones"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/privateDnsZones"
                  + field  = "type"
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of Maria DB accounts with exposed public endpoints"
      + display_name        = "Public network access should be disabled for MariaDB"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-PublicEndpoint-MariaDB"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.DBforMariaDB/servers"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.DBforMariaDB/servers/publicNetworkAccess"
                          + notequals = "Disabled"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "[Deprecated] This policy denies creation of Public IPs under the assigned scope."
      + display_name        = "[Deprecated] Deny the creation of public IP"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + deprecated           = true
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0-deprecated"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-PublicIP"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/publicIPAddresses"
                  + field  = "type"
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies any network security rule that allows RDP access from Internet"
      + display_name        = "RDP access from the Internet should be blocked"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "All"
      + name                = "Deny-RDP-From-Internet"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Network/networkSecurityGroups/securityRules"
                          + field  = "type"
                        },
                      + {
                          + allOf = [
                              + {
                                  + equals = "Allow"
                                  + field  = "Microsoft.Network/networkSecurityGroups/securityRules/access"
                                },
                              + {
                                  + equals = "Inbound"
                                  + field  = "Microsoft.Network/networkSecurityGroups/securityRules/direction"
                                },
                              + {
                                  + anyOf = [
                                      + {
                                          + equals = "*"
                                          + field  = "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"
                                        },
                                      + {
                                          + equals = "3389"
                                          + field  = "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"
                                        },
                                      + {
                                          + equals = "true"
                                          + value  = "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389)), 'false')]"
                                        },
                                      + {
                                          + count   = {
                                              + field = "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]"
                                              + where = {
                                                  + equals = "true"
                                                  + value  = "[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389)) , 'false')]"
                                                }
                                            }
                                          + greater = 0
                                        },
                                      + {
                                          + not = {
                                              + field     = "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]"
                                              + notEquals = "*"
                                            }
                                        },
                                      + {
                                          + not = {
                                              + field     = "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]"
                                              + notEquals = "3389"
                                            }
                                        },
                                    ]
                                },
                              + {
                                  + anyOf = [
                                      + {
                                          + equals = "*"
                                          + field  = "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"
                                        },
                                      + {
                                          + equals = "Internet"
                                          + field  = "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"
                                        },
                                      + {
                                          + not = {
                                              + field     = "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]"
                                              + notEquals = "*"
                                            }
                                        },
                                      + {
                                          + not = {
                                              + field     = "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]"
                                              + notEquals = "Internet"
                                            }
                                        },
                                    ]
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Audit enabling of only connections via SSL to Azure Cache for Redis. Validate both minimum TLS version and enableNonSslPort is disabled. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
      + display_name        = "Azure Cache for Redis only secure connections should be enabled"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Cache"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Redis-http"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "The effect determines what happens when the policy rule is evaluated to match"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minimumTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.1",
                      + "1.0",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select minimum TLS version for Azure Cache for Redis."
                      + displayName = "Select minumum TLS version for Azure Cache for Redis."
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Cache/redis"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Cache/Redis/enableNonSslPort"
                                },
                              + {
                                  + field     = "Microsoft.Cache/Redis/minimumTlsVersion"
                                  + notequals = "[parameters('minimumTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities."
      + display_name        = "Azure SQL Database should have the minimal TLS version set to the highest version"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Sql-minTLS"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.1",
                      + "1.0",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version minimum TLS version SQL servers to enforce"
                      + displayName = "Select version for SQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Sql/servers"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.Sql/servers/minimalTlsVersion"
                                },
                              + {
                                  + field     = "Microsoft.Sql/servers/minimalTlsVersion"
                                  + notequals = "[parameters('minimalTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities."
      + display_name        = "SQL Managed Instance should have the minimal TLS version set to the highest version"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-SqlMi-minTLS"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.1",
                      + "1.0",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version minimum TLS version SQL servers to enforce"
                      + displayName = "Select version for SQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Sql/managedInstances"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.Sql/managedInstances/minimalTlsVersion"
                                },
                              + {
                                  + field     = "Microsoft.Sql/managedInstances/minimalTlsVersion"
                                  + notequals = "[parameters('minimalTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
      + display_name        = "Storage Account set to minimum TLS and Secure transfer should be enabled"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Storage"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deny-Storage-minTLS"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "The effect determines what happens when the policy rule is evaluated to match"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + minimumTlsVersion = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_1",
                      + "TLS1_0",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version on Azure Storage Account to enforce"
                      + displayName = "Storage Account select minimum TLS version"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Storage/storageAccounts"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + allOf = [
                                      + {
                                          + less  = "2019-04-01"
                                          + value = "[requestContext().apiVersion]"
                                        },
                                      + {
                                          + exists = "false"
                                          + field  = "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
                                        },
                                    ]
                                },
                              + {
                                  + equals = "false"
                                  + field  = "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
                                },
                              + {
                                  + field     = "Microsoft.Storage/storageAccounts/minimumTlsVersion"
                                  + notequals = "[parameters('minimumTlsVersion')]"
                                },
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.Storage/storageAccounts/minimumTlsVersion"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of a subnet without a Network Security Group. NSG help to protect traffic across subnet-level."
      + display_name        = "Subnets should have a Network Security Group"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "2.0.0"
            }
        )
      + mode                = "All"
      + name                = "Deny-Subnet-Without-Nsg"
      + parameters          = jsonencode(
            {
              + effect          = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + excludedSubnets = {
                  + defaultValue = [
                      + "GatewaySubnet",
                      + "AzureFirewallSubnet",
                      + "AzureFirewallManagementSubnet",
                    ]
                  + metadata     = {
                      + description = "Array of subnet names that are excluded from this policy"
                      + displayName = "Excluded Subnets"
                    }
                  + type         = "Array"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + anyOf = [
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.Network/virtualNetworks"
                                  + field  = "type"
                                },
                              + {
                                  + count     = {
                                      + field = "Microsoft.Network/virtualNetworks/subnets[*]"
                                      + where = {
                                          + allOf = [
                                              + {
                                                  + exists = "false"
                                                  + field  = "Microsoft.Network/virtualNetworks/subnets[*].networkSecurityGroup.id"
                                                },
                                              + {
                                                  + field = "Microsoft.Network/virtualNetworks/subnets[*].name"
                                                  + notIn = "[parameters('excludedSubnets')]"
                                                },
                                            ]
                                        }
                                    }
                                  + notEquals = 0
                                },
                            ]
                        },
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.Network/virtualNetworks/subnets"
                                  + field  = "type"
                                },
                              + {
                                  + field = "name"
                                  + notIn = "[parameters('excludedSubnets')]"
                                },
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of a subnet without a User Defined Route (UDR)."
      + display_name        = "Subnets should have a User Defined Route"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "2.0.0"
            }
        )
      + mode                = "All"
      + name                = "Deny-Subnet-Without-Udr"
      + parameters          = jsonencode(
            {
              + effect          = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + excludedSubnets = {
                  + defaultValue = [
                      + "AzureBastionSubnet",
                    ]
                  + metadata     = {
                      + description = "Array of subnet names that are excluded from this policy"
                      + displayName = "Excluded Subnets"
                    }
                  + type         = "Array"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + anyOf = [
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.Network/virtualNetworks"
                                  + field  = "type"
                                },
                              + {
                                  + count     = {
                                      + field = "Microsoft.Network/virtualNetworks/subnets[*]"
                                      + where = {
                                          + allOf = [
                                              + {
                                                  + exists = "false"
                                                  + field  = "Microsoft.Network/virtualNetworks/subnets[*].routeTable.id"
                                                },
                                              + {
                                                  + field = "Microsoft.Network/virtualNetworks/subnets[*].name"
                                                  + notIn = "[parameters('excludedSubnets')]"
                                                },
                                            ]
                                        }
                                    }
                                  + notEquals = 0
                                },
                            ]
                        },
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.Network/virtualNetworks/subnets"
                                  + field  = "type"
                                },
                              + {
                                  + field = "name"
                                  + notIn = "[parameters('excludedSubnets')]"
                                },
                              + {
                                  + exists = "false"
                                  + field  = "Microsoft.Network/virtualNetworks/subnets/routeTable.id"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of vNet Peerings outside of the same subscriptions under the assigned scope."
      + display_name        = "Deny vNet peering cross subscription."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + mode                = "All"
      + name                = "Deny-VNET-Peer-Cross-Sub"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                          + field  = "type"
                        },
                      + {
                          + field       = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id"
                          + notcontains = "[subscription().id]"
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of vNet Peerings to non-approved vNets under the assigned scope."
      + display_name        = "Deny vNet peering to non-approved vNets"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "All"
      + name                = "Deny-VNET-Peering-To-Non-Approved-VNETs"
      + parameters          = jsonencode(
            {
              + allowedVnets = {
                  + defaultValue = []
                  + metadata     = {
                      + description = "Array of allowed vNets that can be peered with. Must be entered using their resource ID. Example: /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}"
                      + displayName = "Allowed vNets to peer with"
                    }
                  + type         = "Array"
                }
              + effect       = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + anyOf = [
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                                  + field  = "type"
                                },
                              + {
                                  + not = {
                                      + field = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id"
                                      + in    = "[parameters('allowedVnets')]"
                                    }
                                },
                            ]
                        },
                      + {
                          + allOf = [
                              + {
                                  + equals = "Microsoft.Network/virtualNetworks"
                                  + field  = "type"
                                },
                              + {
                                  + not = {
                                      + field = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings[*].remoteVirtualNetwork.id"
                                      + in    = "[parameters('allowedVnets')]"
                                    }
                                },
                              + {
                                  + not = {
                                      + exists = false
                                      + field  = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings[*].remoteVirtualNetwork.id"
                                    }
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy denies the creation of vNet Peerings under the assigned scope."
      + display_name        = "Deny vNet peering "
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + mode                = "All"
      + name                = "Deny-VNet-Peering"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                  + field  = "type"
                }
              + then = {
                  + effect = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy Microsoft Defender for Cloud Security Contacts"
      + display_name        = "Deploy Microsoft Defender for Cloud Security Contacts"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Security Center"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "All"
      + name                = "Deploy-ASC-SecurityContacts"
      + parameters          = jsonencode(
            {
              + effect               = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "string"
                }
              + emailSecurityContact = {
                  + metadata = {
                      + description = "Provide email address for Azure Security Center contact details"
                      + displayName = "Security contacts email address"
                    }
                  + type     = "string"
                }
              + minimalSeverity      = {
                  + allowedValues = [
                      + "High",
                      + "Medium",
                      + "Low",
                    ]
                  + defaultValue  = "High"
                  + metadata      = {
                      + description = "Defines the minimal alert severity which will be sent as email notifications"
                      + displayName = "Minimal severity"
                    }
                  + type          = "string"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Resources/subscriptions"
                          + field  = "type"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + location   = "northeurope"
                          + properties = {
                              + mode       = "incremental"
                              + parameters = {
                                  + emailSecurityContact = {
                                      + value = "[parameters('emailSecurityContact')]"
                                    }
                                  + minimalSeverity      = {
                                      + value = "[parameters('minimalSeverity')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + emailSecurityContact = {
                                          + metadata = {
                                              + description = "Security contacts email address"
                                            }
                                          + type     = "string"
                                        }
                                      + minimalSeverity      = {
                                          + metadata = {
                                              + description = "Minimal severity level reported"
                                            }
                                          + type     = "string"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2020-01-01-preview"
                                          + name       = "default"
                                          + properties = {
                                              + alertNotifications  = {
                                                  + minimalSeverity = "[parameters('minimalSeverity')]"
                                                  + state           = "On"
                                                }
                                              + emails              = "[parameters('emailSecurityContact')]"
                                              + notificationsByRole = {
                                                  + roles = [
                                                      + "Owner",
                                                    ]
                                                  + state = "On"
                                                }
                                            }
                                          + type       = "Microsoft.Security/securityContacts"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + deploymentScope    = "subscription"
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + contains = "[parameters('emailSecurityContact')]"
                                  + field    = "Microsoft.Security/securityContacts/email"
                                },
                              + {
                                  + contains = "[parameters('minimalSeverity')]"
                                  + field    = "Microsoft.Security/securityContacts/alertNotifications.minimalSeverity"
                                },
                              + {
                                  + equals = "Microsoft.Security/securityContacts"
                                  + field  = "type"
                                },
                              + {
                                  + equals = "On"
                                  + field  = "Microsoft.Security/securityContacts/alertNotifications"
                                },
                              + {
                                  + equals = "On"
                                  + field  = "Microsoft.Security/securityContacts/alertsToAdmins"
                                },
                            ]
                        }
                      + existenceScope     = "subscription"
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd",
                        ]
                      + type               = "Microsoft.Security/securityContacts"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy a default budget on all subscriptions under the assigned scope"
      + display_name        = "Deploy a default budget on all subscriptions under the assigned scope"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Budget"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "All"
      + name                = "Deploy-Budget"
      + parameters          = jsonencode(
            {
              + amount          = {
                  + defaultValue = "1000"
                  + metadata     = {
                      + description = "The total amount of cost or usage to track with the budget"
                    }
                  + type         = "String"
                }
              + budgetName      = {
                  + defaultValue = "budget-set-by-policy"
                  + metadata     = {
                      + description = "The name for the budget to be created"
                    }
                  + type         = "String"
                }
              + contactEmails   = {
                  + defaultValue = []
                  + metadata     = {
                      + description = "The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."
                    }
                  + type         = "Array"
                }
              + contactGroups   = {
                  + defaultValue = []
                  + metadata     = {
                      + description = "The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."
                    }
                  + type         = "Array"
                }
              + contactRoles    = {
                  + defaultValue = [
                      + "Owner",
                      + "Contributor",
                    ]
                  + metadata     = {
                      + description = "The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."
                    }
                  + type         = "Array"
                }
              + effect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                    }
                  + type          = "String"
                }
              + firstThreshold  = {
                  + defaultValue = "90"
                  + metadata     = {
                      + description = "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                    }
                  + type         = "String"
                }
              + secondThreshold = {
                  + defaultValue = "100"
                  + metadata     = {
                      + description = "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
                    }
                  + type         = "String"
                }
              + timeGrain       = {
                  + allowedValues = [
                      + "Monthly",
                      + "Quarterly",
                      + "Annually",
                      + "BillingMonth",
                      + "BillingQuarter",
                      + "BillingAnnual",
                    ]
                  + defaultValue  = "Monthly"
                  + metadata      = {
                      + description = "The time covered by a budget. Tracking of the amount will be reset based on the time grain."
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Resources/subscriptions"
                          + field  = "type"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + location   = "northeurope"
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + amount          = {
                                      + value = "[parameters('amount')]"
                                    }
                                  + budgetName      = {
                                      + value = "[parameters('budgetName')]"
                                    }
                                  + contactEmails   = {
                                      + value = "[parameters('contactEmails')]"
                                    }
                                  + contactGroups   = {
                                      + value = "[parameters('contactGroups')]"
                                    }
                                  + contactRoles    = {
                                      + value = "[parameters('contactRoles')]"
                                    }
                                  + firstThreshold  = {
                                      + value = "[parameters('firstThreshold')]"
                                    }
                                  + secondThreshold = {
                                      + value = "[parameters('secondThreshold')]"
                                    }
                                  + timeGrain       = {
                                      + value = "[parameters('timeGrain')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json"
                                  + contentVersion = "1.0.0.0"
                                  + parameters     = {
                                      + amount          = {
                                          + type = "String"
                                        }
                                      + budgetName      = {
                                          + type = "String"
                                        }
                                      + contactEmails   = {
                                          + type = "Array"
                                        }
                                      + contactGroups   = {
                                          + type = "Array"
                                        }
                                      + contactRoles    = {
                                          + type = "Array"
                                        }
                                      + firstThreshold  = {
                                          + type = "String"
                                        }
                                      + secondThreshold = {
                                          + type = "String"
                                        }
                                      + startDate       = {
                                          + defaultValue = "[concat(utcNow('MM'), '/01/', utcNow('yyyy'))]"
                                          + type         = "String"
                                        }
                                      + timeGrain       = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2019-10-01"
                                          + name       = "[parameters('budgetName')]"
                                          + properties = {
                                              + amount        = "[parameters('amount')]"
                                              + category      = "Cost"
                                              + notifications = {
                                                  + NotificationForExceededBudget1 = {
                                                      + contactEmails = "[parameters('contactEmails')]"
                                                      + contactGroups = "[parameters('contactGroups')]"
                                                      + contactRoles  = "[parameters('contactRoles')]"
                                                      + enabled       = true
                                                      + operator      = "GreaterThan"
                                                      + threshold     = "[parameters('firstThreshold')]"
                                                    }
                                                  + NotificationForExceededBudget2 = {
                                                      + contactEmails = "[parameters('contactEmails')]"
                                                      + contactGroups = "[parameters('contactGroups')]"
                                                      + contactRoles  = "[parameters('contactRoles')]"
                                                      + enabled       = true
                                                      + operator      = "GreaterThan"
                                                      + threshold     = "[parameters('secondThreshold')]"
                                                    }
                                                }
                                              + timeGrain     = "[parameters('timeGrain')]"
                                              + timePeriod    = {
                                                  + startDate = "[parameters('startDate')]"
                                                }
                                            }
                                          + type       = "Microsoft.Consumption/budgets"
                                        },
                                    ]
                                }
                            }
                        }
                      + deploymentScope    = "subscription"
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "[parameters('amount')]"
                                  + field  = "Microsoft.Consumption/budgets/amount"
                                },
                              + {
                                  + equals = "[parameters('timeGrain')]"
                                  + field  = "Microsoft.Consumption/budgets/timeGrain"
                                },
                              + {
                                  + equals = "Cost"
                                  + field  = "Microsoft.Consumption/budgets/category"
                                },
                            ]
                        }
                      + existenceScope     = "subscription"
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
                        ]
                      + type               = "Microsoft.Consumption/budgets"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys a route table with specific user defined routes when one does not exist. The route table deployed by the policy must be manually associated to subnet(s)"
      + display_name        = "Deploy a route table with specific user defined routes"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Custom-Route-Table"
      + parameters          = jsonencode(
            {
              + disableBgpPropagation = {
                  + defaultValue = false
                  + metadata     = {
                      + description = "Disable BGP Propagation"
                      + displayName = "DisableBgpPropagation"
                    }
                  + type         = "Boolean"
                }
              + effect                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + requiredRoutes        = {
                  + metadata = {
                      + description = "Routes that must exist in compliant route tables deployed by this policy"
                      + displayName = "requiredRoutes"
                    }
                  + type     = "Array"
                }
              + routeTableName        = {
                  + metadata = {
                      + description = "Name of the route table automatically deployed by this policy"
                      + displayName = "routeTableName"
                    }
                  + type     = "String"
                }
              + vnetRegion            = {
                  + metadata = {
                      + description = "Only VNets in this region will be evaluated against this policy"
                      + displayName = "vnetRegion"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Network/virtualNetworks"
                          + field  = "type"
                        },
                      + {
                          + equals = "[parameters('vnetRegion')]"
                          + field  = "location"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "incremental"
                              + parameters = {
                                  + disableBgpPropagation = {
                                      + value = "[parameters('disableBgpPropagation')]"
                                    }
                                  + requiredRoutes        = {
                                      + value = "[parameters('requiredRoutes')]"
                                    }
                                  + routeTableName        = {
                                      + value = "[parameters('routeTableName')]"
                                    }
                                  + vnetRegion            = {
                                      + value = "[parameters('vnetRegion')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + parameters     = {
                                      + disableBgpPropagation = {
                                          + type = "bool"
                                        }
                                      + requiredRoutes        = {
                                          + type = "array"
                                        }
                                      + routeTableName        = {
                                          + type = "string"
                                        }
                                      + vnetRegion            = {
                                          + type = "string"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2021-04-01"
                                          + name       = "routeTableDepl"
                                          + properties = {
                                              + mode       = "Incremental"
                                              + parameters = {
                                                  + disableBgpPropagation = {
                                                      + value = "[parameters('disableBgpPropagation')]"
                                                    }
                                                  + requiredRoutes        = {
                                                      + value = "[parameters('requiredRoutes')]"
                                                    }
                                                  + routeTableName        = {
                                                      + value = "[parameters('routeTableName')]"
                                                    }
                                                  + vnetRegion            = {
                                                      + value = "[parameters('vnetRegion')]"
                                                    }
                                                }
                                              + template   = {
                                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                                  + contentVersion = "1.0.0.0"
                                                  + parameters     = {
                                                      + disableBgpPropagation = {
                                                          + type = "bool"
                                                        }
                                                      + requiredRoutes        = {
                                                          + type = "array"
                                                        }
                                                      + routeTableName        = {
                                                          + type = "string"
                                                        }
                                                      + vnetRegion            = {
                                                          + type = "string"
                                                        }
                                                    }
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2021-02-01"
                                                          + location   = "[[parameters('vnetRegion')]"
                                                          + name       = "[[parameters('routeTableName')]"
                                                          + properties = {
                                                              + copy                       = "[variables('copyLoop')]"
                                                              + disableBgpRoutePropagation = "[[parameters('disableBgpPropagation')]"
                                                            }
                                                          + type       = "Microsoft.Network/routeTables"
                                                        },
                                                    ]
                                                }
                                            }
                                          + type       = "Microsoft.Resources/deployments"
                                        },
                                    ]
                                  + variables      = {
                                      + copyLoop = [
                                          + {
                                              + count = "[[length(parameters('requiredRoutes'))]"
                                              + input = {
                                                  + name       = "[[concat('route-',copyIndex('routes'))]"
                                                  + properties = {
                                                      + addressPrefix    = "[[split(parameters('requiredRoutes')[copyIndex('routes')], ';')[0]]"
                                                      + nextHopIpAddress = "[[if(equals(toLower(split(parameters('requiredRoutes')[copyIndex('routes')], ';')[1]),'virtualappliance'),split(parameters('requiredRoutes')[copyIndex('routes')], ';')[2], null())]"
                                                      + nextHopType      = "[[split(parameters('requiredRoutes')[copyIndex('routes')], ';')[1]]"
                                                    }
                                                }
                                              + name  = "routes"
                                            },
                                        ]
                                    }
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "[parameters('routeTableName')]"
                                  + field  = "name"
                                },
                              + {
                                  + count  = {
                                      + field = "Microsoft.Network/routeTables/routes[*]"
                                      + where = {
                                          + in    = "[parameters('requiredRoutes')]"
                                          + value = "[concat(current('Microsoft.Network/routeTables/routes[*].addressPrefix'), ';', current('Microsoft.Network/routeTables/routes[*].nextHopType'), if(equals(toLower(current('Microsoft.Network/routeTables/routes[*].nextHopType')),'virtualappliance'), concat(';', current('Microsoft.Network/routeTables/routes[*].nextHopIpAddress')), ''))]"
                                        }
                                    }
                                  + equals = "[length(parameters('requiredRoutes'))]"
                                },
                            ]
                        }
                      + roleDefinitionIds  = [
                          + "/subscriptions/e867a45d-e513-44ac-931e-4741cef80b24/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                        ]
                      + type               = "Microsoft.Network/routeTables"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys an Azure DDoS Network Protection"
      + display_name        = "Deploy an Azure DDoS Network Protection"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + mode                = "All"
      + name                = "Deploy-DDoSProtection"
      + parameters          = jsonencode(
            {
              + ddosName   = {
                  + metadata = {
                      + description = "DDoSVnet"
                      + displayName = "ddosName"
                    }
                  + type     = "String"
                }
              + ddosRegion = {
                  + metadata = {
                      + description = "DDoSVnet location"
                      + displayName = "ddosRegion"
                      + strongType  = "location"
                    }
                  + type     = "String"
                }
              + effect     = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + rgName     = {
                  + metadata = {
                      + description = "Provide name for resource group."
                      + displayName = "rgName"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Resources/subscriptions"
                          + field  = "type"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment        = {
                          + location   = "northeurope"
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + ddosname   = {
                                      + value = "[parameters('ddosname')]"
                                    }
                                  + ddosregion = {
                                      + value = "[parameters('ddosRegion')]"
                                    }
                                  + rgName     = {
                                      + value = "[parameters('rgName')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + ddosRegion = {
                                          + type = "String"
                                        }
                                      + ddosname   = {
                                          + type = "String"
                                        }
                                      + rgName     = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2018-05-01"
                                          + location   = "[deployment().location]"
                                          + name       = "[parameters('rgName')]"
                                          + properties = {}
                                          + type       = "Microsoft.Resources/resourceGroups"
                                        },
                                      + {
                                          + apiVersion    = "2018-05-01"
                                          + dependsOn     = [
                                              + "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]",
                                            ]
                                          + name          = "ddosprotection"
                                          + properties    = {
                                              + mode     = "Incremental"
                                              + template = {
                                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json"
                                                  + contentVersion = "1.0.0.0"
                                                  + outputs        = {}
                                                  + parameters     = {}
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2019-12-01"
                                                          + location   = "[parameters('ddosRegion')]"
                                                          + name       = "[parameters('ddosName')]"
                                                          + properties = {}
                                                          + type       = "Microsoft.Network/ddosProtectionPlans"
                                                        },
                                                    ]
                                                }
                                            }
                                          + resourceGroup = "[parameters('rgName')]"
                                          + type          = "Microsoft.Resources/deployments"
                                        },
                                    ]
                                }
                            }
                        }
                      + deploymentScope   = "subscription"
                      + existenceScope    = "resourceGroup"
                      + name              = "[parameters('ddosName')]"
                      + resourceGroupName = "[parameters('rgName')]"
                      + roleDefinitionIds = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                        ]
                      + type              = "Microsoft.Network/ddosProtectionPlans"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Automation to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-AA"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Automation/automationAccounts"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "JobLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "JobStreams"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DscNodeStatus"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AuditEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Automation/automationAccounts/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The Policy willset the diagnostic with all metrics enabled."
      + display_name        = "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-ACI"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.ContainerInstance/containerGroups"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics  enabled."
      + display_name        = "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-ACR"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.ContainerRegistry/registries"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "ContainerRegistryLoginEvents"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ContainerRegistryRepositoryEvents"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for API Management to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-APIMgmt"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.ApiManagement/service"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "GatewayLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "WebSocketConnectionLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.ApiManagement/service/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for AVD Scaling Plans to stream to a Log Analytics workspace when any Scaling Plan which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled."
      + display_name        = "Deploy Diagnostic Settings for AVD Scaling Plans to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-AVDScalingPlans"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DesktopVirtualization/scalingplans"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Autoscale"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DesktopVirtualization/scalingplans/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-AnalysisService"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.AnalysisServices/servers"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Engine"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Service"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.AnalysisServices/servers/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-ApiForFHIR"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.HealthcareApis/services"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "AuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.HealthcareApis/services/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-ApplicationGateway"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/applicationGateways"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "ApplicationGatewayAccessLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ApplicationGatewayPerformanceLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ApplicationGatewayFirewallLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/applicationGateways/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Azure Bastion to stream to a Log Analytics workspace when any Azure Bastion which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Azure Bastion to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-Bastion"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/bastionHosts"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "BastionAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/bastionHosts/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-CDNEndpoints"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Cdn/profiles/endpoints"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('fullName')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "CoreAnalytics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = []
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-CognitiveServices"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.CognitiveServices/accounts"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Audit"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "RequestResponse"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Trace"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.CognitiveServices/accounts/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-CosmosDB"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DocumentDB/databaseAccounts"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "DataPlaneRequests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "MongoRequests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "QueryRuntimeStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "PartitionKeyStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "PartitionKeyRUConsumption"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ControlPlaneRequests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "CassandraRequests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "GremlinRequests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "Requests"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-DLAnalytics"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DataLakeAnalytics/accounts"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Audit"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Requests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-DataExplorerCluster"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Kusto/Clusters"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "SucceededIngestion"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "FailedIngestion"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "IngestionBatching"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Command"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Query"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "TableUsageStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "TableDetails"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Kusto/Clusters/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.2.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-DataFactory"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DataFactory/factories"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "ActivityRuns"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "PipelineRuns"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "TriggerRuns"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SSISPackageEventMessages"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SSISPackageExecutableStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SSISPackageEventMessageContext"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SSISPackageExecutionComponentPhases"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SSISPackageExecutionDataStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SSISIntegrationRuntimeLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SandboxPipelineRuns"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SandboxActivityRuns"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DataFactory/factories/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Databricks to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.2.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-Databricks"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Databricks/workspaces"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "dbfs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "clusters"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "accounts"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "jobs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "notebook"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ssh"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "workspace"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "secrets"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "sqlPermissions"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "instancePools"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "sqlanalytics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "genie"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "globalInitScripts"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "iamRole"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "mlflowExperiment"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "featureStore"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "RemoteHistoryService"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "mlflowAcledArtifact"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "databrickssql"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "deltaPipelines"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "modelRegistry"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "repos"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "unityCatalog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "gitCredentials"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "webTerminal"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Databricks/workspaces/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-EventGridSub"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.EventGrid/eventSubscriptions"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-EventGridSystemTopic"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.EventGrid/systemTopics"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "DeliveryFailures"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.EventGrid/systemTopics/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-EventGridTopic"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.EventGrid/topics"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "DeliveryFailures"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "PublishFailures"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.EventGrid/topics/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-ExpressRoute"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/expressRouteCircuits"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "PeeringRouteLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Firewall to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-Firewall"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/azureFirewalls"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "AzureFirewallApplicationRule"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AzureFirewallNetworkRule"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AzureFirewallDnsProxy"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWNetworkRule"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWApplicationRule"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWNatRule"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWThreatIntel"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWIdpsSignature"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWDnsQuery"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWFqdnResolveFailure"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWApplicationRuleAggregation"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWNetworkRuleAggregation"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWNatRuleAggregation"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWFatFlow"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AZFWFlowTrace"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/azureFirewalls/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Front Door to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-FrontDoor"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/frontDoors"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "FrontdoorAccessLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "FrontdoorWebApplicationFirewallLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/frontDoors/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-Function"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites"
                          + field  = "type"
                        },
                      + {
                          + contains = "functionapp"
                          + value    = "[field('kind')]"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "FunctionAppLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Web/sites/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-HDInsight"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.HDInsight/clusters"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.HDInsight/clusters/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-LoadBalancer"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/loadBalancers"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "LoadBalancerAlertEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "LoadBalancerProbeHealthStatus"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/loadBalancers/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Log Analytics workspaces to stream to a Log Analytics workspace when any Log Analytics workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Log Analytics to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-LogAnalytics"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "microsoft.operationalinsights/workspaces"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Audit"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "microsoft.operationalinsights/workspaces/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-LogicAppsISE"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Logic/integrationAccounts"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "IntegrationAccountTrackingEvents"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = []
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Logic/integrationAccounts/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-MariaDB"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DBforMariaDB/servers"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "MySqlSlowLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "MySqlAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DBforMariaDB/servers/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-MediaService"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Media/mediaServices"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "KeyDeliveryRequests"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Media/mediaServices/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.2.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-MlWorkspace"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.MachineLearningServices/workspaces"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "AmlComputeClusterEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AmlComputeClusterNodeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AmlComputeJobEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AmlComputeCpuGpuUtilization"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AmlRunStatusChangedEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ModelsChangeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ModelsReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ModelsActionEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DeploymentReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DeploymentEventACI"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DeploymentEventAKS"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "InferencingOperationAKS"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "InferencingOperationACI"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DataLabelChangeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DataLabelReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "ComputeInstanceEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DataStoreChangeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DataStoreReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DataSetChangeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DataSetReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "PipelineChangeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "PipelineReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "RunEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "RunReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "EnvironmentChangeEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "EnvironmentReadEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-MySQL"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DBforMySQL/servers"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "MySqlSlowLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "MySqlAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DBforMySQL/servers/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-NIC"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/networkInterfaces"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/networkInterfaces/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-NetworkSecurityGroups"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/networkSecurityGroups"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "NetworkSecurityGroupEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "NetworkSecurityGroupRuleCounter"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = []
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-PostgreSQL"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DBforPostgreSQL/servers"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "PostgreSQLLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "QueryStoreRuntimeStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "QueryStoreWaitStatistics"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-PowerBIEmbedded"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.PowerBIDedicated/capacities"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Engine"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-RedisCache"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Cache/redis"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Cache/redis/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Relay to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-Relay"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Relay/namespaces"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "HybridConnectionsEvent"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Relay/namespaces/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-SQLElasticPools"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Sql/servers/elasticPools"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('fullName')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-SQLMI"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Sql/managedInstances"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "ResourceUsageStats"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SQLSecurityAuditEvents"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DevOpsOperationsAudit"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Sql/managedInstances/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for SignalR to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-SignalR"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.SignalRService/SignalR"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "AllLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.SignalRService/SignalR/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-TimeSeriesInsights"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.TimeSeriesInsights/environments"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Ingress"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Management"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-TrafficManager"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/trafficManagerProfiles"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "ProbeHealthStatusEvents"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-VM"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Compute/virtualMachines"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Compute/virtualMachines/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-VMSS"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Compute/virtualMachineScaleSets"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled."
      + display_name        = "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-VNetGW"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/virtualNetworkGateways"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "GatewayDiagnosticLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "IKEDiagnosticLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "P2SDiagnosticLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "RouteDiagnosticLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "RouteDiagnosticLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "TunnelDiagnosticLog"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-VirtualNetwork"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/virtualNetworks"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "VMProtectionAlerts"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Network/virtualNetworks/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for AVD Application group to stream to a Log Analytics workspace when any application group which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled."
      + display_name        = "Deploy Diagnostic Settings for AVD Application group to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.1"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-WVDAppGroup"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DesktopVirtualization/applicationGroups"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Checkpoint"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Error"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Management"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DesktopVirtualization/applicationGroups/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for AVD Host Pools to stream to a Log Analytics workspace when any Host Pools which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled."
      + display_name        = "Deploy Diagnostic Settings for AVD Host Pools to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.2.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-WVDHostPools"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DesktopVirtualization/hostpools"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Checkpoint"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Error"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Management"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Connection"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "HostRegistration"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AgentHealthStatus"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "NetworkData"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "SessionHostManagement"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DesktopVirtualization/hostpools/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for AVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all and categorys enabled."
      + display_name        = "Deploy Diagnostic Settings for AVD Workspace to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.1"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-WVDWorkspace"
      + parameters          = jsonencode(
            {
              + effect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled  = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + profileName  = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.DesktopVirtualization/workspaces"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location     = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled  = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + profileName  = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location     = {
                                          + type = "String"
                                        }
                                      + logAnalytics = {
                                          + type = "String"
                                        }
                                      + logsEnabled  = {
                                          + type = "String"
                                        }
                                      + profileName  = {
                                          + type = "String"
                                        }
                                      + resourceName = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Checkpoint"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Error"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Management"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Feed"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.DesktopVirtualization/workspaces/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-WebServerFarm"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Web/serverfarms"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = []
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Web/serverfarms/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for App Service to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-Website"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Web/sites"
                          + field  = "type"
                        },
                      + {
                          + notContains = "functionapp"
                          + value       = "[field('kind')]"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "AppServiceAntivirusScanAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServiceHTTPLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServiceConsoleLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServiceAppLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServiceFileAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServiceAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServiceIPSecAuditLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "AppServicePlatformLogs"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Web/sites/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
      + display_name        = "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Diagnostics-iotHub"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + logsEnabled    = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable logs stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable logs"
                    }
                  + type          = "String"
                }
              + metricsEnabled = {
                  + allowedValues = [
                      + "True",
                      + "False",
                    ]
                  + defaultValue  = "True"
                  + metadata      = {
                      + description = "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                      + displayName = "Enable metrics"
                    }
                  + type          = "String"
                }
              + profileName    = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Devices/IotHubs"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location       = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics   = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + logsEnabled    = {
                                      + value = "[parameters('logsEnabled')]"
                                    }
                                  + metricsEnabled = {
                                      + value = "[parameters('metricsEnabled')]"
                                    }
                                  + profileName    = {
                                      + value = "[parameters('profileName')]"
                                    }
                                  + resourceName   = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location       = {
                                          + type = "String"
                                        }
                                      + logAnalytics   = {
                                          + type = "String"
                                        }
                                      + logsEnabled    = {
                                          + type = "String"
                                        }
                                      + metricsEnabled = {
                                          + type = "String"
                                        }
                                      + profileName    = {
                                          + type = "String"
                                        }
                                      + resourceName   = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-05-01-preview"
                                          + dependsOn  = []
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]"
                                          + properties = {
                                              + logs        = [
                                                  + {
                                                      + category = "Connections"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DeviceTelemetry"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "C2DCommands"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DeviceIdentityOperations"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "FileUploadOperations"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Routes"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "D2CTwinOperations"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "C2DTwinOperations"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "TwinQueries"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "JobsOperations"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DirectMethods"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DistributedTracing"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "Configurations"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                  + {
                                                      + category = "DeviceStreams"
                                                      + enabled  = "[parameters('logsEnabled')]"
                                                    },
                                                ]
                                              + metrics     = [
                                                  + {
                                                      + category        = "AllMetrics"
                                                      + enabled         = "[parameters('metricsEnabled')]"
                                                      + retentionPolicy = {
                                                          + days    = 0
                                                          + enabled = false
                                                        }
                                                      + timeGrain       = null
                                                    },
                                                ]
                                              + workspaceId = "[parameters('logAnalytics')]"
                                            }
                                          + type       = "Microsoft.Devices/IotHubs/providers/diagnosticSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/logs.enabled"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Insights/diagnosticSettings/metrics.enabled"
                                },
                              + {
                                  + equals = "[parameters('logAnalytics')]"
                                  + field  = "Microsoft.Insights/diagnosticSettings/workspaceId"
                                },
                            ]
                        }
                      + name               = "[parameters('profileName')]"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Insights/diagnosticSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys Azure Firewall Manager policy in subscription where the policy is assigned."
      + display_name        = "Deploy Azure Firewall Manager policy in the subscription"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "All"
      + name                = "Deploy-FirewallPolicy"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + fwPolicyRegion = {
                  + metadata = {
                      + description = "Select Azure region for Azure Firewall Policy"
                      + displayName = "fwPolicyRegion"
                      + strongType  = "location"
                    }
                  + type     = "String"
                }
              + fwpolicy       = {
                  + defaultValue = {}
                  + metadata     = {
                      + description = "Object describing Azure Firewall Policy"
                      + displayName = "fwpolicy"
                    }
                  + type         = "Object"
                }
              + rgName         = {
                  + metadata = {
                      + description = "Provide name for resource group."
                      + displayName = "rgName"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Resources/subscriptions"
                          + field  = "type"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment        = {
                          + location   = "northeurope"
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + fwPolicy       = {
                                      + value = "[parameters('fwPolicy')]"
                                    }
                                  + fwPolicyRegion = {
                                      + value = "[parameters('fwPolicyRegion')]"
                                    }
                                  + rgName         = {
                                      + value = "[parameters('rgName')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + fwPolicy       = {
                                          + type = "object"
                                        }
                                      + fwPolicyRegion = {
                                          + type = "String"
                                        }
                                      + rgName         = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2018-05-01"
                                          + location   = "[deployment().location]"
                                          + name       = "[parameters('rgName')]"
                                          + properties = {}
                                          + type       = "Microsoft.Resources/resourceGroups"
                                        },
                                      + {
                                          + apiVersion    = "2018-05-01"
                                          + dependsOn     = [
                                              + "[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]",
                                            ]
                                          + name          = "fwpolicies"
                                          + properties    = {
                                              + mode     = "Incremental"
                                              + template = {
                                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json"
                                                  + contentVersion = "1.0.0.0"
                                                  + outputs        = {}
                                                  + parameters     = {}
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2019-09-01"
                                                          + dependsOn  = []
                                                          + location   = "[parameters('fwpolicy').location]"
                                                          + name       = "[parameters('fwpolicy').firewallPolicyName]"
                                                          + properties = {}
                                                          + resources  = [
                                                              + {
                                                                  + apiVersion = "2019-09-01"
                                                                  + dependsOn  = [
                                                                      + "[resourceId('Microsoft.Network/firewallPolicies',parameters('fwpolicy').firewallPolicyName)]",
                                                                    ]
                                                                  + name       = "[parameters('fwpolicy').ruleGroups.name]"
                                                                  + properties = {
                                                                      + priority = "[parameters('fwpolicy').ruleGroups.properties.priority]"
                                                                      + rules    = "[parameters('fwpolicy').ruleGroups.properties.rules]"
                                                                    }
                                                                  + type       = "ruleGroups"
                                                                },
                                                            ]
                                                          + tags       = {}
                                                          + type       = "Microsoft.Network/firewallPolicies"
                                                        },
                                                    ]
                                                  + variables      = {}
                                                }
                                            }
                                          + resourceGroup = "[parameters('rgName')]"
                                          + type          = "Microsoft.Resources/deployments"
                                        },
                                    ]
                                }
                            }
                        }
                      + deploymentScope   = "subscription"
                      + existenceScope    = "resourceGroup"
                      + resourceGroupName = "[parameters('rgName')]"
                      + roleDefinitionIds = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
                        ]
                      + type              = "Microsoft.Network/firewallPolicies"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "Azure Database for MySQL server deploy a specific min TLS version and enforce SSL."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-MySQL-sslEnforcement"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version Azure Database for MySQL server"
                      + displayName = "Effect minimum TLS version Azure Database for MySQL server"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_0",
                      + "TLS1_1",
                      + "TLSEnforcementDisabled",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                      + displayName = "Select version minimum TLS for MySQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.DBforMySQL/servers"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + field     = "Microsoft.DBforMySQL/servers/sslEnforcement"
                                  + notEquals = "Enabled"
                                },
                              + {
                                  + field     = "Microsoft.DBforMySQL/servers/minimalTlsVersion"
                                  + notequals = "[parameters('minimalTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location          = {
                                      + value = "[field('location')]"
                                    }
                                  + minimalTlsVersion = {
                                      + value = "[parameters('minimalTlsVersion')]"
                                    }
                                  + resourceName      = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location          = {
                                          + type = "String"
                                        }
                                      + minimalTlsVersion = {
                                          + type = "String"
                                        }
                                      + resourceName      = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-12-01"
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'))]"
                                          + properties = {
                                              + minimalTlsVersion = "[parameters('minimalTlsVersion')]"
                                              + sslEnforcement    = "[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]"
                                            }
                                          + type       = "Microsoft.DBforMySQL/servers"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "Enabled"
                                  + field  = "Microsoft.DBforMySQL/servers/sslEnforcement"
                                },
                              + {
                                  + equals = "[parameters('minimalTlsVersion')]"
                                  + field  = "Microsoft.DBforMySQL/servers/minimalTlsVersion"
                                },
                            ]
                        }
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        ]
                      + type               = "Microsoft.DBforMySQL/servers"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "[Deprecated] Deprecated by built-in policy. Deploys NSG flow logs and traffic analytics to a storageaccountid with a specified retention period."
      + display_name        = "[Deprecated] Deploys NSG flow logs and traffic analytics"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + deprecated           = true
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0-deprecated"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Nsg-FlowLogs"
      + parameters          = jsonencode(
            {
              + effect                   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + flowAnalyticsEnabled     = {
                  + defaultValue = false
                  + metadata     = {
                      + displayName = "Enable Traffic Analytics"
                    }
                  + type         = "Boolean"
                }
              + logAnalytics             = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Resource ID of Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type         = "String"
                }
              + retention                = {
                  + defaultValue = 5
                  + metadata     = {
                      + displayName = "Retention"
                    }
                  + type         = "Integer"
                }
              + storageAccountResourceId = {
                  + metadata = {
                      + displayName = "Storage Account Resource Id"
                      + strongType  = "Microsoft.Storage/storageAccounts"
                    }
                  + type     = "String"
                }
              + trafficAnalyticsInterval = {
                  + defaultValue = 60
                  + metadata     = {
                      + displayName = "Traffic Analytics processing interval mins (10/60)"
                    }
                  + type         = "Integer"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Network/networkSecurityGroups"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + flowAnalyticsEnabled     = {
                                      + value = "[parameters('flowAnalyticsEnabled')]"
                                    }
                                  + location                 = {
                                      + value = "[field('location')]"
                                    }
                                  + logAnalytics             = {
                                      + value = "[parameters('logAnalytics')]"
                                    }
                                  + networkSecurityGroupName = {
                                      + value = "[field('name')]"
                                    }
                                  + resourceGroupName        = {
                                      + value = "[resourceGroup().name]"
                                    }
                                  + retention                = {
                                      + value = "[parameters('retention')]"
                                    }
                                  + storageAccountResourceId = {
                                      + value = "[parameters('storageAccountResourceId')]"
                                    }
                                  + trafficAnalyticsInterval = {
                                      + value = "[parameters('trafficAnalyticsInterval')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + flowAnalyticsEnabled     = {
                                          + type = "bool"
                                        }
                                      + location                 = {
                                          + type = "String"
                                        }
                                      + logAnalytics             = {
                                          + type = "String"
                                        }
                                      + networkSecurityGroupName = {
                                          + type = "String"
                                        }
                                      + resourceGroupName        = {
                                          + type = "String"
                                        }
                                      + retention                = {
                                          + type = "int"
                                        }
                                      + storageAccountResourceId = {
                                          + type = "String"
                                        }
                                      + trafficAnalyticsInterval = {
                                          + type = "int"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2020-05-01"
                                          + location   = "[parameters('location')]"
                                          + name       = "[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]"
                                          + properties = {
                                              + enabled                    = true
                                              + flowAnalyticsConfiguration = {
                                                  + networkWatcherFlowAnalyticsConfiguration = {
                                                      + enabled                  = "[bool(parameters('flowAnalyticsEnabled'))]"
                                                      + trafficAnalyticsInterval = "[parameters('trafficAnalyticsInterval')]"
                                                      + workspaceId              = "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]"
                                                      + workspaceRegion          = "[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]"
                                                      + workspaceResourceId      = "[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                                                    }
                                                }
                                              + format                     = {
                                                  + type    = "JSON"
                                                  + version = 2
                                                }
                                              + retentionPolicy            = {
                                                  + days    = "[parameters('retention')]"
                                                  + enabled = true
                                                }
                                              + storageId                  = "[parameters('storageAccountResourceId')]"
                                              + targetResourceId           = "[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                                            }
                                          + type       = "Microsoft.Network/networkWatchers/flowLogs"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Network/networkWatchers/flowLogs/enabled"
                                },
                              + {
                                  + equals = "[parameters('flowAnalyticsEnabled')]"
                                  + field  = "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"
                                },
                            ]
                        }
                      + resourceGroupName  = "NetworkWatcherRG"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                        ]
                      + type               = "Microsoft.Network/networkWatchers/flowLogs"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "[Deprecated] Deprecated by built-in policy. Deploys NSG flow logs and traffic analytics to Log Analytics with a specfied retention period."
      + display_name        = "[Deprecated] Deploys NSG flow logs and traffic analytics to Log Analytics"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Monitoring"
              + deprecated           = true
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0-deprecated"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Nsg-FlowLogs-to-LA"
      + parameters          = jsonencode(
            {
              + effect    = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + interval  = {
                  + defaultValue = 60
                  + metadata     = {
                      + displayName = "Traffic Analytics processing interval mins (10/60)"
                    }
                  + type         = "Integer"
                }
              + retention = {
                  + defaultValue = 5
                  + metadata     = {
                      + displayName = "Retention"
                    }
                  + type         = "Integer"
                }
              + workspace = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Resource ID of Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Network/networkSecurityGroups"
                          + field  = "type"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + location   = "northeurope"
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + interval             = {
                                      + value = "[parameters('interval')]"
                                    }
                                  + location             = {
                                      + value = "[field('location')]"
                                    }
                                  + networkSecurityGroup = {
                                      + value = "[field('id')]"
                                    }
                                  + retention            = {
                                      + value = "[parameters('retention')]"
                                    }
                                  + workspace            = {
                                      + value = "[parameters('workspace')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + interval             = {
                                          + type = "int"
                                        }
                                      + location             = {
                                          + type = "String"
                                        }
                                      + networkSecurityGroup = {
                                          + type = "String"
                                        }
                                      + retention            = {
                                          + type = "int"
                                        }
                                      + time                 = {
                                          + defaultValue = "[utcNow()]"
                                          + type         = "String"
                                        }
                                      + workspace            = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion    = "2019-10-01"
                                          + name          = "[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]"
                                          + properties    = {
                                              + mode     = "Incremental"
                                              + template = {
                                                  + "$schema"      = "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
                                                  + contentVersion = "1.0.0.0"
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2019-06-01"
                                                          + kind       = "StorageV2"
                                                          + location   = "[parameters('location')]"
                                                          + name       = "[variables('storageAccountName')]"
                                                          + properties = {}
                                                          + sku        = {
                                                              + name = "Standard_LRS"
                                                              + tier = "Standard"
                                                            }
                                                          + type       = "Microsoft.Storage/storageAccounts"
                                                        },
                                                    ]
                                                }
                                            }
                                          + resourceGroup = "[variables('resourceGroupName')]"
                                          + type          = "Microsoft.Resources/deployments"
                                        },
                                      + {
                                          + apiVersion    = "2019-10-01"
                                          + dependsOn     = [
                                              + "[concat(variables('resourceGroupName'), '.', variables('securityGroupName'))]",
                                            ]
                                          + name          = "[concat('NetworkWatcherRG', '.', variables('securityGroupName'))]"
                                          + properties    = {
                                              + mode     = "Incremental"
                                              + template = {
                                                  + "$schema"      = "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
                                                  + contentVersion = "1.0.0.0"
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2020-05-01"
                                                          + location   = "[parameters('location')]"
                                                          + name       = "[concat('NetworkWatcher_', toLower(parameters('location')))]"
                                                          + properties = {}
                                                          + resources  = [
                                                              + {
                                                                  + apiVersion = "2019-11-01"
                                                                  + dependsOn  = [
                                                                      + "[concat('NetworkWatcher_', toLower(parameters('location')))]",
                                                                    ]
                                                                  + location   = "[parameters('location')]"
                                                                  + name       = "[concat(variables('securityGroupName'), '-Network-flowlog')]"
                                                                  + properties = {
                                                                      + enabled                    = true
                                                                      + flowAnalyticsConfiguration = {
                                                                          + networkWatcherFlowAnalyticsConfiguration = {
                                                                              + enabled                  = true
                                                                              + trafficAnalyticsInterval = "[parameters('interval')]"
                                                                              + workspaceResourceId      = "[parameters('workspace')]"
                                                                            }
                                                                        }
                                                                      + format                     = {
                                                                          + type    = "JSON"
                                                                          + version = 2
                                                                        }
                                                                      + retentionPolicy            = {
                                                                          + days    = "[parameters('retention')]"
                                                                          + enabled = true
                                                                        }
                                                                      + storageId                  = "[concat(subscription().id, '/resourceGroups/', variables('resourceGroupName'), '/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
                                                                      + targetResourceId           = "[parameters('networkSecurityGroup')]"
                                                                    }
                                                                  + type       = "flowLogs"
                                                                },
                                                            ]
                                                          + type       = "Microsoft.Network/networkWatchers"
                                                        },
                                                    ]
                                                }
                                            }
                                          + resourceGroup = "NetworkWatcherRG"
                                          + type          = "Microsoft.Resources/deployments"
                                        },
                                    ]
                                  + variables      = {
                                      + resourceGroupName  = "[split(parameters('networkSecurityGroup'), '/')[4]]"
                                      + securityGroupName  = "[split(parameters('networkSecurityGroup'), '/')[8]]"
                                      + storageAccountName = "[concat('es', uniqueString(variables('securityGroupName'), parameters('time')))]"
                                    }
                                }
                            }
                        }
                      + deploymentScope    = "subscription"
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Network/networkWatchers/flowLogs/enabled"
                                },
                            ]
                        }
                      + existenceScope     = "resourceGroup"
                      + name               = "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]"
                      + resourceGroupName  = "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]"
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
                          + "/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12",
                          + "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
                          + "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab",
                          + "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
                        ]
                      + type               = "Microsoft.Network/networkWatchers/flowlogs"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "Azure Database for PostgreSQL server deploy a specific min TLS version requirement and enforce SSL "
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-PostgreSQL-sslEnforcement"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server"
                      + displayName = "Effect Azure Database for PostgreSQL server"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_0",
                      + "TLS1_1",
                      + "TLSEnforcementDisabled",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version minimum TLS version Azure Database for PostgreSQL server to enforce"
                      + displayName = "Select version for PostgreSQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.DBforPostgreSQL/servers"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + field     = "Microsoft.DBforPostgreSQL/servers/sslEnforcement"
                                  + notEquals = "Enabled"
                                },
                              + {
                                  + field     = "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion"
                                  + notEquals = "[parameters('minimalTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location          = {
                                      + value = "[field('location')]"
                                    }
                                  + minimalTlsVersion = {
                                      + value = "[parameters('minimalTlsVersion')]"
                                    }
                                  + resourceName      = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location          = {
                                          + type = "String"
                                        }
                                      + minimalTlsVersion = {
                                          + type = "String"
                                        }
                                      + resourceName      = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-12-01"
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'))]"
                                          + properties = {
                                              + minimalTlsVersion = "[parameters('minimalTlsVersion')]"
                                              + sslEnforcement    = "[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]"
                                            }
                                          + type       = "Microsoft.DBforPostgreSQL/servers"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "Enabled"
                                  + field  = "Microsoft.DBforPostgreSQL/servers/sslEnforcement"
                                },
                              + {
                                  + equals = "[parameters('minimalTlsVersion')]"
                                  + field  = "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion"
                                },
                            ]
                        }
                      + name               = "current"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        ]
                      + type               = "Microsoft.DBforPostgreSQL/servers"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploys a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "SQL servers deploys a specific min TLS version requirement."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-SQL-minTLS"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version SQL servers"
                      + displayName = "Effect SQL servers"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.1",
                      + "1.0",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version minimum TLS version SQL servers to enforce"
                      + displayName = "Select version for SQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Sql/servers"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.Sql/servers/minimalTlsVersion"
                          + notequals = "[parameters('minimalTlsVersion')]"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location          = {
                                      + value = "[field('location')]"
                                    }
                                  + minimalTlsVersion = {
                                      + value = "[parameters('minimalTlsVersion')]"
                                    }
                                  + resourceName      = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location          = {
                                          + type = "String"
                                        }
                                      + minimalTlsVersion = {
                                          + type = "String"
                                        }
                                      + resourceName      = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2019-06-01-preview"
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'))]"
                                          + properties = {
                                              + minimalTlsVersion = "[parameters('minimalTlsVersion')]"
                                            }
                                          + type       = "Microsoft.Sql/servers"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "[parameters('minimalTlsVersion')]"
                                  + field  = "Microsoft.Sql/servers/minimalTlsVersion"
                                },
                            ]
                        }
                      + name               = "current"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        ]
                      + type               = "Microsoft.Sql/servers"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy auditing settings to SQL Database when it not exist in the deployment"
      + display_name        = "Deploy SQL database auditing settings"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Sql-AuditingSettings"
      + parameters          = jsonencode(
            {
              + effect = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Sql/servers/databases"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location              = {
                                      + value = "[field('location')]"
                                    }
                                  + sqlServerDataBaseName = {
                                      + value = "[field('name')]"
                                    }
                                  + sqlServerName         = {
                                      + value = "[first(split(field('fullname'),'/'))]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location              = {
                                          + type = "String"
                                        }
                                      + sqlServerDataBaseName = {
                                          + type = "String"
                                        }
                                      + sqlServerName         = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-03-01-preview"
                                          + name       = "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]"
                                          + properties = {
                                              + auditActionsAndGroups       = [
                                                  + "BATCH_COMPLETED_GROUP",
                                                  + "DATABASE_OBJECT_CHANGE_GROUP",
                                                  + "SCHEMA_OBJECT_CHANGE_GROUP",
                                                  + "BACKUP_RESTORE_GROUP",
                                                  + "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
                                                  + "DATABASE_PRINCIPAL_CHANGE_GROUP",
                                                  + "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
                                                  + "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
                                                  + "USER_CHANGE_PASSWORD_GROUP",
                                                  + "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
                                                  + "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
                                                  + "DATABASE_PERMISSION_CHANGE_GROUP",
                                                  + "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
                                                  + "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                                                  + "FAILED_DATABASE_AUTHENTICATION_GROUP",
                                                ]
                                              + isAzureMonitorTargetEnabled = true
                                              + state                       = "enabled"
                                            }
                                          + type       = "Microsoft.Sql/servers/databases/auditingSettings"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "enabled"
                                  + field  = "Microsoft.Sql/servers/databases/auditingSettings/state"
                                },
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled"
                                },
                            ]
                        }
                      + name               = "default"
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                        ]
                      + type               = "Microsoft.Sql/servers/databases/auditingSettings"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
      + display_name        = "Deploy SQL Database security Alert Policies configuration with email admin accounts"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.1"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Sql-SecurityAlertPolicies"
      + parameters          = jsonencode(
            {
              + effect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + emailAddresses = {
                  + defaultValue = [
                      + "admin@contoso.com",
                      + "admin@fabrikam.com",
                    ]
                  + type         = "Array"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Sql/servers/databases"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + emailAddresses        = {
                                      + value = "[parameters('emailAddresses')]"
                                    }
                                  + location              = {
                                      + value = "[field('location')]"
                                    }
                                  + sqlServerDataBaseName = {
                                      + value = "[field('name')]"
                                    }
                                  + sqlServerName         = {
                                      + value = "[first(split(field('fullname'),'/'))]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + emailAddresses        = {
                                          + type = "Array"
                                        }
                                      + location              = {
                                          + type = "String"
                                        }
                                      + sqlServerDataBaseName = {
                                          + type = "String"
                                        }
                                      + sqlServerName         = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2018-06-01-preview"
                                          + name       = "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]"
                                          + properties = {
                                              + disabledAlerts          = [
                                                  + "",
                                                ]
                                              + emailAccountAdmins      = true
                                              + emailAddresses          = "[parameters('emailAddresses')]"
                                              + retentionDays           = 0
                                              + state                   = "Enabled"
                                              + storageAccountAccessKey = ""
                                              + storageEndpoint         = null
                                            }
                                          + type       = "Microsoft.Sql/servers/databases/securityAlertPolicies"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "Enabled"
                                  + field  = "Microsoft.Sql/servers/databases/securityAlertPolicies/state"
                                },
                            ]
                        }
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                        ]
                      + type               = "Microsoft.Sql/servers/databases/securityAlertPolicies"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
      + display_name        = "Deploy SQL Database Transparent Data Encryption"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Sql-Tde"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + excludedDatabases = {
                  + defaultValue = [
                      + "master",
                      + "model",
                      + "tempdb",
                      + "msdb",
                      + "resource",
                    ]
                  + metadata     = {
                      + description = "Array of databases that are excluded from this policy"
                      + displayName = "Excluded Databases"
                    }
                  + type         = "Array"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Sql/servers/databases"
                          + field  = "type"
                        },
                      + {
                          + field = "name"
                          + notIn = "[parameters('excludedDatabases')]"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location              = {
                                      + value = "[field('location')]"
                                    }
                                  + sqlServerDataBaseName = {
                                      + value = "[field('name')]"
                                    }
                                  + sqlServerName         = {
                                      + value = "[first(split(field('fullname'),'/'))]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location              = {
                                          + type = "String"
                                        }
                                      + sqlServerDataBaseName = {
                                          + type = "String"
                                        }
                                      + sqlServerName         = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2014-04-01"
                                          + name       = "[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/current')]"
                                          + properties = {
                                              + status = "Enabled"
                                            }
                                          + type       = "Microsoft.Sql/servers/databases/transparentDataEncryption"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "Enabled"
                                  + field  = "Microsoft.Sql/transparentDataEncryption.status"
                                },
                            ]
                        }
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                        ]
                      + type               = "Microsoft.Sql/servers/databases/transparentDataEncryption"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters"
      + display_name        = "Deploy SQL Database vulnerability Assessments"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Sql-vulnerabilityAssessments"
      + parameters          = jsonencode(
            {
              + effect                            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + vulnerabilityAssessmentsEmail     = {
                  + metadata = {
                      + description = "The email address to send alerts. For multiple emails, format in the following 'email1@contoso.com;email2@contoso.com'"
                      + displayName = "The email address to send alerts. For multiple emails, format in the following 'email1@contoso.com;email2@contoso.com'"
                    }
                  + type     = "String"
                }
              + vulnerabilityAssessmentsStorageID = {
                  + metadata = {
                      + description = "The storage account ID to store assessments"
                      + displayName = "The storage account ID to store assessments"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + equals = "Microsoft.Sql/servers/databases"
                  + field  = "type"
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location                          = {
                                      + value = "[field('location')]"
                                    }
                                  + sqlServerDataBaseName             = {
                                      + value = "[field('name')]"
                                    }
                                  + sqlServerName                     = {
                                      + value = "[first(split(field('fullname'),'/'))]"
                                    }
                                  + vulnerabilityAssessmentsEmail     = {
                                      + value = "[parameters('vulnerabilityAssessmentsEmail')]"
                                    }
                                  + vulnerabilityAssessmentsStorageID = {
                                      + value = "[parameters('vulnerabilityAssessmentsStorageID')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location                          = {
                                          + type = "String"
                                        }
                                      + sqlServerDataBaseName             = {
                                          + type = "String"
                                        }
                                      + sqlServerName                     = {
                                          + type = "String"
                                        }
                                      + vulnerabilityAssessmentsEmail     = {
                                          + type = "String"
                                        }
                                      + vulnerabilityAssessmentsStorageID = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2017-03-01-preview"
                                          + name       = "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]"
                                          + properties = {
                                              + recurringScans          = {
                                                  + emailSubscriptionAdmins = false
                                                  + emails                  = [
                                                      + "[parameters('vulnerabilityAssessmentsEmail')]",
                                                    ]
                                                  + isEnabled               = true
                                                }
                                              + storageAccountAccessKey = "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
                                              + storageContainerPath    = "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]"
                                            }
                                          + type       = "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "[parameters('vulnerabilityAssessmentsEmail')]"
                                  + field  = "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails"
                                },
                              + {
                                  + equals = true
                                  + field  = "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled"
                                },
                            ]
                        }
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                          + "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                          + "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab",
                        ]
                      + type               = "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy a specific min TLS version requirement and enforce SSL on SQL managed instances. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
      + display_name        = "SQL managed instances deploy a specific min TLS version requirement."
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-SqlMi-minTLS"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version SQL servers"
                      + displayName = "Effect SQL servers"
                    }
                  + type          = "String"
                }
              + minimalTlsVersion = {
                  + allowedValues = [
                      + "1.2",
                      + "1.1",
                      + "1.0",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version minimum TLS version SQL servers to enforce"
                      + displayName = "Select version for SQL server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Sql/managedInstances"
                          + field  = "type"
                        },
                      + {
                          + field     = "Microsoft.Sql/managedInstances/minimalTlsVersion"
                          + notequals = "[parameters('minimalTlsVersion')]"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location          = {
                                      + value = "[field('location')]"
                                    }
                                  + minimalTlsVersion = {
                                      + value = "[parameters('minimalTlsVersion')]"
                                    }
                                  + resourceName      = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location          = {
                                          + type = "String"
                                        }
                                      + minimalTlsVersion = {
                                          + type = "String"
                                        }
                                      + resourceName      = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2020-02-02-preview"
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'))]"
                                          + properties = {
                                              + minimalTlsVersion = "[parameters('minimalTlsVersion')]"
                                            }
                                          + type       = "Microsoft.Sql/managedInstances"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "[parameters('minimalTlsVersion')]"
                                  + field  = "Microsoft.Sql/managedInstances/minimalTlsVersion"
                                },
                            ]
                        }
                      + name               = "current"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        ]
                      + type               = "Microsoft.Sql/managedInstances"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy a specific min TLS version requirement and enforce SSL on Azure Storage. Enables secure server to client by enforce minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your Azure Storage."
      + display_name        = "Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS "
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Storage"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Storage-sslEnforcement"
      + parameters          = jsonencode(
            {
              + effect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy minimum TLS version Azure STorage"
                      + displayName = "Effect Azure Storage"
                    }
                  + type          = "String"
                }
              + minimumTlsVersion = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_1",
                      + "TLS1_0",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version minimum TLS version Azure STorage to enforce"
                      + displayName = "Select TLS version for Azure Storage server"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Storage/storageAccounts"
                          + field  = "type"
                        },
                      + {
                          + anyOf = [
                              + {
                                  + field     = "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
                                  + notEquals = "true"
                                },
                              + {
                                  + field     = "Microsoft.Storage/storageAccounts/minimumTlsVersion"
                                  + notEquals = "[parameters('minimumTlsVersion')]"
                                },
                            ]
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + location          = {
                                      + value = "[field('location')]"
                                    }
                                  + minimumTlsVersion = {
                                      + value = "[parameters('minimumTlsVersion')]"
                                    }
                                  + resourceName      = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + location          = {
                                          + type = "String"
                                        }
                                      + minimumTlsVersion = {
                                          + type = "String"
                                        }
                                      + resourceName      = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2019-06-01"
                                          + location   = "[parameters('location')]"
                                          + name       = "[concat(parameters('resourceName'))]"
                                          + properties = {
                                              + minimumTlsVersion        = "[parameters('minimumTlsVersion')]"
                                              + supportsHttpsTrafficOnly = true
                                            }
                                          + type       = "Microsoft.Storage/storageAccounts"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "true"
                                  + field  = "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
                                },
                              + {
                                  + equals = "[parameters('minimumTlsVersion')]"
                                  + field  = "Microsoft.Storage/storageAccounts/minimumTlsVersion"
                                },
                            ]
                        }
                      + name               = "current"
                      + roleDefinitionIds  = [
                          + "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
                        ]
                      + type               = "Microsoft.Storage/storageAccounts"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "This policy deploys virtual network and peer to the hub"
      + display_name        = "Deploy Virtual Network with peering to the hub"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + mode                = "All"
      + name                = "Deploy-VNET-HubSpoke"
      + parameters          = jsonencode(
            {
              + dnsServers               = {
                  + defaultValue = []
                  + metadata     = {
                      + description = "Default domain servers for the vNET."
                      + displayName = "DNSServers"
                    }
                  + type         = "Array"
                }
              + hubResourceId            = {
                  + metadata = {
                      + description = "Resource ID for the HUB vNet"
                      + displayName = "hubResourceId"
                    }
                  + type     = "String"
                }
              + vNetCidrRange            = {
                  + metadata = {
                      + description = "CIDR Range for the vNet"
                      + displayName = "vNetCidrRange"
                    }
                  + type     = "String"
                }
              + vNetLocation             = {
                  + metadata = {
                      + description = "Location for the vNet"
                      + displayName = "vNetLocation"
                    }
                  + type     = "String"
                }
              + vNetName                 = {
                  + metadata = {
                      + description = "Name of the landing zone vNet"
                      + displayName = "vNetName"
                    }
                  + type     = "String"
                }
              + vNetPeerUseRemoteGateway = {
                  + defaultValue = false
                  + metadata     = {
                      + description = "Enable gateway transit for the LZ network"
                      + displayName = "vNetPeerUseRemoteGateway"
                    }
                  + type         = "Boolean"
                }
              + vNetRgName               = {
                  + metadata = {
                      + description = "Name of the landing zone vNet RG"
                      + displayName = "vNetRgName"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Resources/subscriptions"
                          + field  = "type"
                        },
                    ]
                }
              + then = {
                  + details = {
                      + ResourceGroupName  = "[parameters('vNetRgName')]"
                      + deployment         = {
                          + location   = "northeurope"
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + dnsServers               = {
                                      + value = "[parameters('dnsServers')]"
                                    }
                                  + hubResourceId            = {
                                      + value = "[parameters('hubResourceId')]"
                                    }
                                  + vNetCidrRange            = {
                                      + value = "[parameters('vNetCidrRange')]"
                                    }
                                  + vNetLocation             = {
                                      + value = "[parameters('vNetLocation')]"
                                    }
                                  + vNetName                 = {
                                      + value = "[parameters('vNetName')]"
                                    }
                                  + vNetPeerUseRemoteGateway = {
                                      + value = "[parameters('vNetPeerUseRemoteGateway')]"
                                    }
                                  + vNetRgName               = {
                                      + value = "[parameters('vNetRgName')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + dnsServers               = {
                                          + defaultValue = []
                                          + type         = "Array"
                                        }
                                      + hubResourceId            = {
                                          + type = "String"
                                        }
                                      + vNetCidrRange            = {
                                          + type = "String"
                                        }
                                      + vNetLocation             = {
                                          + type = "String"
                                        }
                                      + vNetName                 = {
                                          + type = "String"
                                        }
                                      + vNetPeerUseRemoteGateway = {
                                          + defaultValue = false
                                          + type         = "bool"
                                        }
                                      + vNetRgName               = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2021-04-01"
                                          + dependsOn  = []
                                          + location   = "[parameters('vNetLocation')]"
                                          + name       = "[concat('alz-vnet-rg-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]"
                                          + properties = {
                                              + mode     = "Incremental"
                                              + template = {
                                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                                  + contentVersion = "1.0.0.0"
                                                  + outputs        = {}
                                                  + parameters     = {}
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2021-04-01"
                                                          + location   = "[parameters('vNetLocation')]"
                                                          + name       = "[parameters('vNetRgName')]"
                                                          + properties = {}
                                                          + type       = "Microsoft.Resources/resourceGroups"
                                                        },
                                                    ]
                                                  + variables      = {}
                                                }
                                            }
                                          + type       = "Microsoft.Resources/deployments"
                                        },
                                      + {
                                          + apiVersion    = "2021-04-01"
                                          + dependsOn     = [
                                              + "[concat('alz-vnet-rg-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]",
                                            ]
                                          + name          = "[concat('alz-vnet-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]"
                                          + properties    = {
                                              + mode     = "Incremental"
                                              + template = {
                                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                                  + contentVersion = "1.0.0.0"
                                                  + outputs        = {}
                                                  + parameters     = {}
                                                  + resources      = [
                                                      + {
                                                          + apiVersion = "2021-02-01"
                                                          + dependsOn  = []
                                                          + location   = "[parameters('vNetLocation')]"
                                                          + name       = "[parameters('vNetName')]"
                                                          + properties = {
                                                              + addressSpace = {
                                                                  + addressPrefixes = [
                                                                      + "[parameters('vNetCidrRange')]",
                                                                    ]
                                                                }
                                                              + dhcpOptions  = {
                                                                  + dnsServers = "[parameters('dnsServers')]"
                                                                }
                                                            }
                                                          + type       = "Microsoft.Network/virtualNetworks"
                                                        },
                                                      + {
                                                          + apiVersion = "2021-02-01"
                                                          + dependsOn  = [
                                                              + "[parameters('vNetName')]",
                                                            ]
                                                          + name       = "[concat(parameters('vNetName'), '/peerToHub')]"
                                                          + properties = {
                                                              + allowForwardedTraffic     = true
                                                              + allowGatewayTransit       = false
                                                              + allowVirtualNetworkAccess = true
                                                              + remoteVirtualNetwork      = {
                                                                  + id = "[parameters('hubResourceId')]"
                                                                }
                                                              + useRemoteGateways         = "[parameters('vNetPeerUseRemoteGateway')]"
                                                            }
                                                          + type       = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                                                        },
                                                      + {
                                                          + apiVersion     = "2021-04-01"
                                                          + dependsOn      = [
                                                              + "[parameters('vNetName')]",
                                                            ]
                                                          + name           = "[concat('alz-hub-peering-', parameters('vNetLocation'), '-', substring(uniqueString(subscription().id),0,6))]"
                                                          + properties     = {
                                                              + expressionEvaluationOptions = {
                                                                  + scope = "inner"
                                                                }
                                                              + mode                        = "Incremental"
                                                              + parameters                  = {
                                                                  + hubName              = {
                                                                      + value = "[split(parameters('hubResourceId'),'/')[8]]"
                                                                    }
                                                                  + remoteVirtualNetwork = {
                                                                      + value = "[concat(subscription().id,'/resourceGroups/',parameters('vNetRgName'), '/providers/','Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
                                                                    }
                                                                }
                                                              + template                    = {
                                                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                                                  + contentVersion = "1.0.0.0"
                                                                  + outputs        = {}
                                                                  + parameters     = {
                                                                      + hubName              = {
                                                                          + defaultValue = false
                                                                          + type         = "String"
                                                                        }
                                                                      + remoteVirtualNetwork = {
                                                                          + defaultValue = false
                                                                          + type         = "String"
                                                                        }
                                                                    }
                                                                  + resources      = [
                                                                      + {
                                                                          + apiVersion = "2021-02-01"
                                                                          + name       = "[[concat(parameters('hubName'),'/',last(split(parameters('remoteVirtualNetwork'),'/')))]"
                                                                          + properties = {
                                                                              + allowForwardedTraffic     = true
                                                                              + allowGatewayTransit       = true
                                                                              + allowVirtualNetworkAccess = true
                                                                              + remoteVirtualNetwork      = {
                                                                                  + id = "[[parameters('remoteVirtualNetwork')]"
                                                                                }
                                                                              + useRemoteGateways         = false
                                                                            }
                                                                          + type       = "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                                                                        },
                                                                    ]
                                                                  + variables      = {}
                                                                }
                                                            }
                                                          + resourceGroup  = "[split(parameters('hubResourceId'),'/')[4]]"
                                                          + subscriptionId = "[split(parameters('hubResourceId'),'/')[2]]"
                                                          + type           = "Microsoft.Resources/deployments"
                                                        },
                                                    ]
                                                  + variables      = {}
                                                }
                                            }
                                          + resourceGroup = "[parameters('vNetRgName')]"
                                          + type          = "Microsoft.Resources/deployments"
                                        },
                                    ]
                                  + variables      = {}
                                }
                            }
                        }
                      + deploymentScope    = "subscription"
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + field = "name"
                                  + like  = "[parameters('vNetName')]"
                                },
                              + {
                                  + equals = "[parameters('vNetLocation')]"
                                  + field  = "location"
                                },
                            ]
                        }
                      + existenceScope     = "resourceGroup"
                      + name               = "[parameters('vNetName')]"
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
                        ]
                      + type               = "Microsoft.Network/virtualNetworks"
                    }
                  + effect  = "deployIfNotExists"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"] will be created
  + resource "azurerm_policy_definition" "enterprise_scale" {
      + description         = "Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine"
      + display_name        = "Deploy Windows Domain Join Extension with keyvault configuration"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Guest Configuration"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + mode                = "Indexed"
      + name                = "Deploy-Windows-DomainJoin"
      + parameters          = jsonencode(
            {
              + domainFQDN         = {
                  + metadata = {
                      + displayName = "domainFQDN"
                    }
                  + type     = "String"
                }
              + domainOUPath       = {
                  + metadata = {
                      + displayName = "domainOUPath"
                    }
                  + type     = "String"
                }
              + domainPassword     = {
                  + metadata = {
                      + displayName = "domainPassword"
                    }
                  + type     = "String"
                }
              + domainUsername     = {
                  + metadata = {
                      + displayName = "domainUsername"
                    }
                  + type     = "String"
                }
              + effect             = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + keyVaultResourceId = {
                  + metadata = {
                      + displayName = "keyVaultResourceId"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_rule         = jsonencode(
            {
              + if   = {
                  + allOf = [
                      + {
                          + equals = "Microsoft.Compute/virtualMachines"
                          + field  = "type"
                        },
                      + {
                          + equals = "MicrosoftWindowsServer"
                          + field  = "Microsoft.Compute/imagePublisher"
                        },
                      + {
                          + equals = "WindowsServer"
                          + field  = "Microsoft.Compute/imageOffer"
                        },
                      + {
                          + field = "Microsoft.Compute/imageSKU"
                          + in    = [
                              + "2008-R2-SP1",
                              + "2008-R2-SP1-smalldisk",
                              + "2008-R2-SP1-zhcn",
                              + "2012-Datacenter",
                              + "2012-datacenter-gensecond",
                              + "2012-Datacenter-smalldisk",
                              + "2012-datacenter-smalldisk-g2",
                              + "2012-Datacenter-zhcn",
                              + "2012-datacenter-zhcn-g2",
                              + "2012-R2-Datacenter",
                              + "2012-r2-datacenter-gensecond",
                              + "2012-R2-Datacenter-smalldisk",
                              + "2012-r2-datacenter-smalldisk-g2",
                              + "2012-R2-Datacenter-zhcn",
                              + "2012-r2-datacenter-zhcn-g2",
                              + "2016-Datacenter",
                              + "2016-datacenter-gensecond",
                              + "2016-datacenter-gs",
                              + "2016-Datacenter-Server-Core",
                              + "2016-datacenter-server-core-g2",
                              + "2016-Datacenter-Server-Core-smalldisk",
                              + "2016-datacenter-server-core-smalldisk-g2",
                              + "2016-Datacenter-smalldisk",
                              + "2016-datacenter-smalldisk-g2",
                              + "2016-Datacenter-with-Containers",
                              + "2016-datacenter-with-containers-g2",
                              + "2016-Datacenter-with-RDSH",
                              + "2016-Datacenter-zhcn",
                              + "2016-datacenter-zhcn-g2",
                              + "2019-Datacenter",
                              + "2019-Datacenter-Core",
                              + "2019-datacenter-core-g2",
                              + "2019-Datacenter-Core-smalldisk",
                              + "2019-datacenter-core-smalldisk-g2",
                              + "2019-Datacenter-Core-with-Containers",
                              + "2019-datacenter-core-with-containers-g2",
                              + "2019-Datacenter-Core-with-Containers-smalldisk",
                              + "2019-datacenter-core-with-containers-smalldisk-g2",
                              + "2019-datacenter-gensecond",
                              + "2019-datacenter-gs",
                              + "2019-Datacenter-smalldisk",
                              + "2019-datacenter-smalldisk-g2",
                              + "2019-Datacenter-with-Containers",
                              + "2019-datacenter-with-containers-g2",
                              + "2019-Datacenter-with-Containers-smalldisk",
                              + "2019-datacenter-with-containers-smalldisk-g2",
                              + "2019-Datacenter-zhcn",
                              + "2019-datacenter-zhcn-g2",
                              + "Datacenter-Core-1803-with-Containers-smalldisk",
                              + "datacenter-core-1803-with-containers-smalldisk-g2",
                              + "Datacenter-Core-1809-with-Containers-smalldisk",
                              + "datacenter-core-1809-with-containers-smalldisk-g2",
                              + "Datacenter-Core-1903-with-Containers-smalldisk",
                              + "datacenter-core-1903-with-containers-smalldisk-g2",
                              + "datacenter-core-1909-with-containers-smalldisk",
                              + "datacenter-core-1909-with-containers-smalldisk-g1",
                              + "datacenter-core-1909-with-containers-smalldisk-g2",
                            ]
                        },
                    ]
                }
              + then = {
                  + details = {
                      + deployment         = {
                          + properties = {
                              + mode       = "Incremental"
                              + parameters = {
                                  + domainFQDN         = {
                                      + value = "[parameters('domainFQDN')]"
                                    }
                                  + domainOUPath       = {
                                      + value = "[parameters('domainOUPath')]"
                                    }
                                  + domainPassword     = {
                                      + reference = {
                                          + keyVault   = {
                                              + id = "[parameters('keyVaultResourceId')]"
                                            }
                                          + secretName = "[parameters('domainPassword')]"
                                        }
                                    }
                                  + domainUsername     = {
                                      + reference = {
                                          + keyVault   = {
                                              + id = "[parameters('keyVaultResourceId')]"
                                            }
                                          + secretName = "[parameters('domainUsername')]"
                                        }
                                    }
                                  + keyVaultResourceId = {
                                      + value = "[parameters('keyVaultResourceId')]"
                                    }
                                  + location           = {
                                      + value = "[field('location')]"
                                    }
                                  + vmName             = {
                                      + value = "[field('name')]"
                                    }
                                }
                              + template   = {
                                  + "$schema"      = "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
                                  + contentVersion = "1.0.0.0"
                                  + outputs        = {}
                                  + parameters     = {
                                      + domainFQDN         = {
                                          + type = "String"
                                        }
                                      + domainOUPath       = {
                                          + type = "String"
                                        }
                                      + domainPassword     = {
                                          + type = "securestring"
                                        }
                                      + domainUsername     = {
                                          + type = "String"
                                        }
                                      + keyVaultResourceId = {
                                          + type = "String"
                                        }
                                      + location           = {
                                          + type = "String"
                                        }
                                      + vmName             = {
                                          + type = "String"
                                        }
                                    }
                                  + resources      = [
                                      + {
                                          + apiVersion = "2015-06-15"
                                          + location   = "[resourceGroup().location]"
                                          + name       = "[concat(variables('vmName'),'/joindomain')]"
                                          + properties = {
                                              + autoUpgradeMinorVersion = true
                                              + protectedSettings       = {
                                                  + Password = "[parameters('domainPassword')]"
                                                }
                                              + publisher               = "Microsoft.Compute"
                                              + settings                = {
                                                  + Name    = "[parameters('domainFQDN')]"
                                                  + OUPath  = "[parameters('domainOUPath')]"
                                                  + Options = "[variables('domainJoinOptions')]"
                                                  + Restart = "true"
                                                  + User    = "[parameters('domainUserName')]"
                                                }
                                              + type                    = "JsonADDomainExtension"
                                              + typeHandlerVersion      = "1.3"
                                            }
                                          + type       = "Microsoft.Compute/virtualMachines/extensions"
                                        },
                                    ]
                                  + variables      = {
                                      + domainJoinOptions = 3
                                      + vmName            = "[parameters('vmName')]"
                                    }
                                }
                            }
                        }
                      + existenceCondition = {
                          + allOf = [
                              + {
                                  + equals = "JsonADDomainExtension"
                                  + field  = "Microsoft.Compute/virtualMachines/extensions/type"
                                },
                              + {
                                  + equals = "Microsoft.Compute"
                                  + field  = "Microsoft.Compute/virtualMachines/extensions/publisher"
                                },
                            ]
                        }
                      + roleDefinitionIds  = [
                          + "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                        ]
                      + type               = "Microsoft.Compute/virtualMachines/extensions"
                    }
                  + effect  = "[parameters('effect')]"
                }
            }
        )
      + policy_type         = "Custom"
      + role_definition_ids = (known after apply)
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "This policy initiative is a group of policies that prevents creation of Azure PaaS services with exposed public endpoints"
      + display_name        = "Public network access should be disabled for PaaS services"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + name                = "Deny-PublicPaaSEndpoints"
      + parameters          = jsonencode(
            {
              + ACRPublicIpDenyEffect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies the creation of Azure Container Registires with exposed public endpoints "
                      + displayName = "Public network access on Azure Container Registry disabled"
                    }
                  + type          = "String"
                }
              + AFSPublicIpDenyEffect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies the creation of Azure File Sync instances with exposed public endpoints "
                      + displayName = "Public network access on Azure File Sync disabled"
                    }
                  + type          = "String"
                }
              + AKSPublicIpDenyEffect            = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies  the creation of  Azure Kubernetes Service non-private clusters"
                      + displayName = "Public network access on AKS API should be disabled"
                    }
                  + type          = "String"
                }
              + BatchPublicIpDenyEffect          = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies creation of Azure Batch Instances with exposed public endpoints"
                      + displayName = "Public network access should be disabled for Azure Batch Instances"
                    }
                  + type          = "String"
                }
              + CosmosPublicIpDenyEffect         = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies that  Cosmos database accounts  are created with out public network access is disabled."
                      + displayName = "Public network access should be disabled for CosmosDB"
                    }
                  + type          = "String"
                }
              + KeyVaultPublicIpDenyEffect       = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints"
                      + displayName = "Public network access should be disabled for KeyVault"
                    }
                  + type          = "String"
                }
              + MySQLFlexPublicIpDenyEffect      = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies creation of MySql Flexible Server DB accounts with exposed public endpoints"
                      + displayName = "Public network access should be disabled for MySQL Flexible Server"
                    }
                  + type          = "String"
                }
              + PostgreSQLFlexPublicIpDenyEffect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies creation of Postgre SQL Flexible DB accounts with exposed public endpoints"
                      + displayName = "Public network access should be disabled for PostgreSql Flexible Server"
                    }
                  + type          = "String"
                }
              + SqlServerPublicIpDenyEffect      = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies creation of Sql servers with exposed public endpoints"
                      + displayName = "Public network access on Azure SQL Database should be disabled"
                    }
                  + type          = "String"
                }
              + StoragePublicIpDenyEffect        = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Deny"
                  + metadata      = {
                      + description = "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints"
                      + displayName = "Public network access onStorage accounts should be disabled"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('CosmosPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a"
          + reference_id         = "CosmosDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('KeyVaultPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490"
          + reference_id         = "KeyVaultDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('SqlServerPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780"
          + reference_id         = "SqlServerDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('StoragePublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c"
          + reference_id         = "StorageDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('AKSPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8"
          + reference_id         = "AKSDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('ACRPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/0fdf0491-d080-4575-b627-ad0e843cba0f"
          + reference_id         = "ACRDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('AFSPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/21a8cd35-125e-4d13-b82d-2e19b7208bb7"
          + reference_id         = "AFSDenyPaasPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('PostgreSQLFlexPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/5e1de0e3-42cb-4ebc-a86d-61d0c619ca48"
          + reference_id         = "PostgreSQLFlexDenyPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('MySQLFlexPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/c9299215-ae47-4f50-9c54-8a392f68a052"
          + reference_id         = "MySQLFlexDenyPublicIP"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('BatchPublicIpDenyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/74c5a0ae-5e48-4738-b093-65e23a060488"
          + reference_id         = "BatchDenyPublicIP"
        }
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included "
      + display_name        = "Deploy Diagnostic Settings to Azure Services"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Monitoring"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "2.0.0"
            }
        )
      + name                = "Deploy-Diagnostics-LogAnalytics"
      + parameters          = jsonencode(
            {
              + ACILogAnalyticsEffect                   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The Policy willset the diagnostic with all metrics enabled."
                      + displayName = "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + ACRLogAnalyticsEffect                   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics  enabled."
                      + displayName = "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + AKSLogAnalyticsEffect                   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled."
                      + displayName = "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + APIMgmtLogAnalyticsEffect               = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for API Management to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + APIforFHIRLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + AVDScalingPlansLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for AVD Scaling Plans to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for AVD Scaling Plans to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + AnalysisServiceLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + AppServiceLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + AppServiceWebappLogAnalyticsEffect      = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for App Service to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + ApplicationGatewayLogAnalyticsEffect    = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + AutomationLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Automation to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + BastionLogAnalyticsEffect               = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Azure Bastion to stream to a Log Analytics workspace when any Bastion which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Azure Bastion to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + BatchLogAnalyticsEffect                 = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Batch to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + CDNEndpointsLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + CognitiveServicesLogAnalyticsEffect     = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + CosmosLogAnalyticsEffect                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + DataExplorerClusterLogAnalyticsEffect   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + DataFactoryLogAnalyticsEffect           = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + DataLakeAnalyticsLogAnalyticsEffect     = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + DataLakeStoreLogAnalyticsEffect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + DatabricksLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Databricks to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + EventGridSubLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + EventGridTopicLogAnalyticsEffect        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + EventHubLogAnalyticsEffect              = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + EventSystemTopicLogAnalyticsEffect      = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + ExpressRouteLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + FirewallLogAnalyticsEffect              = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Firewall to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + FrontDoorLogAnalyticsEffect             = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Front Door to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + FunctionAppLogAnalyticsEffect           = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + HDInsightLogAnalyticsEffect             = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + IotHubLogAnalyticsEffect                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + KeyVaultLogAnalyticsEffect              = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + LoadBalancerLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + LogAnalyticsLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Log Analytics to stream to a Log Analytics workspace when any Log Analytics workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category Audit enabled"
                      + displayName = "Deploy Diagnostic Settings for Log Analytics to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + LogicAppsISELogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + LogicAppsWFLogAnalyticsEffect           = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Logic Apps Workflows to stream to a Log Analytics workspace when any Logic Apps Workflows which are missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Logic Apps Workflows to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + MariaDBLogAnalyticsEffect               = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + MediaServiceLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + MlWorkspaceLogAnalyticsEffect           = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + MySQLLogAnalyticsEffect                 = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + NetworkNICLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + NetworkPublicIPNicLogAnalyticsEffect    = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + NetworkSecurityGroupsLogAnalyticsEffect = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + PostgreSQLLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + PowerBIEmbeddedLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + RedisCacheLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + RelayLogAnalyticsEffect                 = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Relay to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + SQLDBsLogAnalyticsEffect                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + SQLElasticPoolsLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + SQLMLogAnalyticsEffect                  = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + SearchServicesLogAnalyticsEffect        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Search Services to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + ServiceBusLogAnalyticsEffect            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + SignalRLogAnalyticsEffect               = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for SignalR to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + StorageAccountsLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + StreamAnalyticsLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + TimeSeriesInsightsLogAnalyticsEffect    = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + TrafficManagerLogAnalyticsEffect        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + VMSSLogAnalyticsEffect                  = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + VNetGWLogAnalyticsEffect                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled."
                      + displayName = "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + VirtualMachinesLogAnalyticsEffect       = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + VirtualNetworkLogAnalyticsEffect        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + WVDAppGroupsLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for AVD Application groups to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for AVD Application Groups to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + WVDHostPoolsLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for AVD Host pools to stream to a Log Analytics workspace when any host pool which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for AVD Host pools to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + WVDWorkspaceLogAnalyticsEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploys the diagnostic settings for AVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The Policy will set the diagnostic with all metrics and category enabled"
                      + displayName = "Deploy Diagnostic Settings for AVD Workspace to Log Analytics workspace"
                    }
                  + type          = "String"
                }
              + logAnalytics                            = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + profileName                             = {
                  + defaultValue = "setbypolicy"
                  + metadata     = {
                      + description = "The diagnostic settings profile name"
                      + displayName = "Profile name"
                    }
                  + type         = "String"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/59759c62-9a22-4cdf-ae64-074495983fef"
          + reference_id         = "StorageAccountDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b4fe1a3b-0715-4c6c-a5ea-ffc33cf823cb"
          + reference_id         = "StorageAccountBlobServicesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/25a70cc8-2bd4-47f1-90b6-1478e4662c96"
          + reference_id         = "StorageAccountFileServicesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/7bd000e3-37c7-4928-9f31-86c4b77c5c45"
          + reference_id         = "StorageAccountQueueServicesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('StorageAccountsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/2fb86bf3-d221-43d1-96d1-2434af34eaa0"
          + reference_id         = "StorageAccountTableServicesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('AVDScalingPlansLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"
          + reference_id         = "AVDScalingPlansDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('WVDAppGroupsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"
          + reference_id         = "WVDAppGroupDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('WVDWorkspaceLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"
          + reference_id         = "WVDWorkspaceDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('WVDHostPoolsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"
          + reference_id         = "WVDHostPoolsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('ACILogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"
          + reference_id         = "ACIDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('ACRLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"
          + reference_id         = "ACRDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + diagnosticsSettingNameToUse = {
                      + value = "[parameters('profileName')]"
                    }
                  + effect                      = {
                      + value = "[parameters('AKSLogAnalyticsEffect')]"
                    }
                  + logAnalytics                = {
                      + value = "[parameters('logAnalytics')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/6c66c325-74c8-42fd-a286-a74b0e2939d8"
          + reference_id         = "AKSDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('AnalysisServiceLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"
          + reference_id         = "AnalysisServiceDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('APIforFHIRLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"
          + reference_id         = "APIforFHIRDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('APIMgmtLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"
          + reference_id         = "APIMgmtDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('ApplicationGatewayLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"
          + reference_id         = "ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('AutomationLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"
          + reference_id         = "AutomationDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('BastionLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"
          + reference_id         = "BastionDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('BatchLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/c84e5349-db6d-4769-805e-e14037dab9b5"
          + reference_id         = "BatchDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('CDNEndpointsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"
          + reference_id         = "CDNEndpointsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('CognitiveServicesLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"
          + reference_id         = "CognitiveServicesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('CosmosLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"
          + reference_id         = "CosmosDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('DatabricksLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"
          + reference_id         = "DatabricksDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('DataExplorerClusterLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"
          + reference_id         = "DataExplorerClusterDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('DataFactoryLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"
          + reference_id         = "DataFactoryDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('DataLakeStoreLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/d56a5a7c-72d7-42bc-8ceb-3baf4c0eae03"
          + reference_id         = "DataLakeStoreDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('DataLakeAnalyticsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"
          + reference_id         = "DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('EventGridSubLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"
          + reference_id         = "EventGridSubDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('EventGridTopicLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"
          + reference_id         = "EventGridTopicDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('EventHubLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1f6e93e8-6b31-41b1-83f6-36e449a42579"
          + reference_id         = "EventHubDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('EventSystemTopicLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"
          + reference_id         = "EventSystemTopicDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('ExpressRouteLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"
          + reference_id         = "ExpressRouteDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('FirewallLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"
          + reference_id         = "FirewallDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('FrontDoorLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"
          + reference_id         = "FrontDoorDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('FunctionAppLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"
          + reference_id         = "FunctionAppDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('HDInsightLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"
          + reference_id         = "HDInsightDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('IotHubLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"
          + reference_id         = "IotHubDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('KeyVaultLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/bef3f64c-5290-43b7-85b0-9b254eef4c47"
          + reference_id         = "KeyVaultDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('LoadBalancerLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"
          + reference_id         = "LoadBalancerDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('LogAnalyticsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"
          + reference_id         = "LogAnalyticsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('LogicAppsISELogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"
          + reference_id         = "LogicAppsISEDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('LogicAppsWFLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b889a06c-ec72-4b03-910a-cb169ee18721"
          + reference_id         = "LogicAppsWFDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('MariaDBLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"
          + reference_id         = "MariaDBDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('MediaServiceLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"
          + reference_id         = "MediaServiceDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('MlWorkspaceLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"
          + reference_id         = "MlWorkspaceDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('MySQLLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"
          + reference_id         = "MySQLDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('NetworkSecurityGroupsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"
          + reference_id         = "NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('NetworkNICLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"
          + reference_id         = "NetworkNICDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('PostgreSQLLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"
          + reference_id         = "PostgreSQLDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('PowerBIEmbeddedLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"
          + reference_id         = "PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect         = {
                      + value = "[parameters('NetworkPublicIPNicLogAnalyticsEffect')]"
                    }
                  + logAnalytics   = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + metricsEnabled = {
                      + value = "True"
                    }
                  + profileName    = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648"
          + reference_id         = "NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/c717fb0c-d118-4c43-ab3d-ece30ac81fb3"
          + reference_id         = "RecoveryVaultDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('RedisCacheLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"
          + reference_id         = "RedisCacheDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('RelayLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"
          + reference_id         = "RelayDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('SearchServicesLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/08ba64b8-738f-4918-9686-730d2ed79c7d"
          + reference_id         = "SearchServicesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('ServiceBusLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/04d53d87-841c-4f23-8a5b-21564380b55e"
          + reference_id         = "ServiceBusDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('SignalRLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"
          + reference_id         = "SignalRDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + diagnosticsSettingNameToUse = {
                      + value = "[parameters('profileName')]"
                    }
                  + effect                      = {
                      + value = "[parameters('SQLDBsLogAnalyticsEffect')]"
                    }
                  + logAnalytics                = {
                      + value = "[parameters('logAnalytics')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b79fa14e-238a-4c2d-b376-442ce508fc84"
          + reference_id         = "SQLDatabaseDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('SQLElasticPoolsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"
          + reference_id         = "SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('SQLMLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"
          + reference_id         = "SQLMDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('StreamAnalyticsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/237e0f7e-b0e8-4ec4-ad46-8c12cb66d673"
          + reference_id         = "StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('TimeSeriesInsightsLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"
          + reference_id         = "TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('TrafficManagerLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"
          + reference_id         = "TrafficManagerDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('VirtualNetworkLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"
          + reference_id         = "VirtualNetworkDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('VirtualMachinesLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"
          + reference_id         = "VirtualMachinesDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('VMSSLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"
          + reference_id         = "VMSSDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('VNetGWLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"
          + reference_id         = "VNetGWDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('AppServiceLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"
          + reference_id         = "AppServiceDeployDiagnosticLogDeployLogAnalytics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect       = {
                      + value = "[parameters('AppServiceWebappLogAnalyticsEffect')]"
                    }
                  + logAnalytics = {
                      + value = "[parameters('logAnalytics')]"
                    }
                  + profileName  = {
                      + value = "[parameters('profileName')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"
          + reference_id         = "AppServiceWebappDeployDiagnosticLogDeployLogAnalytics"
        }
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "Deploy Microsoft Defender for Cloud configuration"
      + display_name        = "Deploy Microsoft Defender for Cloud configuration"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Security Center"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "3.1.1"
            }
        )
      + name                = "Deploy-MDFC-Config"
      + parameters          = jsonencode(
            {
              + ascExportResourceGroupLocation = {
                  + metadata = {
                      + description = "The location where the resource group and the export to Log Analytics workspace configuration are created."
                      + displayName = "Resource Group location for the export to Log Analytics workspace configuration"
                    }
                  + type     = "String"
                }
              + ascExportResourceGroupName     = {
                  + metadata = {
                      + description = "The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn't exist, it'll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured."
                      + displayName = "Resource Group name for the export to Log Analytics workspace configuration"
                    }
                  + type     = "String"
                }
              + emailSecurityContact           = {
                  + metadata = {
                      + description = "Provide email address for Microsoft Defender for Cloud contact details"
                      + displayName = "Security contacts email address"
                    }
                  + type     = "string"
                }
              + enableAscForAppServices        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForArm                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForContainers         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForCosmosDbs          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForDns                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForKeyVault           = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForOssDb              = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForServers            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForSql                = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForSqlOnVm            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + enableAscForStorage            = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "String"
                }
              + logAnalytics                   = {
                  + metadata = {
                      + description = "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                      + displayName = "Primary Log Analytics workspace"
                      + strongType  = "omsWorkspace"
                    }
                  + type     = "String"
                }
              + minimalSeverity                = {
                  + allowedValues = [
                      + "High",
                      + "Medium",
                      + "Low",
                    ]
                  + defaultValue  = "High"
                  + metadata      = {
                      + description = "Defines the minimal alert severity which will be sent as email notifications"
                      + displayName = "Minimal severity"
                    }
                  + type          = "string"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForOssDb')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/44433aa3-7ec2-4002-93ea-65c65ff0310a"
          + reference_id         = "defenderForOssDb"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForServers')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/8e86a5b6-b9bd-49d1-8e21-4bb8a0862222"
          + reference_id         = "defenderForVM"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForSqlOnVm')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/50ea7265-7d8c-429e-9a7d-ca1f410191c3"
          + reference_id         = "defenderForSqlServerVirtualMachines"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForAppServices')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b40e7bcd-a1e5-47fe-b9cf-2f534d0bfb7d"
          + reference_id         = "defenderForAppServices"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForStorage')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/74c30959-af11-47b3-9ed2-a26e03f427a3"
          + reference_id         = "defenderForStorageAccounts"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForContainers')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/c9ddb292-b203-4738-aead-18e2716e858f"
          + reference_id         = "defenderforContainers"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + Effect = {
                      + value = "[parameters('enableAscForKeyVault')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1f725891-01c0-420a-9059-4fa46cb770b7"
          + reference_id         = "defenderForKeyVaults"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForDns')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/2370a3c1-4a25-4283-a91a-c9c1a145fb2f"
          + reference_id         = "defenderForDns"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForArm')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b7021b2b-08fd-4dc0-9de7-3c6ece09faf9"
          + reference_id         = "defenderForArm"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForSql')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b99b73e7-074b-4089-9395-b7236f094491"
          + reference_id         = "defenderForSqlPaas"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('enableAscForCosmosDbs')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/82bf5b87-728b-4a74-ba4d-6123845cf542"
          + reference_id         = "defenderForCosmosDbs"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + emailSecurityContact = {
                      + value = "[parameters('emailSecurityContact')]"
                    }
                  + minimalSeverity      = {
                      + value = "[parameters('minimalSeverity')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"
          + reference_id         = "securityEmailContact"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + resourceGroupLocation = {
                      + value = "[parameters('ascExportResourceGroupLocation')]"
                    }
                  + resourceGroupName     = {
                      + value = "[parameters('ascExportResourceGroupName')]"
                    }
                  + workspaceResourceId   = {
                      + value = "[parameters('logAnalytics')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9"
          + reference_id         = "ascExport"
        }
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "This policy initiative is a group of policies that ensures private endpoints to Azure PaaS services are integrated with Azure Private DNS zones"
      + display_name        = "Configure Azure PaaS services to use private DNS zones"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Network"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.1.0"
            }
        )
      + name                = "Deploy-Private-DNS-Zones"
      + parameters          = jsonencode(
            {
              + azureAcrPrivateDnsZoneId                      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureAcrPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureAppPrivateDnsZoneId                      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureAppPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureAppServicesPrivateDnsZoneId              = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureAppServicesPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureAsrPrivateDnsZoneId                      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureAsrPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureAutomationDSCHybridPrivateDnsZoneId      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureAutomationDSCHybridPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureAutomationWebhookPrivateDnsZoneId        = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureAutomationWebhookPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureBatchPrivateDnsZoneId                    = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureBatchPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCognitiveSearchPrivateDnsZoneId          = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCognitiveSearchPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCognitiveServicesPrivateDnsZoneId        = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCognitiveServicesPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCosmosCassandraPrivateDnsZoneId          = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCosmosCassandraPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCosmosGremlinPrivateDnsZoneId            = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCosmosGremlinPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCosmosMongoPrivateDnsZoneId              = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCosmosMongoPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCosmosSQLPrivateDnsZoneId                = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCosmosSQLPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureCosmosTablePrivateDnsZoneId              = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureCosmosTablePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureDataFactoryPortalPrivateDnsZoneId        = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureDataFactoryPortalPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureDataFactoryPrivateDnsZoneId              = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureDataFactoryPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureDiskAccessPrivateDnsZoneId               = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureDiskAccessPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureEventGridDomainsPrivateDnsZoneId         = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureEventGridDomainsPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureEventGridTopicsPrivateDnsZoneId          = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureEventGridTopicsPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureEventHubNamespacePrivateDnsZoneId        = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureEventHubNamespacePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureFilePrivateDnsZoneId                     = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureFilePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureHDInsightPrivateDnsZoneId                = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureHDInsightPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureIotHubsPrivateDnsZoneId                  = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureIotHubsPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureIotPrivateDnsZoneId                      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureIotPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureKeyVaultPrivateDnsZoneId                 = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureKeyVaultPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMachineLearningWorkspacePrivateDnsZoneId = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMachineLearningWorkspacePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMediaServicesKeyPrivateDnsZoneId         = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMediaServicesKeyPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMediaServicesLivePrivateDnsZoneId        = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMediaServicesLivePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMediaServicesStreamPrivateDnsZoneId      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMediaServicesStreamPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMigratePrivateDnsZoneId                  = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMigratePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMonitorPrivateDnsZoneId1                 = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMonitorPrivateDnsZoneId1"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMonitorPrivateDnsZoneId2                 = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMonitorPrivateDnsZoneId2"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMonitorPrivateDnsZoneId3                 = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMonitorPrivateDnsZoneId3"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMonitorPrivateDnsZoneId4                 = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMonitorPrivateDnsZoneId4"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureMonitorPrivateDnsZoneId5                 = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureMonitorPrivateDnsZoneId5"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureRedisCachePrivateDnsZoneId               = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureRedisCachePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureServiceBusNamespacePrivateDnsZoneId      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureServiceBusNamespacePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureSignalRPrivateDnsZoneId                  = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureSignalRPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageBlobPrivateDnsZoneId              = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageBlobPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageBlobSecPrivateDnsZoneId           = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageBlobSecPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageDFSPrivateDnsZoneId               = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageDFSPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageDFSSecPrivateDnsZoneId            = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageDFSSecPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageFilePrivateDnsZoneId              = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageFilePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageQueuePrivateDnsZoneId             = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageQueuePrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageQueueSecPrivateDnsZoneId          = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageQueueSecPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageStaticWebPrivateDnsZoneId         = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageStaticWebPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureStorageStaticWebSecPrivateDnsZoneId      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureStorageStaticWebSecPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureSynapseDevPrivateDnsZoneId               = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureSynapseDevPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureSynapseSQLODPrivateDnsZoneId             = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureSynapseSQLODPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureSynapseSQLPrivateDnsZoneId               = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureSynapseSQLPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + azureWebPrivateDnsZoneId                      = {
                  + defaultValue = ""
                  + metadata     = {
                      + description = "Private DNS Zone Identifier"
                      + displayName = "azureWebPrivateDnsZoneId"
                      + strongType  = "Microsoft.Network/privateDnsZones"
                    }
                  + type         = "string"
                }
              + effect                                        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "string"
                }
              + effect1                                       = {
                  + allowedValues = [
                      + "deployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "deployIfNotExists"
                  + metadata      = {
                      + description = "Enable or disable the execution of the policy"
                      + displayName = "Effect"
                    }
                  + type          = "string"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureFileprivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/06695360-db88-47f6-b976-7500d4297475"
          + reference_id         = "DINE-Private-DNS-Azure-File-Sync"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureAutomationWebhookPrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "Webhook"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064"
          + reference_id         = "DINE-Private-DNS-Azure-Automation-Webhook"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureAutomationDSCHybridPrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "DSCAndHybridWorker"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/6dd01e4f-1be1-4e80-9d0b-d109e04cb064"
          + reference_id         = "DINE-Private-DNS-Azure-Automation-DSCHybrid"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureCosmosSQLPrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "SQL"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"
          + reference_id         = "DINE-Private-DNS-Azure-Cosmos-SQL"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureCosmosMongoPrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "MongoDB"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"
          + reference_id         = "DINE-Private-DNS-Azure-Cosmos-MongoDB"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureCosmosCassandraPrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "Cassandra"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"
          + reference_id         = "DINE-Private-DNS-Azure-Cosmos-Cassandra"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureCosmosGremlinPrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "Gremlin"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"
          + reference_id         = "DINE-Private-DNS-Azure-Cosmos-Gremlin"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                 = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId       = {
                      + value = "[parameters('azureCosmosTablePrivateDnsZoneId')]"
                    }
                  + privateEndpointGroupId = {
                      + value = "Table"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/a63cc0bd-cda4-4178-b705-37dc439d3e0f"
          + reference_id         = "DINE-Private-DNS-Azure-Cosmos-Table"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + listOfGroupIds   = {
                      + value = [
                          + "dataFactory",
                        ]
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureDataFactoryPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4"
          + reference_id         = "DINE-Private-DNS-Azure-DataFactory"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + listOfGroupIds   = {
                      + value = [
                          + "portal",
                        ]
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureDataFactoryPortalPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/86cd96e1-1745-420d-94d4-d3f2fe415aa4"
          + reference_id         = "DINE-Private-DNS-Azure-DataFactory-Portal"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + groupId          = {
                      + value = "cluster"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureHDInsightPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/43d6e3bd-fc6a-4b44-8b4d-2151d8736a11"
          + reference_id         = "DINE-Private-DNS-Azure-HDInsight"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureMigratePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/7590a335-57cf-4c95-babd-ecbc8fafeb1f"
          + reference_id         = "DINE-Private-DNS-Azure-Migrate"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageBlobPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/75973700-529f-4de2-b794-fb9b6781b6b0"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-Blob"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageBlobSecPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/d847d34b-9337-4e2d-99a5-767e5ac9c582"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-Blob-Sec"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageQueuePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/bcff79fb-2b0d-47c9-97e5-3023479b00d1"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-Queue"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageQueueSecPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/da9b4ae8-5ddc-48c5-b9c0-25f8abf7a3d6"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-Queue-Sec"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageFilePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/6df98d03-368a-4438-8730-a93c4d7693d6"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-File"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageStaticWebPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/9adab2a5-05ba-4fbd-831a-5bf958d04218"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-StaticWeb"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageStaticWebSecPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/d19ae5f1-b303-4b82-9ca8-7682749faf0c"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-StaticWeb-Sec"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageDFSPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/83c6fe0f-2316-444a-99a1-1ecd8a7872ca"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-DFS"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureStorageDFSSecPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/90bd4cb3-9f59-45f7-a6ca-f69db2726671"
          + reference_id         = "DINE-Private-DNS-Azure-Storage-DFS-Sec"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId  = {
                      + value = "[parameters('azureSynapseSQLPrivateDnsZoneId')]"
                    }
                  + targetSubResource = {
                      + value = "Sql"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9"
          + reference_id         = "DINE-Private-DNS-Azure-Synapse-SQL"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId  = {
                      + value = "[parameters('azureSynapseSQLODPrivateDnsZoneId')]"
                    }
                  + targetSubResource = {
                      + value = "SqlOnDemand"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9"
          + reference_id         = "DINE-Private-DNS-Azure-Synapse-SQL-OnDemand"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId  = {
                      + value = "[parameters('azureSynapseDevPrivateDnsZoneId')]"
                    }
                  + targetSubResource = {
                      + value = "Dev"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1e5ed725-f16c-478b-bd4b-7bfa2f7940b9"
          + reference_id         = "DINE-Private-DNS-Azure-Synapse-Dev"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + groupId          = {
                      + value = "keydelivery"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureMediaServicesKeyPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991"
          + reference_id         = "DINE-Private-DNS-Azure-MediaServices-Key"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + groupId          = {
                      + value = "liveevent"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureMediaServicesLivePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991"
          + reference_id         = "DINE-Private-DNS-Azure-MediaServices-Live"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + groupId          = {
                      + value = "streamingendpoint"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureMediaServicesStreamPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b4a7f6c1-585e-4177-ad5b-c2c93f4bb991"
          + reference_id         = "DINE-Private-DNS-Azure-MediaServices-Stream"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId1 = {
                      + value = "[parameters('azureMonitorPrivateDnsZoneId1')]"
                    }
                  + privateDnsZoneId2 = {
                      + value = "[parameters('azureMonitorPrivateDnsZoneId2')]"
                    }
                  + privateDnsZoneId3 = {
                      + value = "[parameters('azureMonitorPrivateDnsZoneId3')]"
                    }
                  + privateDnsZoneId4 = {
                      + value = "[parameters('azureMonitorPrivateDnsZoneId4')]"
                    }
                  + privateDnsZoneId5 = {
                      + value = "[parameters('azureMonitorPrivateDnsZoneId5')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/437914ee-c176-4fff-8986-7e05eb971365"
          + reference_id         = "DINE-Private-DNS-Azure-Monitor"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureWebPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/0b026355-49cb-467b-8ac4-f777874e175a"
          + reference_id         = "DINE-Private-DNS-Azure-Web"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureBatchPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/4ec38ebc-381f-45ee-81a4-acbc4be878f8"
          + reference_id         = "DINE-Private-DNS-Azure-Batch"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureAppPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/7a860e27-9ca2-4fc6-822d-c2d248c300df"
          + reference_id         = "DINE-Private-DNS-Azure-App"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureAsrPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/942bd215-1a66-44be-af65-6a1c0318dbe2"
          + reference_id         = "DINE-Private-DNS-Azure-Site-Recovery"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureIotPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/aaa64d2d-2fa3-45e5-b332-0b031b9b30e8"
          + reference_id         = "DINE-Private-DNS-Azure-IoT"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureKeyVaultPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/ac673a9a-f77d-4846-b2d8-a57f8e1c01d4"
          + reference_id         = "DINE-Private-DNS-Azure-KeyVault"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureSignalRPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b0e86710-7fb7-4a6c-a064-32e9b829509e"
          + reference_id         = "DINE-Private-DNS-Azure-SignalR"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureAppServicesPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/b318f84a-b872-429b-ac6d-a01b96814452"
          + reference_id         = "DINE-Private-DNS-Azure-AppServices"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect1')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureEventGridTopicsPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/baf19753-7502-405f-8745-370519b20483"
          + reference_id         = "DINE-Private-DNS-Azure-EventGridTopics"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureDiskAccessPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/bc05b96c-0b36-4ca9-82f0-5c53f96ce05a"
          + reference_id         = "DINE-Private-DNS-Azure-DiskAccess"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureCognitiveServicesPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/c4bc6f10-cb41-49eb-b000-d5ab82e2a091"
          + reference_id         = "DINE-Private-DNS-Azure-CognitiveServices"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect1')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureIotHubsPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/c99ce9c1-ced7-4c3e-aca0-10e69ce0cb02"
          + reference_id         = "DINE-Private-DNS-Azure-IoTHubs"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect1')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureEventGridDomainsPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/d389df0a-e0d7-4607-833c-75a6fdac2c2d"
          + reference_id         = "DINE-Private-DNS-Azure-EventGridDomains"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureRedisCachePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/e016b22b-e0eb-436d-8fd7-160c4eaed6e2"
          + reference_id         = "DINE-Private-DNS-Azure-RedisCache"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureAcrPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/e9585a95-5b8c-4d03-b193-dc7eb5ac4c32"
          + reference_id         = "DINE-Private-DNS-Azure-ACR"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureEventHubNamespacePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/ed66d4f5-8220-45dc-ab4a-20d1749c74e6"
          + reference_id         = "DINE-Private-DNS-Azure-EventHubNamespace"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureMachineLearningWorkspacePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/ee40564d-486e-4f68-a5ca-7a621edae0fb"
          + reference_id         = "DINE-Private-DNS-Azure-MachineLearningWorkspace"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureServiceBusNamespacePrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/f0fcf93c-c063-4071-9668-c47474bd3564"
          + reference_id         = "DINE-Private-DNS-Azure-ServiceBusNamespace"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect           = {
                      + value = "[parameters('effect')]"
                    }
                  + privateDnsZoneId = {
                      + value = "[parameters('azureCognitiveSearchPrivateDnsZoneId')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/fbc14a67-53e4-4932-abcc-2049c6706009"
          + reference_id         = "DINE-Private-DNS-Azure-CognitiveSearch"
        }
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment"
      + display_name        = "Deploy SQL Database built-in SQL security configuration"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "SQL"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + name                = "Deploy-Sql-Security"
      + parameters          = jsonencode(
            {
              + SqlDbAuditingSettingsDeploySqlSecurityEffect         = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy auditing settings to SQL Database when it not exist in the deployment"
                      + displayName = "Deploy SQL database auditing settings"
                    }
                  + type          = "String"
                }
              + SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect    = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
                      + displayName = "Deploy SQL Database security Alert Policies configuration with email admin accounts"
                    }
                  + type          = "String"
                }
              + SqlDbTdeDeploySqlSecurityEffect                      = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
                      + displayName = "Deploy SQL Database Transparent Data Encryption "
                    }
                  + type          = "String"
                }
              + SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters"
                      + displayName = "Deploy SQL Database vulnerability Assessments"
                    }
                  + type          = "String"
                }
              + vulnerabilityAssessmentsEmail                        = {
                  + metadata = {
                      + description = "The email address to send alerts"
                      + displayName = "The email address to send alerts"
                    }
                  + type     = "String"
                }
              + vulnerabilityAssessmentsStorageID                    = {
                  + metadata = {
                      + description = "The storage account ID to store assessments"
                      + displayName = "The storage account ID to store assessments"
                    }
                  + type     = "String"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"
          + reference_id         = "SqlDbTdeDeploySqlSecurity"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"
          + reference_id         = "SqlDbSecurityAlertPoliciesDeploySqlSecurity"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"
          + reference_id         = "SqlDbAuditingSettingsDeploySqlSecurity"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect                            = {
                      + value = "[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
                    }
                  + vulnerabilityAssessmentsEmail     = {
                      + value = "[parameters('vulnerabilityAssessmentsEmail')]"
                    }
                  + vulnerabilityAssessmentsStorageID = {
                      + value = "[parameters('vulnerabilityAssessmentsStorageID')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"
          + reference_id         = "SqlDbVulnerabilityAssessmentsDeploySqlSecurity"
        }
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit. "
      + display_name        = "Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                  + "AzureChinaCloud",
                  + "AzureUSGovernment",
                ]
              + category             = "Encryption"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.0"
            }
        )
      + name                = "Enforce-EncryptTransit"
      + parameters          = jsonencode(
            {
              + AKSIngressHttpsOnlyEffect         = {
                  + allowedValues = [
                      + "audit",
                      + "deny",
                      + "disabled",
                    ]
                  + defaultValue  = "deny"
                  + metadata      = {
                      + description = "This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc."
                      + displayName = "AKS Service. Enforce HTTPS ingress in Kubernetes cluster"
                    }
                  + type          = "String"
                }
              + APIAppServiceHttpsEffect          = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                      + displayName = "App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."
                    }
                  + type          = "String"
                }
              + APIAppServiceLatestTlsEffect      = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "App Service API App. Only Audit, deny not possible as it is a related resource.  Upgrade to the latest TLS version."
                      + displayName = "App Service API App. Latest TLS version should be used in your API App"
                    }
                  + type          = "String"
                }
              + AppServiceHttpEffect              = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny."
                      + displayName = "App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below"
                    }
                  + type          = "String"
                }
              + AppServiceTlsVersionEffect        = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny."
                      + displayName = "App Service. Appends the AppService WebApp, APIApp, Function App to enable https only"
                    }
                  + type          = "String"
                }
              + AppServiceminTlsVersion           = {
                  + allowedValues = [
                      + "1.2",
                      + "1.0",
                      + "1.1",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "App Service. Select version  minimum TLS version for a  Web App config to enforce"
                      + displayName = "App Service. Select version minimum TLS Web App config"
                    }
                  + type          = "String"
                }
              + FunctionLatestTlsEffect           = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                      + displayName = "App Service Function App. Latest TLS version should be used in your Function App"
                    }
                  + type          = "String"
                }
              + FunctionServiceHttpsEffect        = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                      + displayName = "App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."
                    }
                  + type          = "String"
                }
              + MySQLEnableSSLDeployEffect        = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server"
                    }
                  + type          = "String"
                }
              + MySQLEnableSSLEffect              = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers"
                    }
                  + type          = "String"
                }
              + MySQLminimalTlsVersion            = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_0",
                      + "TLS1_1",
                      + "TLSEnforcementDisabled",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                      + displayName = "MySQL database servers. Select version minimum TLS for MySQL server"
                    }
                  + type          = "String"
                }
              + PostgreSQLEnableSSLDeployEffect   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server"
                    }
                  + type          = "String"
                }
              + PostgreSQLEnableSSLEffect         = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers"
                    }
                  + type          = "String"
                }
              + PostgreSQLminimalTlsVersion       = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_0",
                      + "TLS1_1",
                      + "TLSEnforcementDisabled",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce"
                      + displayName = "PostgreSQL database servers. Select version minimum TLS for MySQL server"
                    }
                  + type          = "String"
                }
              + RedisMinTlsVersion                = {
                  + allowedValues = [
                      + "1.2",
                      + "1.0",
                      + "1.1",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version for a Azure Cache for Redis to enforce"
                      + displayName = "Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis"
                    }
                  + type          = "String"
                }
              + RedisTLSDeployEffect              = {
                  + allowedValues = [
                      + "Append",
                      + "Disabled",
                    ]
                  + defaultValue  = "Append"
                  + metadata      = {
                      + description = "Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis"
                    }
                  + type          = "String"
                }
              + RedisTLSEffect                    = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking."
                      + displayName = "Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled"
                    }
                  + type          = "String"
                }
              + SQLManagedInstanceMinTlsVersion   = {
                  + allowedValues = [
                      + "1.2",
                      + "1.0",
                      + "1.1",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version for Azure Managed Instanceto to  enforce"
                      + displayName = "Azure Managed Instance.Select version minimum TLS for Azure Managed Instance"
                    }
                  + type          = "String"
                }
              + SQLManagedInstanceTLSDeployEffect = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"
                    }
                  + type          = "String"
                }
              + SQLManagedInstanceTLSEffect       = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                      + displayName = "SQL Managed Instance should have the minimal TLS version of 1.2"
                    }
                  + type          = "String"
                }
              + SQLServerTLSDeployEffect          = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                      + displayName = "Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"
                    }
                  + type          = "String"
                }
              + SQLServerTLSEffect                = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                      + displayName = "Azure SQL Database should have the minimal TLS version of 1.2"
                    }
                  + type          = "String"
                }
              + SQLServerminTlsVersion            = {
                  + allowedValues = [
                      + "1.2",
                      + "1.0",
                      + "1.1",
                    ]
                  + defaultValue  = "1.2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version for Azure SQL Database to enforce"
                      + displayName = "Azure SQL Database.Select version minimum TLS for Azure SQL Database"
                    }
                  + type          = "String"
                }
              + StorageDeployHttpsEnabledEffect   = {
                  + allowedValues = [
                      + "DeployIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "DeployIfNotExists"
                  + metadata      = {
                      + description = "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                      + displayName = "Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled"
                    }
                  + type          = "String"
                }
              + StorageHttpsEnabledEffect         = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                      + displayName = "Azure Storage Account. Secure transfer to storage accounts should be enabled"
                    }
                  + type          = "String"
                }
              + StorageminimumTlsVersion          = {
                  + allowedValues = [
                      + "TLS1_2",
                      + "TLS1_1",
                      + "TLS1_0",
                    ]
                  + defaultValue  = "TLS1_2"
                  + metadata      = {
                      + description = "Select version  minimum TLS version on Azure Storage Account to enforce"
                      + displayName = "Storage Account select minimum TLS version"
                    }
                  + type          = "String"
                }
              + WebAppServiceHttpsEffect          = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                      + "Deny",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                      + displayName = "App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."
                    }
                  + type          = "String"
                }
              + WebAppServiceLatestTlsEffect      = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                      + displayName = "App Service Web App. Latest TLS version should be used in your Web App"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('AppServiceHttpEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"
          + reference_id         = "AppServiceHttpEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect        = {
                      + value = "[parameters('AppServiceTlsVersionEffect')]"
                    }
                  + minTlsVersion = {
                      + value = "[parameters('AppServiceminTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"
          + reference_id         = "AppServiceminTlsVersion"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('APIAppServiceLatestTlsEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e"
          + reference_id         = "APIAppServiceLatestTlsEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('FunctionLatestTlsEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193"
          + reference_id         = "FunctionLatestTlsEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('WebAppServiceLatestTlsEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b"
          + reference_id         = "WebAppServiceLatestTlsEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('APIAppServiceHttpsEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"
          + reference_id         = "APIAppServiceHttpsEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('FunctionServiceHttpsEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"
          + reference_id         = "FunctionServiceHttpsEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('WebAppServiceHttpsEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"
          + reference_id         = "WebAppServiceHttpsEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('AKSIngressHttpsOnlyEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d"
          + reference_id         = "AKSIngressHttpsOnlyEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('MySQLEnableSSLDeployEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('MySQLminimalTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"
          + reference_id         = "MySQLEnableSSLDeployEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('MySQLEnableSSLEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('MySQLminimalTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"
          + reference_id         = "MySQLEnableSSLEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('PostgreSQLEnableSSLDeployEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('PostgreSQLminimalTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"
          + reference_id         = "PostgreSQLEnableSSLDeployEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('PostgreSQLEnableSSLEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('PostgreSQLminimalTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"
          + reference_id         = "PostgreSQLEnableSSLEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('RedisTLSDeployEffect')]"
                    }
                  + minimumTlsVersion = {
                      + value = "[parameters('RedisMinTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"
          + reference_id         = "RedisTLSDeployEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('RedisTLSDeployEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"
          + reference_id         = "RedisdisableNonSslPort"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('RedisTLSEffect')]"
                    }
                  + minimumTlsVersion = {
                      + value = "[parameters('RedisMinTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"
          + reference_id         = "RedisDenyhttps"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('SQLManagedInstanceTLSDeployEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('SQLManagedInstanceMinTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"
          + reference_id         = "SQLManagedInstanceTLSDeployEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('SQLManagedInstanceTLSEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('SQLManagedInstanceMinTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"
          + reference_id         = "SQLManagedInstanceTLSEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('SQLServerTLSDeployEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('SQLServerminTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"
          + reference_id         = "SQLServerTLSDeployEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('SQLServerTLSEffect')]"
                    }
                  + minimalTlsVersion = {
                      + value = "[parameters('SQLServerminTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"
          + reference_id         = "SQLServerTLSEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('StorageHttpsEnabledEffect')]"
                    }
                  + minimumTlsVersion = {
                      + value = "[parameters('StorageMinimumTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"
          + reference_id         = "StorageHttpsEnabledEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect            = {
                      + value = "[parameters('StorageDeployHttpsEnabledEffect')]"
                    }
                  + minimumTlsVersion = {
                      + value = "[parameters('StorageMinimumTlsVersion')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"
          + reference_id         = "StorageDeployHttpsEnabledEffect"
        }
    }

  # module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"] will be created
  + resource "azurerm_policy_set_definition" "enterprise_scale" {
      + description         = "Deny or Audit resources without Encryption with a customer-managed key (CMK)"
      + display_name        = "Deny or Audit resources without Encryption with a customer-managed key (CMK)"
      + id                  = (known after apply)
      + management_group_id = "/providers/Microsoft.Management/managementGroups/myorg"
      + metadata            = jsonencode(
            {
              + alzCloudEnvironments = [
                  + "AzureCloud",
                ]
              + category             = "Encryption"
              + source               = "https://github.com/Azure/Enterprise-Scale/"
              + version              = "1.0.1"
            }
        )
      + name                = "Enforce-Encryption-CMK"
      + parameters          = jsonencode(
            {
              + ACRCmkEffect               = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/acr/CMK."
                      + displayName = "Container registries should be encrypted with a customer-managed key (CMK)"
                    }
                  + type          = "String"
                }
              + AksCmkEffect               = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Encrypting OS and data disks using customer-managed keys provides more control and greater flexibility in key management. This is a common requirement in many regulatory and industry compliance standards."
                      + displayName = "Azure Kubernetes Service clusters both operating systems and data disks should be encrypted by customer-managed keys"
                    }
                  + type          = "String"
                }
              + AzureBatchCMKEffect        = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Use customer-managed keys (CMKs) to manage the encryption at rest of your Batch account's data. By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/Batch-CMK."
                      + displayName = "Azure Batch account should use customer-managed keys to encrypt data"
                    }
                  + type          = "String"
                }
              + CognitiveServicesCMKEffect = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk."
                      + displayName = "Cognitive Services accounts should enable data encryption with a customer-managed key (CMK)"
                    }
                  + type          = "String"
                }
              + CosmosCMKEffect            = {
                  + allowedValues = [
                      + "audit",
                      + "deny",
                      + "disabled",
                    ]
                  + defaultValue  = "audit"
                  + metadata      = {
                      + description = "Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk."
                      + displayName = "Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest"
                    }
                  + type          = "String"
                }
              + DataBoxCMKEffect           = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Use a customer-managed key to control the encryption of the device unlock password for Azure Data Box. Customer-managed keys also help manage access to the device unlock password by the Data Box service in order to prepare the device and copy data in an automated manner. The data on the device itself is already encrypted at rest with Advanced Encryption Standard 256-bit encryption, and the device unlock password is encrypted by default with a Microsoft managed key."
                      + displayName = "Azure Data Box jobs should use a customer-managed key to encrypt the device unlock password"
                    }
                  + type          = "String"
                }
              + EncryptedVMDisksEffect     = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "Virtual machines without an enabled disk encryption will be monitored by Azure Security Center as recommendations."
                      + displayName = "Disk encryption should be applied on virtual machines"
                    }
                  + type          = "String"
                }
              + HealthcareAPIsCMKEffect    = {
                  + allowedValues = [
                      + "audit",
                      + "disabled",
                    ]
                  + defaultValue  = "audit"
                  + metadata      = {
                      + description = "Use a customer-managed key to control the encryption at rest of the data stored in Azure API for FHIR when this is a regulatory or compliance requirement. Customer-managed keys also deliver double encryption by adding a second layer of encryption on top of the default one done with service-managed keys."
                      + displayName = "Azure API for FHIR should use a customer-managed key (CMK) to encrypt data at rest"
                    }
                  + type          = "String"
                }
              + MySQLCMKEffect             = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management."
                      + displayName = "Azure MySQL servers bring your own key data protection should be enabled"
                    }
                  + type          = "String"
                }
              + PostgreSQLCMKEffect        = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management."
                      + displayName = "Azure PostgreSQL servers bring your own key data protection should be enabled"
                    }
                  + type          = "String"
                }
              + SqlServerTDECMKEffect      = {
                  + allowedValues = [
                      + "AuditIfNotExists",
                      + "Disabled",
                    ]
                  + defaultValue  = "AuditIfNotExists"
                  + metadata      = {
                      + description = "Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement."
                      + displayName = "SQL servers should use customer-managed keys to encrypt data at rest"
                    }
                  + type          = "String"
                }
              + StorageCMKEffect           = {
                  + allowedValues = [
                      + "Audit",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Secure your storage account with greater flexibility using customer-managed keys (CMKs). When you specify a CMK, that key is used to protect and control access to the key that encrypts your data. Using CMKs provides additional capabilities to control rotation of the key encryption key or cryptographically erase data."
                      + displayName = "Storage accounts should use customer-managed key (CMK) for encryption, no deny as this would result in not able to create storage account because the first need of MSI for encryption"
                    }
                  + type          = "String"
                }
              + StreamAnalyticsCMKEffect   = {
                  + allowedValues = [
                      + "audit",
                      + "deny",
                      + "disabled",
                    ]
                  + defaultValue  = "audit"
                  + metadata      = {
                      + description = "Use customer-managed keys when you want to securely store any metadata and private data assets of your Stream Analytics jobs in your storage account. This gives you total control over how your Stream Analytics data is encrypted."
                      + displayName = "Azure Stream Analytics jobs should use customer-managed keys to encrypt data"
                    }
                  + type          = "String"
                }
              + SynapseWorkspaceCMKEffect  = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Use customer-managed keys to control the encryption at rest of the data stored in Azure Synapse workspaces. Customer-managed keys deliver double encryption by adding a second layer of encryption on top of the default encryption with service-managed keys."
                      + displayName = "Azure Synapse workspaces should use customer-managed keys to encrypt data at rest"
                    }
                  + type          = "String"
                }
              + WorkspaceCMKEffect         = {
                  + allowedValues = [
                      + "Audit",
                      + "Deny",
                      + "Disabled",
                    ]
                  + defaultValue  = "Audit"
                  + metadata      = {
                      + description = "Manage encryption at rest of your Azure Machine Learning workspace data with customer-managed keys (CMK). By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/azureml-workspaces-cmk."
                      + displayName = "Azure Machine Learning workspaces should be encrypted with a customer-managed key (CMK)"
                    }
                  + type          = "String"
                }
            }
        )
      + policy_type         = "Custom"

      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('ACRCmkEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580"
          + reference_id         = "ACRCmkDeny"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('AksCmkEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67"
          + reference_id         = "AksCmkDeny"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('WorkspaceCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8"
          + reference_id         = "WorkspaceCMK"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('CognitiveServicesCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d"
          + reference_id         = "CognitiveServicesCMK"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('CosmosCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f"
          + reference_id         = "CosmosCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('DataBoxCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae"
          + reference_id         = "DataBoxCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('StreamAnalyticsCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7"
          + reference_id         = "StreamAnalyticsCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('SynapseWorkspaceCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385"
          + reference_id         = "SynapseWorkspaceCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('StorageCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25"
          + reference_id         = "StorageCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('MySQLCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833"
          + reference_id         = "MySQLCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('PostgreSQLCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274"
          + reference_id         = "PostgreSQLCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('SqlServerTDECMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd"
          + reference_id         = "SqlServerTDECMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('HealthcareAPIsCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119"
          + reference_id         = "HealthcareAPIsCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('AzureBatchCMKEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a"
          + reference_id         = "AzureBatchCMKEffect"
        }
      + policy_definition_reference {
          + parameter_values     = jsonencode(
                {
                  + effect = {
                      + value = "[parameters('EncryptedVMDisksEffect')]"
                    }
                }
            )
          + policy_definition_id = "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d"
          + reference_id         = "EncryptedVMDisksEffect"
        }
    }

  # module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/45edd3fd-33b2-5ea6-8c94-f54017aa2fb8"] will be created
  + resource "azurerm_role_definition" "enterprise_scale" {
      + assignable_scopes           = [
          + "/providers/Microsoft.Management/managementGroups/myorg",
        ]
      + description                 = "Security Administrator role with a horizontal view across the entire Azure estate and the Azure Key Vault purge policy."
      + id                          = (known after apply)
      + name                        = "[MYORG] Security-Operations"
      + role_definition_id          = "45edd3fd-33b2-5ea6-8c94-f54017aa2fb8"
      + role_definition_resource_id = (known after apply)
      + scope                       = "/providers/Microsoft.Management/managementGroups/myorg"

      + permissions {
          + actions     = [
              + "*/read",
              + "*/register/action",
              + "Microsoft.KeyVault/locations/deletedVaults/purge/action",
              + "Microsoft.PolicyInsights/*",
              + "Microsoft.Authorization/policyAssignments/*",
              + "Microsoft.Authorization/policyDefinitions/*",
              + "Microsoft.Authorization/policyExemptions/*",
              + "Microsoft.Authorization/policySetDefinitions/*",
              + "Microsoft.Insights/alertRules/*",
              + "Microsoft.Resources/deployments/*",
              + "Microsoft.Security/*",
              + "Microsoft.Support/*",
            ]
          + not_actions = []
        }
    }

  # module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/5cf0b2fa-baeb-5b01-ab0a-4f00c7b453d7"] will be created
  + resource "azurerm_role_definition" "enterprise_scale" {
      + assignable_scopes           = [
          + "/providers/Microsoft.Management/managementGroups/myorg",
        ]
      + description                 = "Contributor role granted for application/operations team at resource group level"
      + id                          = (known after apply)
      + name                        = "[MYORG] Application-Owners"
      + role_definition_id          = "5cf0b2fa-baeb-5b01-ab0a-4f00c7b453d7"
      + role_definition_resource_id = (known after apply)
      + scope                       = "/providers/Microsoft.Management/managementGroups/myorg"

      + permissions {
          + actions     = [
              + "*",
            ]
          + not_actions = [
              + "Microsoft.Authorization/*/write",
              + "Microsoft.Network/publicIPAddresses/write",
              + "Microsoft.Network/virtualNetworks/write",
              + "Microsoft.KeyVault/locations/deletedVaults/purge/action",
            ]
        }
    }

  # module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/a5d74958-e8d8-535b-8f16-8d5a9a490db6"] will be created
  + resource "azurerm_role_definition" "enterprise_scale" {
      + assignable_scopes           = [
          + "/providers/Microsoft.Management/managementGroups/myorg",
        ]
      + description                 = "Platform-wide global connectivity management: virtual networks, UDRs, NSGs, NVAs, VPN, Azure ExpressRoute, and others"
      + id                          = (known after apply)
      + name                        = "[MYORG] Network-Management"
      + role_definition_id          = "a5d74958-e8d8-535b-8f16-8d5a9a490db6"
      + role_definition_resource_id = (known after apply)
      + scope                       = "/providers/Microsoft.Management/managementGroups/myorg"

      + permissions {
          + actions     = [
              + "*/read",
              + "Microsoft.Network/*",
              + "Microsoft.Resources/deployments/*",
              + "Microsoft.Support/*",
            ]
          + not_actions = []
        }
    }

  # module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/d65e6ae5-61c2-59c2-8abe-d2debdfdb0c8"] will be created
  + resource "azurerm_role_definition" "enterprise_scale" {
      + assignable_scopes           = [
          + "/providers/Microsoft.Management/managementGroups/myorg",
        ]
      + description                 = "Delegated role for subscription owner generated from subscription Owner role"
      + id                          = (known after apply)
      + name                        = "[MYORG] Subscription-Owner"
      + role_definition_id          = "d65e6ae5-61c2-59c2-8abe-d2debdfdb0c8"
      + role_definition_resource_id = (known after apply)
      + scope                       = "/providers/Microsoft.Management/managementGroups/myorg"

      + permissions {
          + actions     = [
              + "*",
            ]
          + not_actions = [
              + "Microsoft.Authorization/*/write",
              + "Microsoft.Network/vpnGateways/*",
              + "Microsoft.Network/expressRouteCircuits/*",
              + "Microsoft.Network/routeTables/write",
              + "Microsoft.Network/vpnSites/*",
            ]
        }
    }

  # module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/de486c30-8f89-5279-8078-fe24903ddea7"] will be created
  + resource "azurerm_role_definition" "enterprise_scale" {
      + assignable_scopes           = [
          + "/providers/Microsoft.Management/managementGroups/myorg",
        ]
      + description                 = "Enterprise-scale custom Role Definition. Grants full access to manage Virtual Network subnets, but no other network resources."
      + id                          = (known after apply)
      + name                        = "[MYORG] Network-Subnet-Contributor"
      + role_definition_id          = "de486c30-8f89-5279-8078-fe24903ddea7"
      + role_definition_resource_id = (known after apply)
      + scope                       = "/providers/Microsoft.Management/managementGroups/myorg"

      + permissions {
          + actions     = [
              + "Microsoft.Authorization/*/read",
              + "Microsoft.Insights/alertRules/*",
              + "Microsoft.ResourceHealth/availabilityStatuses/read",
              + "Microsoft.Resources/deployments/*",
              + "Microsoft.Resources/subscriptions/resourceGroups/read",
              + "Microsoft.Support/*",
              + "Microsoft.Network/*/read",
              + "Microsoft.Network/virtualNetworks/subnets/*",
            ]
          + not_actions = []
        }
    }

  # module.core.module.alz.azurerm_subscription_template_deployment.telemetry_core[0] will be created
  + resource "azurerm_subscription_template_deployment" "telemetry_core" {
      + id                 = (known after apply)
      + location           = "eastus"
      + name               = (known after apply)
      + output_content     = (known after apply)
      + parameters_content = (known after apply)
      + template_content   = jsonencode(
            {
              + "$schema"      = "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
              + contentVersion = "1.0.0.0"
              + outputs        = {
                  + telemetry = {
                      + type  = "String"
                      + value = "For more information, see https://aka.ms/alz/tf/telemetry"
                    }
                }
              + parameters     = {}
              + resources      = []
              + variables      = {}
            }
        )
    }

  # module.core.module.alz.random_id.telem[0] will be created
  + resource "random_id" "telem" {
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 4
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.core.module.alz.time_sleep.after_azurerm_management_group will be created
  + resource "time_sleep" "after_azurerm_management_group" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_management_group_level_1" = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg",
                ]
            )
          + "azurerm_management_group_level_2" = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg-decommissioned",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones",
                  + "/providers/Microsoft.Management/managementGroups/myorg-platform",
                  + "/providers/Microsoft.Management/managementGroups/myorg-sandboxes",
                ]
            )
          + "azurerm_management_group_level_3" = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg-connectivity",
                  + "/providers/Microsoft.Management/managementGroups/myorg-identity",
                  + "/providers/Microsoft.Management/managementGroups/myorg-management",
                  + "/providers/Microsoft.Management/managementGroups/myorg-online-example-1",
                  + "/providers/Microsoft.Management/managementGroups/myorg-online-example-2",
                ]
            )
          + "azurerm_management_group_level_4" = jsonencode([])
          + "azurerm_management_group_level_5" = jsonencode([])
          + "azurerm_management_group_level_6" = jsonencode([])
        }
    }

  # module.core.module.alz.time_sleep.after_azurerm_policy_assignment will be created
  + resource "time_sleep" "after_azurerm_policy_assignment" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_management_group_policy_assignment_enterprise_scale" = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET",
                  + "/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP",
                  + "/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet",
                  + "/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg",
                  + "/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL",
                  + "/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics",
                  + "/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations",
                  + "/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations",
                  + "/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations",
                  + "/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
                ]
            )
        }
    }

  # module.core.module.alz.time_sleep.after_azurerm_policy_definition will be created
  + resource "time_sleep" "after_azurerm_policy_definition" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_policy_definition_enterprise_scale" = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin",
                ]
            )
        }
    }

  # module.core.module.alz.time_sleep.after_azurerm_policy_set_definition will be created
  + resource "time_sleep" "after_azurerm_policy_set_definition" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_policy_set_definition_enterprise_scale" = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK",
                ]
            )
        }
    }

  # module.core.module.alz.time_sleep.after_azurerm_role_assignment will be created
  + resource "time_sleep" "after_azurerm_role_assignment" {
      + create_duration  = "0s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_role_assignment_enterprise_scale" = jsonencode([])
          + "module_role_assignments_for_policy"       = jsonencode(
                [
                  + "/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET",
                  + "/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET",
                  + "/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL",
                  + "/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring",
                  + "/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring",
                ]
            )
        }
    }

  # module.core.module.alz.time_sleep.after_azurerm_role_definition will be created
  + resource "time_sleep" "after_azurerm_role_definition" {
      + create_duration  = "60s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_role_definition_enterprise_scale" = jsonencode(
                [
                  + "/providers/Microsoft.Authorization/roleDefinitions/45edd3fd-33b2-5ea6-8c94-f54017aa2fb8",
                  + "/providers/Microsoft.Authorization/roleDefinitions/5cf0b2fa-baeb-5b01-ab0a-4f00c7b453d7",
                  + "/providers/Microsoft.Authorization/roleDefinitions/a5d74958-e8d8-535b-8f16-8d5a9a490db6",
                  + "/providers/Microsoft.Authorization/roleDefinitions/d65e6ae5-61c2-59c2-8abe-d2debdfdb0c8",
                  + "/providers/Microsoft.Authorization/roleDefinitions/de486c30-8f89-5279-8078-fe24903ddea7",
                ]
            )
        }
    }

  # module.management.module.alz.azurerm_automation_account.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-automation"] will be created
  + resource "azurerm_automation_account" "management" {
      + dsc_primary_access_key        = (sensitive value)
      + dsc_secondary_access_key      = (sensitive value)
      + dsc_server_endpoint           = (known after apply)
      + hybrid_service_url            = (known after apply)
      + id                            = (known after apply)
      + local_authentication_enabled  = true
      + location                      = "northeurope"
      + name                          = "myorg-automation"
      + private_endpoint_connection   = (known after apply)
      + public_network_access_enabled = true
      + resource_group_name           = "myorg-mgmt"
      + sku_name                      = "Basic"
      + tags                          = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }

      + encryption {
          + key_source                = (known after apply)
          + key_vault_key_id          = (known after apply)
          + user_assigned_identity_id = (known after apply)
        }
    }

  # module.management.module.alz.azurerm_log_analytics_linked_service.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la/linkedServices/Automation"] will be created
  + resource "azurerm_log_analytics_linked_service" "management" {
      + id                  = (known after apply)
      + name                = (known after apply)
      + read_access_id      = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-automation"
      + resource_group_name = "myorg-mgmt"
      + workspace_id        = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "AgentHealthAssessment"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/AgentHealthAssessment"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AntiMalware(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "AntiMalware"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/AntiMalware"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "ChangeTracking"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/ChangeTracking"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAdvancedThreatProtection(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "SQLAdvancedThreatProtection"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/SQLAdvancedThreatProtection"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAssessment(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "SQLAssessment"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/SQLAssessment"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLVulnerabilityAssessment(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "SQLVulnerabilityAssessment"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/SQLVulnerabilityAssessment"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Security(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "Security"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/Security"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SecurityInsights(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "SecurityInsights"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/SecurityInsights"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ServiceMap(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "ServiceMap"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/ServiceMap"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Updates(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "Updates"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/Updates"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/VMInsights(myorg-la)"] will be created
  + resource "azurerm_log_analytics_solution" "management" {
      + id                    = (known after apply)
      + location              = "northeurope"
      + resource_group_name   = "myorg-mgmt"
      + solution_name         = "VMInsights"
      + tags                  = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_name        = "myorg-la"
      + workspace_resource_id = "/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"

      + plan {
          + name      = (known after apply)
          + product   = "OMSGallery/VMInsights"
          + publisher = "Microsoft"
        }
    }

  # module.management.module.alz.azurerm_log_analytics_workspace.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"] will be created
  + resource "azurerm_log_analytics_workspace" "management" {
      + allow_resource_only_permissions    = true
      + daily_quota_gb                     = -1
      + id                                 = (known after apply)
      + internet_ingestion_enabled         = true
      + internet_query_enabled             = true
      + local_authentication_disabled      = false
      + location                           = "northeurope"
      + name                               = "myorg-la"
      + primary_shared_key                 = (sensitive value)
      + reservation_capacity_in_gb_per_day = (known after apply)
      + resource_group_name                = "myorg-mgmt"
      + retention_in_days                  = 60
      + secondary_shared_key               = (sensitive value)
      + sku                                = "PerGB2018"
      + tags                               = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
      + workspace_id                       = (known after apply)
    }

  # module.management.module.alz.azurerm_resource_group.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt"] will be created
  + resource "azurerm_resource_group" "management" {
      + id       = (known after apply)
      + location = "northeurope"
      + name     = "myorg-mgmt"
      + tags     = {
          + "demo_type"  = "Deploy management resources using multiple module declarations"
          + "deployedBy" = "terraform/azure/caf-enterprise-scale/examples/l400-multi"
        }
    }

  # module.management.module.alz.azurerm_subscription_template_deployment.telemetry_core[0] will be created
  + resource "azurerm_subscription_template_deployment" "telemetry_core" {
      + id                 = (known after apply)
      + location           = "eastus"
      + name               = (known after apply)
      + output_content     = (known after apply)
      + parameters_content = (known after apply)
      + template_content   = jsonencode(
            {
              + "$schema"      = "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
              + contentVersion = "1.0.0.0"
              + outputs        = {
                  + telemetry = {
                      + type  = "String"
                      + value = "For more information, see https://aka.ms/alz/tf/telemetry"
                    }
                }
              + parameters     = {}
              + resources      = []
              + variables      = {}
            }
        )
    }

  # module.management.module.alz.azurerm_subscription_template_deployment.telemetry_management[0] will be created
  + resource "azurerm_subscription_template_deployment" "telemetry_management" {
      + id                 = (known after apply)
      + location           = "eastus"
      + name               = (known after apply)
      + output_content     = (known after apply)
      + parameters_content = (known after apply)
      + template_content   = jsonencode(
            {
              + "$schema"      = "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#"
              + contentVersion = "1.0.0.0"
              + outputs        = {
                  + telemetry = {
                      + type  = "String"
                      + value = "For more information, see https://aka.ms/alz/tf/telemetry"
                    }
                }
              + parameters     = {}
              + resources      = []
              + variables      = {}
            }
        )
    }

  # module.management.module.alz.random_id.telem[0] will be created
  + resource "random_id" "telem" {
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 4
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.management.module.alz.time_sleep.after_azurerm_management_group will be created
  + resource "time_sleep" "after_azurerm_management_group" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_management_group_level_1" = jsonencode([])
          + "azurerm_management_group_level_2" = jsonencode([])
          + "azurerm_management_group_level_3" = jsonencode([])
          + "azurerm_management_group_level_4" = jsonencode([])
          + "azurerm_management_group_level_5" = jsonencode([])
          + "azurerm_management_group_level_6" = jsonencode([])
        }
    }

  # module.management.module.alz.time_sleep.after_azurerm_policy_assignment will be created
  + resource "time_sleep" "after_azurerm_policy_assignment" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_management_group_policy_assignment_enterprise_scale" = jsonencode([])
        }
    }

  # module.management.module.alz.time_sleep.after_azurerm_policy_definition will be created
  + resource "time_sleep" "after_azurerm_policy_definition" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_policy_definition_enterprise_scale" = jsonencode([])
        }
    }

  # module.management.module.alz.time_sleep.after_azurerm_policy_set_definition will be created
  + resource "time_sleep" "after_azurerm_policy_set_definition" {
      + create_duration  = "30s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_policy_set_definition_enterprise_scale" = jsonencode([])
        }
    }

  # module.management.module.alz.time_sleep.after_azurerm_role_assignment will be created
  + resource "time_sleep" "after_azurerm_role_assignment" {
      + create_duration  = "0s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_role_assignment_enterprise_scale" = jsonencode([])
          + "module_role_assignments_for_policy"       = jsonencode([])
        }
    }

  # module.management.module.alz.time_sleep.after_azurerm_role_definition will be created
  + resource "time_sleep" "after_azurerm_role_definition" {
      + create_duration  = "60s"
      + destroy_duration = "0s"
      + id               = (known after apply)
      + triggers         = {
          + "azurerm_role_definition_enterprise_scale" = jsonencode([])
        }
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/roleAssignments/09ee154d-3218-5a7e-a0c5-1fedd34bad78"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "09ee154d-3218-5a7e-a0c5-1fedd34bad78"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-connectivity"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/roleAssignments/7dd05178-6ed9-5492-aec4-6aa6b751dfec"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "7dd05178-6ed9-5492-aec4-6aa6b751dfec"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-identity"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/roleAssignments/a62665d7-8d13-51ab-8be4-9ea429c23fd0"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "a62665d7-8d13-51ab-8be4-9ea429c23fd0"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-identity"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/225d88be-c156-56d7-b3d8-98c92f89df55"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "225d88be-c156-56d7-b3d8-98c92f89df55"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/18ed5180-3e48-46fd-8541-4ea054d57064"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/daf047ca-ba24-52c2-a5aa-353159c5bf4e"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "daf047ca-ba24-52c2-a5aa-353159c5bf4e"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/57f7cd66-3aee-5cae-9e72-95b0d6ae88c3"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "57f7cd66-3aee-5cae-9e72-95b0d6ae88c3"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/55eb3178-acde-5c10-b8b1-d849a3f74f07"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "55eb3178-acde-5c10-b8b1-d849a3f74f07"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/8cdce0cc-9bcd-58e3-a2a9-b218bf02a2e0"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "8cdce0cc-9bcd-58e3-a2a9-b218bf02a2e0"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/f674d96a-56cf-5d98-b4b5-10e65fb79aa0"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "f674d96a-56cf-5d98-b4b5-10e65fb79aa0"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/roleAssignments/a9e21c47-edf5-588d-b83f-419dc94bd522"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "a9e21c47-edf5-588d-b83f-419dc94bd522"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-landing-zones"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/roleAssignments/557bcae8-73b9-58d4-827d-ffc33004ac1a"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "557bcae8-73b9-58d4-827d-ffc33004ac1a"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg-management"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/3ddf8e6c-77e0-56fe-8272-1de3cfc86b62"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "3ddf8e6c-77e0-56fe-8272-1de3cfc86b62"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/bae9bc8f-1fb7-536b-a5d3-352b50b98a56"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "bae9bc8f-1fb7-536b-a5d3-352b50b98a56"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/0bff38e2-2896-5b87-ac56-4939b3acb8fa"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "0bff38e2-2896-5b87-ac56-4939b3acb8fa"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/3e183228-ff7d-5294-be28-1d3ca0e19cd8"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "3e183228-ff7d-5294-be28-1d3ca0e19cd8"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/aeccabd7-b572-5fe2-b1ad-659525941097"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "aeccabd7-b572-5fe2-b1ad-659525941097"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/f41cafe7-6f85-5086-8ecd-f10c219a9fed"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "f41cafe7-6f85-5086-8ecd-f10c219a9fed"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/17a099f4-cf89-58a8-b6ca-0a673fbdd4fe"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "17a099f4-cf89-58a8-b6ca-0a673fbdd4fe"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/1e6eb635-dc9a-54d5-9bb5-7506132bff67"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "1e6eb635-dc9a-54d5-9bb5-7506132bff67"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

  # module.core.module.alz.module.role_assignments_for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"].azurerm_role_assignment.for_policy["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/roleAssignments/55ffe1be-e389-5d46-9488-8d6915a8b60e"] will be created
  + resource "azurerm_role_assignment" "for_policy" {
      + id                               = (known after apply)
      + name                             = "55ffe1be-e389-5d46-9488-8d6915a8b60e"
      + principal_id                     = (known after apply)
      + principal_type                   = (known after apply)
      + role_definition_id               = "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
      + role_definition_name             = (known after apply)
      + scope                            = "/providers/Microsoft.Management/managementGroups/myorg"
      + skip_service_principal_aad_check = (known after apply)
    }

Plan: 427 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: 
module.connectivity.module.alz.random_id.telem[0]: Creating...
module.core.module.alz.random_id.telem[0]: Creating...
module.management.module.alz.random_id.telem[0]: Creating...
module.connectivity.module.alz.random_id.telem[0]: Creation complete after 0s [id=cOnikQ]
module.management.module.alz.random_id.telem[0]: Creation complete after 0s [id=RsMJ5w]
module.core.module.alz.random_id.telem[0]: Creation complete after 0s [id=U2YC_w]
module.core.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Creating...
module.core.module.alz.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg"]: Creating...
module.core.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope"]: Creating...
module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns"]: Creating...
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Creating...
module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope"]: Creating...
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_connectivity[0]: Creating...
module.connectivity.module.alz.time_sleep.after_azurerm_management_group: Creating...
module.core.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope]
module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns]
module.connectivity.module.alz.azurerm_resource_group.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_connectivity[0]: Still creating... [10s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_management_group: Still creating... [10s elapsed]
module.core.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg"]: Creation complete after 35s [id=/providers/Microsoft.Management/managementGroups/myorg]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net"]: Creating...
module.core.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Creation complete after 35s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/providers/Microsoft.Resources/deployments/pid-36dcde81-8c33-4da0-8dc3-265381502ccb_v3.1.2_0011_536602ff]
module.connectivity.module.alz.azurerm_virtual_network.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"]: Creating...
module.connectivity.module.alz.azurerm_virtual_network.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope"]: Creation complete after 4s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope]
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_connectivity[0]: Still creating... [20s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_management_group: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_connectivity[0]: Still creating... [30s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_management_group: Creation complete after 30s [id=2023-01-30T18:14:48Z]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Creation complete after 35s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/providers/Microsoft.Resources/deployments/pid-36dcde81-8c33-4da0-8dc3-265381502ccb_v3.1.2_0000_70e9e291]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_subscription_template_deployment.telemetry_connectivity[0]: Creation complete after 35s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/providers/Microsoft.Resources/deployments/pid-97603aac-98f8-4a55-92fc-4c78378c9ba5_v3.1.2_0009_70e9e291]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net"]: Creation complete after 34s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io"]: Creation complete after 35s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net"]: Creation complete after 36s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com"]: Creation complete after 34s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net"]: Still creating... [11s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com]
module.connectivity.module.alz.azurerm_virtual_network.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"]: Creating...
module.connectivity.module.alz.azurerm_virtual_network.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope"]: Creation complete after 5s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net"]: Still creating... [21s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net"]: Still creating... [31s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_definition: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net]
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope/virtualNetworkPeerings/peering-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net"]: Still creating... [11s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_management[0]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com]
module.management.module.alz.azurerm_resource_group.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt"]: Creating...
module.management.module.alz.azurerm_resource_group.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt]
module.management.module.alz.azurerm_log_analytics_workspace.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net"]: Still creating... [20s elapsed]
module.management.module.alz.azurerm_automation_account.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-automation"]: Creating...
module.connectivity.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [10s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net"]: Still creating... [21s elapsed]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope/virtualNetworkPeerings/peering-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [11s elapsed]
module.management.module.alz.azurerm_automation_account.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-automation"]: Creation complete after 5s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-automation]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [11s elapsed]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [11s elapsed]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_management[0]: Still creating... [11s elapsed]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope/virtualNetworkPeerings/peering-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 12s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-westeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-westeurope/virtualNetworkPeerings/peering-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-decommissioned"]: Creating...
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-platform"]: Creating...
module.management.module.alz.azurerm_log_analytics_workspace.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net"]: Still creating... [30s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-sandboxes"]: Creating...
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net"]: Still creating... [31s elapsed]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_management[0]: Still creating... [21s elapsed]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [21s elapsed]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [21s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-decommissioned"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-platform"]: Still creating... [10s elapsed]
module.management.module.alz.azurerm_log_analytics_workspace.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-landing-zones"]: Creating...
module.connectivity.module.alz.time_sleep.after_azurerm_policy_definition: Creation complete after 30s [id=2023-01-30T18:18:33Z]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-sandboxes"]: Still creating... [10s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [30s elapsed]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_management[0]: Still creating... [31s elapsed]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [31s elapsed]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Still creating... [31s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-decommissioned"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-platform"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_virtual_network_peering.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-connectivity-northeurope/providers/Microsoft.Network/virtualNetworks/myorg-hub-northeurope/virtualNetworkPeerings/peering-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.management.module.alz.azurerm_log_analytics_workspace.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-landing-zones"]: Still creating... [10s elapsed]
module.management.module.alz.azurerm_log_analytics_workspace.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_management[0]: Creation complete after 35s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/providers/Microsoft.Resources/deployments/pid-6fffb9f9-2691-412a-837e-3f72dcfe70cb_v3.1.2_0003_46c309e7]
module.management.module.alz.azurerm_subscription_template_deployment.telemetry_core[0]: Creation complete after 36s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/providers/Microsoft.Resources/deployments/pid-36dcde81-8c33-4da0-8dc3-265381502ccb_v3.1.2_0000_46c309e7]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-platform"]: Creation complete after 25s [id=/providers/Microsoft.Management/managementGroups/myorg-platform]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-decommissioned"]: Creation complete after 26s [id=/providers/Microsoft.Management/managementGroups/myorg-decommissioned]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-sandboxes"]: Still creating... [20s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [40s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-sandboxes"]: Creation complete after 24s [id=/providers/Microsoft.Management/managementGroups/myorg-sandboxes]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-landing-zones"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-landing-zones"]: Creation complete after 24s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [50s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_role_definition: Creation complete after 1m0s [id=2023-01-30T18:19:06Z]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [40s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [40s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [40s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [50s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [50s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [50s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [1m0s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 1m3s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [1m0s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.tip1.powerquery.microsoft.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [1m0s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 1m2s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 1m2s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.kusto.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehdinsight.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices-provisioning.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.digitaltwins.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.prod.migration.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.kubernetesconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurewebsites.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redisenterprise.cache.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [21s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [31s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.token.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.search.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.servicebus.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.media.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 35s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurestaticapps.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 36s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.api.azureml.ms/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.postgres.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.gremlin.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [31s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-devices.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 38s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 39s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 34s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ne.backup.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.datafactory.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.his.arc.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purviewstudio.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.purview.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.web.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.service.signalr.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.notebooks.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.batch.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.developer.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cognitiveservices.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.adf.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.table.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.cassandra.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.guestconfiguration.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dfs.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.redis.cache.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.blob.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dev.azuresynapse.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mongo.cosmos.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.pbidedicated.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.analysis.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.afs.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.file.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azconfig.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [31s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.directline.botframework.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.managedhsm.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.siterecovery.windowsazure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mysql.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.queue.core.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_set_definition: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.dicom.azurehealthcareapis.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.management.module.alz.azurerm_log_analytics_linked_service.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la/linkedServices/Automation"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.management.module.alz.azurerm_log_analytics_linked_service.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la/linkedServices/Automation"]: Creation complete after 8s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-la/linkedServices/Automation]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AntiMalware(myorg-la)"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.documents.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [10s elapsed]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/VMInsights(myorg-la)"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AntiMalware(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AntiMalware(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAssessment(myorg-la)"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/VMInsights(myorg-la)"]: Creation complete after 0s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/VMInsights(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAdvancedThreatProtection(myorg-la)"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAssessment(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAssessment(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(myorg-la)"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAdvancedThreatProtection(myorg-la)"]: Creation complete after 0s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLAdvancedThreatProtection(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Security(myorg-la)"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [20s elapsed]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SecurityInsights(myorg-la)"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [20s elapsed]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Security(myorg-la)"]: Creation complete after 2s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Security(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ServiceMap(myorg-la)"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 33s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(myorg-la)"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SecurityInsights(myorg-la)"]: Creation complete after 2s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SecurityInsights(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ServiceMap(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ServiceMap(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLVulnerabilityAssessment(myorg-la)"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Updates(myorg-la)"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(myorg-la)]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-1"]: Creating...
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Updates(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/Updates(myorg-la)]
module.management.module.alz.azurerm_log_analytics_solution.management["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLVulnerabilityAssessment(myorg-la)"]: Creation complete after 1s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-mgmt/providers/Microsoft.OperationsManagement/solutions/SQLVulnerabilityAssessment(myorg-la)]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-connectivity"]: Creating...
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-management"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.northeurope.azmk8s.io/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-identity"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 31s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.eventgrid.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [21s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-2"]: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.mariadb.database.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.management.module.alz.time_sleep.after_azurerm_management_group: Creating...
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Still creating... [30s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.azure-api.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-d55cd62f-27ec-52e7-8025-908b7ff1de27]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-1"]: Still creating... [10s elapsed]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.connectivity.module.alz.azurerm_private_dns_zone_virtual_network_link.connectivity["/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09"]: Creation complete after 32s [id=/subscriptions/11eb2a49-f2be-48ee-a1b3-113a01d79ffc/resourceGroups/myorg-dns/providers/Microsoft.Network/privateDnsZones/privatelink.webpubsub.azure.com/virtualNetworkLinks/11eb2a49-f2be-48ee-a1b3-113a01d79ffc-0c31c984-71b6-58ab-92fb-381b7f540f09]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-management"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-connectivity"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-identity"]: Still creating... [10s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_set_definition: Creation complete after 31s [id=2023-01-30T18:26:20Z]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-2"]: Still creating... [10s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_assignment: Creating...
module.management.module.alz.time_sleep.after_azurerm_management_group: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-1"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-connectivity"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-management"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-identity"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-1"]: Creation complete after 25s [id=/providers/Microsoft.Management/managementGroups/myorg-online-example-1]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-connectivity"]: Creation complete after 24s [id=/providers/Microsoft.Management/managementGroups/myorg-connectivity]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-2"]: Still creating... [20s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_assignment: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-identity"]: Creation complete after 23s [id=/providers/Microsoft.Management/managementGroups/myorg-identity]
module.management.module.alz.time_sleep.after_azurerm_management_group: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-management"]: Creation complete after 26s [id=/providers/Microsoft.Management/managementGroups/myorg-management]
module.core.module.alz.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-online-example-2"]: Creation complete after 23s [id=/providers/Microsoft.Management/managementGroups/myorg-online-example-2]
module.core.module.alz.time_sleep.after_azurerm_management_group: Creating...
module.connectivity.module.alz.time_sleep.after_azurerm_policy_assignment: Still creating... [20s elapsed]
module.management.module.alz.time_sleep.after_azurerm_management_group: Creation complete after 30s [id=2023-01-30T18:26:42Z]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Creating...
module.management.module.alz.time_sleep.after_azurerm_policy_definition: Creating...
module.core.module.alz.time_sleep.after_azurerm_management_group: Still creating... [10s elapsed]
module.connectivity.module.alz.time_sleep.after_azurerm_policy_assignment: Creation complete after 30s [id=2023-01-30T18:26:50Z]
module.connectivity.module.alz.time_sleep.after_azurerm_role_assignment: Creating...
module.connectivity.module.alz.time_sleep.after_azurerm_role_assignment: Creation complete after 0s [id=2023-01-30T18:26:50Z]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [10s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [10s elapsed]
module.core.module.alz.time_sleep.after_azurerm_management_group: Still creating... [20s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [20s elapsed]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [20s elapsed]
module.core.module.alz.time_sleep.after_azurerm_management_group: Still creating... [30s elapsed]
module.core.module.alz.time_sleep.after_azurerm_management_group: Creation complete after 30s [id=2023-01-30T18:27:04Z]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/a5d74958-e8d8-535b-8f16-8d5a9a490db6"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Creating...
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/a5d74958-e8d8-535b-8f16-8d5a9a490db6"]: Creation complete after 3s [id=/providers/Microsoft.Authorization/roleDefinitions/a5d74958-e8d8-535b-8f16-8d5a9a490db6|/providers/Microsoft.Management/managementGroups/myorg]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Creating...
module.management.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [30s elapsed]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [30s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_definition: Creation complete after 30s [id=2023-01-30T18:27:12Z]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [10s elapsed]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [20s elapsed]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [30s elapsed]
module.management.module.alz.time_sleep.after_azurerm_role_definition: Creation complete after 1m0s [id=2023-01-30T18:27:42Z]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-VmSize]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-HbiWorkspace]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Custom-Route-Table]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-RemoteLoginPortPublicAccess]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogAnalytics]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/45edd3fd-33b2-5ea6-8c94-f54017aa2fb8"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-VirtualNetwork]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Creating...
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/45edd3fd-33b2-5ea6-8c94-f54017aa2fb8"]: Creation complete after 3s [id=/providers/Microsoft.Authorization/roleDefinitions/45edd3fd-33b2-5ea6-8c94-f54017aa2fb8|/providers/Microsoft.Management/managementGroups/myorg]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]: Creation complete after 1m37s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Compute-SubnetId]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/d65e6ae5-61c2-59c2-8abe-d2debdfdb0c8"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peering-To-Non-Approved-VNETs]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/d65e6ae5-61c2-59c2-8abe-d2debdfdb0c8"]: Creation complete after 2s [id=/providers/Microsoft.Authorization/roleDefinitions/d65e6ae5-61c2-59c2-8abe-d2debdfdb0c8|/providers/Microsoft.Management/managementGroups/myorg]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-Sku]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [41s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [51s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [1m1s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-ComputeCluster-Scale]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/de486c30-8f89-5279-8078-fe24903ddea7"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/de486c30-8f89-5279-8078-fe24903ddea7"]: Creation complete after 4s [id=/providers/Microsoft.Authorization/roleDefinitions/de486c30-8f89-5279-8078-fe24903ddea7|/providers/Microsoft.Management/managementGroups/myorg]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [1m1s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicNetworkAccess]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace]
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/5cf0b2fa-baeb-5b01-ab0a-4f00c7b453d7"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Creating...
module.core.module.alz.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/5cf0b2fa-baeb-5b01-ab0a-4f00c7b453d7"]: Creation complete after 2s [id=/providers/Microsoft.Authorization/roleDefinitions/5cf0b2fa-baeb-5b01-ab0a-4f00c7b453d7|/providers/Microsoft.Management/managementGroups/myorg]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Databricks-NoPublicIp]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-PublicAccessWhenBehindVnet]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Audit-MachineLearning-PrivateEndpointId]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AVDScalingPlans]
module.management.module.alz.time_sleep.after_azurerm_policy_set_definition: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [10s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [20s elapsed]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [20s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [30s elapsed]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [30s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [30s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_set_definition: Creation complete after 30s [id=2023-01-30T18:42:54Z]
module.management.module.alz.time_sleep.after_azurerm_policy_assignment: Creating...
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [40s elapsed]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Bastion]
module.management.module.alz.time_sleep.after_azurerm_policy_assignment: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [50s elapsed]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [50s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_assignment: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [1m0s elapsed]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [1m0s elapsed]
module.management.module.alz.time_sleep.after_azurerm_policy_assignment: Creation complete after 30s [id=2023-01-30T18:43:24Z]
module.management.module.alz.time_sleep.after_azurerm_role_assignment: Creating...
module.management.module.alz.time_sleep.after_azurerm_role_assignment: Creation complete after 0s [id=2023-01-30T18:43:24Z]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [1m10s elapsed]
module.core.module.alz.time_sleep.after_azurerm_role_definition: Creation complete after 1m0s [id=2023-01-30T18:43:31Z]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deny-MachineLearning-Aks]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]: Creation complete after 1m32s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork]
module.core.module.alz.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]: Creation complete after 1m31s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC]
module.core.module.alz.time_sleep.after_azurerm_policy_definition: Creating...
module.core.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [10s elapsed]
module.core.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [20s elapsed]
module.core.module.alz.time_sleep.after_azurerm_policy_definition: Still creating... [30s elapsed]
module.core.module.alz.time_sleep.after_azurerm_policy_definition: Creation complete after 30s [id=2023-01-30T18:44:23Z]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Creating...
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [41s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [51s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [1m1s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m1s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones]
module.core.module.alz.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics"]: Creation complete after 1m36s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diagnostics-LogAnalytics]
module.core.module.alz.time_sleep.after_azurerm_policy_set_definition: Creating...
module.core.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [10s elapsed]
module.core.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [20s elapsed]
module.core.module.alz.time_sleep.after_azurerm_policy_set_definition: Still creating... [30s elapsed]
module.core.module.alz.time_sleep.after_azurerm_policy_set_definition: Creation complete after 30s [id=2023-01-30T18:46:29Z]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-AKS-HTTPS"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-connectivity/providers/Microsoft.Authorization/policyAssignments/Enable-DDoS-VNET]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Threat]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]: Creation complete after 1m40s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [41s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [51s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m1s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Creation complete after 1m37s [id=/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-MDFC-Config]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Creation complete after 1m37s [id=/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-online-example-1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Creating...
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [21s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [31s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [40s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [41s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [50s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [51s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m0s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m1s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m10s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m11s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m20s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m21s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Still creating... [1m30s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Still creating... [1m31s elapsed]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP"]: Creation complete after 1m37s [id=/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Public-IP]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-online-example-2/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]: Creation complete after 1m38s [id=/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]: Creation complete after 1m40s [id=/providers/Microsoft.Management/managementGroups/myorg/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-landing-zones/providers/Microsoft.Authorization/policyAssignments/Enforce-TLS-SSL]
module.core.module.alz.azurerm_management_group_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]: Creation complete after 1m39s [id=/providers/Microsoft.Management/managementGroups/myorg-identity/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup]
