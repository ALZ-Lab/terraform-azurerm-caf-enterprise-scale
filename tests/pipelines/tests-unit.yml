---
name: "Tests (Unit)"

trigger: none

pool:
  vmImage: ubuntu-20.04

variables:
  - group: csu-tf-environment

jobs:
  - job: matrix_generator
    displayName: "Matrix Generator"
    steps:
      - template: templates/tests-strategy.yml

  - job: backend_generator
    displayName: "Backend Storage Generator"
    steps:
      - template: templates/tests-backend.yml

  - job: run_unit_tests
    displayName: "Unit"
    dependsOn:
      - matrix_generator
      - backend_generator
    strategy:
      matrix: $[ dependencies.matrix_generator.outputs['build_strategy.matrix_json'] ]
    variables:
      STORAGE_ACCOUNT_RSG_NAME: $[ dependencies.backend_generator.outputs['prepare_backend.STORAGE_ACCOUNT_RSG_NAME'] ]
      STORAGE_ACCOUNT_NAME: $[ dependencies.backend_generator.outputs['prepare_backend.STORAGE_ACCOUNT_NAME'] ]
      STORAGE_CONTAINER_NAME: $[ dependencies.backend_generator.outputs['prepare_backend.STORAGE_CONTAINER_NAME'] ]
    steps:
      - template: templates/tests-common.yml

      - task: Bash@3
        displayName: "[terraform fmt] Terraform Linting"
        inputs:
          targetType: "inline"
          script: "make tf-fmt"

      - task: Bash@3
        displayName: "[conftest] Install Pre-requisites"
        inputs:
          targetType: "inline"
          script: "make opa-install"

      - template: templates/tests-loop.yml
        parameters:
          module_name: "Test 001 Baseline"
          module_path: "tests/modules/test_001_baseline"
          run_type: unit

      - template: templates/tests-loop.yml
        parameters:
          module_name: "Test 002 Add Custom Core"
          module_path: "tests/modules/test_002_add_custom_core"
          run_type: unit

      - template: templates/tests-loop.yml
        parameters:
          module_name: "Test 003 Add Management and Connectivity"
          module_path: "tests/modules/test_003_add_mgmt_conn"
          run_type: unit
