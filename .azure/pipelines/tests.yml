name: 'Tests (E2E)'

trigger: none

strategy:
  maxParallel: 8
  matrix: 
    1:
      TF_AZ_VERSION: 2.34.0
      TF_VERSION: 0.13.0
    2:
      TF_AZ_VERSION: 2.45.1
      TF_VERSION: 0.13.0
    3:
      TF_AZ_VERSION: 2.34.0
      TF_VERSION: 0.13.5
    4:
      TF_AZ_VERSION: 2.45.1
      TF_VERSION: 0.13.5
    5:
      TF_AZ_VERSION: 2.34.0
      TF_VERSION: 0.14.0
    6:
      TF_AZ_VERSION: 2.45.1
      TF_VERSION: 0.14.0
    7:
      TF_AZ_VERSION: 2.45.1
      TF_VERSION: 0.14.5
    8:
      TF_AZ_VERSION: 2.45.1
      TF_VERSION: 0.14.5

pool:
  vmImage: ubuntu-20.04

variables:
  SCM: 'AzurePipelines'

steps:
- task: Bash@3
  displayName: 'Terraform (install)'
  inputs:
    targetType: 'inline'
    script: 'make tf-install'

- task: Bash@3
  displayName: 'Terraform (prepare)'
  inputs:
    targetType: 'inline'
    script: 'make tf-prepare'

- task: Bash@3
  displayName: 'Terraform (fmt)'
  inputs:
    targetType: 'inline'
    script: 'make tf-fmt'

- task: Bash@3
  displayName: 'Terraform (init)'
  inputs:
    targetType: 'inline'
    script: 'make tf-init'

- task: Bash@3
  displayName: 'Terraform (plan)'
  inputs:
    targetType: 'inline'
    script: 'make tf-plan'

- task: Bash@3
  displayName: 'Terraform (apply)'
  inputs:
    targetType: 'inline'
    script: 'make tf-apply'

- task: Bash@3
  displayName: 'Terraform (destroy)'
  inputs:
    targetType: 'inline'
    script: 'make tf-destroy'
  condition: always()